(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1572423,      36942]
NotebookOptionsPosition[   1503331,      36014]
NotebookOutlinePosition[   1503905,      36035]
CellTagsIndexPosition[   1503862,      36032]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Cellular Automata ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "Toolbox",
 StyleBox[" - ",
  FontSlant->"Italic"],
 "CAMaT"
}], "Title",
 CellChangeTimes->{{3.4049184209826913`*^9, 3.4049184316279984`*^9}, {
   3.532797576224097*^9, 3.532797599277247*^9}, {3.532797633901388*^9, 
   3.532797672525909*^9}, {3.532798829199704*^9, 3.532798896408342*^9}, {
   3.532799337015476*^9, 3.532799343389991*^9}, {3.57156520365625*^9, 
   3.57156520496875*^9}, {3.648908034582093*^9, 3.6489080357384944`*^9}, 
   3.762707168389442*^9},ExpressionUUID->"c536cd72-7361-4f96-ab99-\
6bd7a4234ac9"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[Copyright]", TraditionalForm]],ExpressionUUID->
  "a192c19b-9689-4452-aa0b-e1323f7afda7"],
 " Pedro Paulo Balbi, 10-September-2024\nUniversidade Presbiteriana Mackenzie"
}], "Subsection",
 CellChangeTimes->{{3.391446147346126*^9, 3.3914461475163713`*^9}, 
   3.391531017112996*^9, {3.391691106659408*^9, 3.3916911104047937`*^9}, {
   3.391975283628685*^9, 3.391975289537181*^9}, {3.391975364525008*^9, 
   3.3919754576489134`*^9}, {3.392757333028644*^9, 3.3927573402690573`*^9}, 
   3.392983829080381*^9, {3.3931468266463647`*^9, 3.393146826806595*^9}, {
   3.3950597771047773`*^9, 3.3950597829431725`*^9}, 3.3951312085828376`*^9, {
   3.404906536041959*^9, 3.404906541349591*^9}, {3.40653865903125*^9, 
   3.40653867434375*^9}, {3.407053767109375*^9, 3.407053767390625*^9}, {
   3.420981928490859*^9, 3.4209819341289663`*^9}, {3.445341981828125*^9, 
   3.44534199021875*^9}, 3.445417898234375*^9, {3.44594531253125*^9, 
   3.44594531271875*^9}, {3.44913727196875*^9, 3.4491372775*^9}, {
   3.479557079865697*^9, 3.479557086370897*^9}, {3.4798379534524*^9, 
   3.4798379535304003`*^9}, {3.4832001205657997`*^9, 3.4832001250508*^9}, {
   3.484149119943*^9, 3.484149120102*^9}, {3.484218113677*^9, 
   3.484218113816*^9}, {3.484479646152*^9, 3.484479649576*^9}, 
   3.4849373320816*^9, {3.490378015543688*^9, 3.490378021566688*^9}, {
   3.495050852906*^9, 3.495050855649*^9}, 3.4953014443026*^9, 
   3.4956289697595*^9, {3.4959673399052*^9, 3.4959673400962*^9}, 
   3.4960748628506813`*^9, {3.496162401604083*^9, 3.496162401788082*^9}, {
   3.496773094744*^9, 3.496773094903*^9}, {3.4971863893334885`*^9, 
   3.497186389492489*^9}, {3.497616880854*^9, 3.497616887965*^9}, 
   3.4976928909845386`*^9, 3.497695533016538*^9, {3.498385819503894*^9, 
   3.498385819639893*^9}, {3.498548714055*^9, 3.498548714163*^9}, {
   3.498563722883*^9, 3.4985637239709997`*^9}, 3.498843263802*^9, {
   3.49890322995767*^9, 3.498903232021671*^9}, {3.527248748502658*^9, 
   3.527248759059825*^9}, {3.528046015138544*^9, 3.528046015264525*^9}, {
   3.5291659611063213`*^9, 3.529165964193906*^9}, 3.5297481818859997`*^9, {
   3.530556658796788*^9, 3.53055665897279*^9}, {3.5310760338313828`*^9, 
   3.531076033960752*^9}, 3.531153897138179*^9, 3.531587451670438*^9, {
   3.5317662142958508`*^9, 3.53176621739077*^9}, {3.532797613344659*^9, 
   3.5327976149692173`*^9}, {3.534165858395469*^9, 3.534165858475469*^9}, {
   3.535287006747353*^9, 3.53528701135758*^9}, {3.535730154216209*^9, 
   3.535730154423593*^9}, {3.540553338627174*^9, 3.540553342250154*^9}, 
   3.540897527916877*^9, {3.5413334722378893`*^9, 3.541333472332185*^9}, {
   3.543170736998382*^9, 3.543170741066895*^9}, 3.543227309907422*^9, {
   3.543428422797159*^9, 3.543428422933181*^9}, {3.543489969555938*^9, 
   3.543489969876591*^9}, 3.544356806484375*^9, {3.544786368352663*^9, 
   3.544786368829722*^9}, {3.544873833433009*^9, 3.544873838295608*^9}, {
   3.545066286504848*^9, 3.5450662866587543`*^9}, {3.548151513059938*^9, 
   3.548151516030658*^9}, {3.54858562365625*^9, 3.54858562396875*^9}, {
   3.554739493984375*^9, 3.55473950265625*^9}, {3.558189239037965*^9, 
   3.558189242589589*^9}, {3.562532834379914*^9, 3.56253283959018*^9}, 
   3.562956526970564*^9, 3.563008650742228*^9, {3.563359776098776*^9, 
   3.563359783372819*^9}, 3.564752333725874*^9, {3.569331837191865*^9, 
   3.569331844718999*^9}, {3.569838623144153*^9, 3.569838623466339*^9}, {
   3.570364802171875*^9, 3.570364803109375*^9}, {3.570445293179357*^9, 
   3.570445293467518*^9}, 3.571072932845693*^9, {3.571395268370431*^9, 
   3.571395272554703*^9}, 3.5714811850825157`*^9, 3.57156495478125*^9, {
   3.571648402103581*^9, 3.571648402277802*^9}, {3.571826296626274*^9, 
   3.571826297074767*^9}, {3.573220317244758*^9, 3.573220317345403*^9}, {
   3.573667718322974*^9, 3.573667718442325*^9}, {3.575916052174032*^9, 
   3.575916056714024*^9}, 3.575969227522496*^9, {3.576064902975762*^9, 
   3.576064903149598*^9}, {3.57713388096768*^9, 3.577133884214247*^9}, {
   3.5866847335625*^9, 3.5866847386875*^9}, {3.586944643082157*^9, 
   3.586944643192831*^9}, {3.587029223977346*^9, 3.587029227886228*^9}, 
   3.587373573432148*^9, {3.590314459773868*^9, 3.590314463196793*^9}, {
   3.5904903937779617`*^9, 3.59049039418573*^9}, {3.590771236766403*^9, 
   3.590771238955181*^9}, {3.592817548506075*^9, 3.592817551202711*^9}, {
   3.5932551791875*^9, 3.593255179296875*^9}, {3.595258907165576*^9, 
   3.595258912965362*^9}, {3.601824283703125*^9, 3.60182428946875*^9}, {
   3.601913374658182*^9, 3.601913374753494*^9}, {3.601990480868978*^9, 
   3.601990481018689*^9}, {3.603185535008009*^9, 3.603185538969179*^9}, {
   3.6033627021496*^9, 3.603362702928396*^9}, {3.608657003846977*^9, 
   3.608657005167246*^9}, {3.609154490865684*^9, 3.609154491033745*^9}, 
   3.609159769146952*^9, 3.609930835335304*^9, {3.609931166433275*^9, 
   3.609931166894182*^9}, {3.61091103489404*^9, 3.610911045131578*^9}, {
   3.610980071533278*^9, 3.610980071651501*^9}, {3.611055781879577*^9, 
   3.61105578200002*^9}, {3.611672753398375*^9, 3.611672753877979*^9}, {
   3.612875218932138*^9, 3.612875219036988*^9}, {3.617979866029714*^9, 
   3.617979871008193*^9}, 3.61804651105488*^9, {3.618228623434581*^9, 
   3.618228624992502*^9}, {3.6193637029375*^9, 3.619363708*^9}, 
   3.619434356473549*^9, {3.6198890755075283`*^9, 3.619889075881192*^9}, {
   3.620212333136623*^9, 3.6202123333825293`*^9}, 3.620730893232994*^9, {
   3.621710425818947*^9, 3.621710429736864*^9}, {3.621874189794415*^9, 
   3.621874190395149*^9}, {3.622246016656662*^9, 3.6222460167689962`*^9}, {
   3.622624954148406*^9, 3.622624954708448*^9}, {3.625322173507645*^9, 
   3.6253221764508142`*^9}, {3.650278330272172*^9, 3.650278339181117*^9}, {
   3.650906325338038*^9, 3.6509063257992163`*^9}, {3.651258343154784*^9, 
   3.651258343289777*^9}, {3.6515080452706003`*^9, 3.6515080458430233`*^9}, {
   3.651658301170319*^9, 3.65165830129416*^9}, {3.651862249388505*^9, 
   3.651862256360931*^9}, {3.652284480195263*^9, 3.6522844802911863`*^9}, {
   3.653146379616233*^9, 3.65314638333492*^9}, {3.669630354719465*^9, 
   3.669630367485832*^9}, {3.679838150310131*^9, 3.6798381565417633`*^9}, {
   3.679855732290821*^9, 3.679855734474349*^9}, {3.684685089701391*^9, 
   3.6846850966849422`*^9}, {3.686514958322953*^9, 3.686514958483694*^9}, {
   3.699453899474173*^9, 3.699453907698*^9}, {3.699870990447175*^9, 
   3.69987099105683*^9}, {3.715012082173938*^9, 3.715012088158829*^9}, {
   3.716202593469071*^9, 3.7162026024462357`*^9}, {3.72267629931651*^9, 
   3.722676305095626*^9}, {3.728991609907742*^9, 3.728991618861203*^9}, {
   3.729076421401002*^9, 3.729076421534203*^9}, 3.729265368975133*^9, {
   3.746279116079037*^9, 3.746279123956943*^9}, 3.74635842453111*^9, {
   3.7464420408286047`*^9, 3.746442040979959*^9}, 3.7465554267949944`*^9, {
   3.746638365554324*^9, 3.746638365711382*^9}, {3.746700388625612*^9, 
   3.746700389095063*^9}, {3.7468111242503033`*^9, 3.746811124362756*^9}, {
   3.746955453271945*^9, 3.746955458527632*^9}, {3.747134602042395*^9, 
   3.747134602166064*^9}, {3.747386837302832*^9, 3.747386843656273*^9}, 
   3.748191379736575*^9, {3.748262807980905*^9, 3.748262808123279*^9}, {
   3.749912167708543*^9, 3.74991216790024*^9}, {3.7500688292520847`*^9, 
   3.750068834587839*^9}, 3.750592852137837*^9, {3.761932450495251*^9, 
   3.761932460639031*^9}, {3.762093946557418*^9, 3.762093946741226*^9}, {
   3.762275652050089*^9, 3.762275652182755*^9}, {3.762505700472389*^9, 
   3.762505700583343*^9}, 3.762596828129936*^9, 3.762696554662652*^9, {
   3.763283657045524*^9, 3.763283664724405*^9}, 3.763361258676775*^9, 
   3.763445925627727*^9, {3.763982328390827*^9, 3.7639823286037292`*^9}, {
   3.764066859439532*^9, 3.764066859593549*^9}, {3.7641749996607857`*^9, 
   3.764174999771748*^9}, 3.764237193595316*^9, {3.764437931802614*^9, 
   3.764437932417653*^9}, {3.769361266788368*^9, 3.76936127278008*^9}, {
   3.774704737651307*^9, 3.774704743303532*^9}, {3.777372051202499*^9, 
   3.777372052652483*^9}, {3.777454287601396*^9, 3.777454287712895*^9}, {
   3.777824627597918*^9, 3.777824628068167*^9}, {3.778342515915539*^9, 
   3.778342516075537*^9}, {3.778343627902306*^9, 3.778343627995688*^9}, {
   3.779622423934694*^9, 3.779622429510953*^9}, {3.779963898190917*^9, 
   3.779963898311261*^9}, 3.780047093766659*^9, {3.78289872211823*^9, 
   3.7828987271486273`*^9}, 3.7831896047628*^9, {3.784921086861867*^9, 
   3.784921093467669*^9}, {3.785321106813844*^9, 3.785321107015881*^9}, {
   3.7853401139166117`*^9, 3.785340114026664*^9}, {3.791989856030588*^9, 
   3.791989875784716*^9}, {3.803723772183466*^9, 3.803723784085093*^9}, 
   3.803806216175477*^9, {3.806518836738617*^9, 3.806518837306223*^9}, {
   3.807891473599656*^9, 3.807891473686749*^9}, {3.807966619396769*^9, 
   3.80796662420984*^9}, 3.8086770192007933`*^9, {3.8087348560358276`*^9, 
   3.808734856259996*^9}, {3.809786430277153*^9, 3.809786430434699*^9}, 
   3.8098605427680197`*^9, {3.810489534668766*^9, 3.810489534757845*^9}, {
   3.810740035690149*^9, 3.810740039816808*^9}, {3.810743013615465*^9, 
   3.810743019165612*^9}, {3.8117670591011877`*^9, 3.811767063903426*^9}, {
   3.813342255899927*^9, 3.813342266734352*^9}, {3.813857848452321*^9, 
   3.813857854167948*^9}, {3.814534435012145*^9, 3.814534435213525*^9}, 
   3.814600436947501*^9, {3.815222004126484*^9, 3.81522200441791*^9}, {
   3.820067012503177*^9, 3.820067020365779*^9}, {3.840740391588113*^9, 
   3.8407403972135153`*^9}, {3.842111841812242*^9, 3.842111847423104*^9}, 
   3.842348691907646*^9, {3.846839800656399*^9, 3.846839804738522*^9}, {
   3.87398385994001*^9, 3.873983867786969*^9}, {3.875276511300968*^9, 
   3.875276511418067*^9}, {3.876313254387734*^9, 3.8763132569205914`*^9}, {
   3.878889137112211*^9, 3.878889137728895*^9}, {3.901976717854973*^9, 
   3.901976724088022*^9}, {3.903079805147313*^9, 3.903079813089758*^9}, {
   3.905254494194913*^9, 3.90525449646861*^9}, 3.905331293609971*^9, 
   3.9055920773092003`*^9, {3.9088946543548517`*^9, 3.908894659192078*^9}, {
   3.910887949884821*^9, 3.910887954451478*^9}, {3.919147621853069*^9, 
   3.919147627765167*^9}, {3.921589931520447*^9, 3.921589932091928*^9}, {
   3.9270316453124876`*^9, 3.927031654446668*^9}, {3.92796009429262*^9, 
   3.92796009432649*^9}, {3.928130969515521*^9, 3.928130969781314*^9}, {
   3.9315087385918007`*^9, 3.93150874347787*^9}, {3.933170200940752*^9, 
   3.933170201526146*^9}, {3.93498310381351*^9, 
   3.9349831114388037`*^9}},ExpressionUUID->"cb0834c7-e0dd-4042-9b11-\
26613477b19f"],

Cell[CellGroupData[{

Cell["1. Acknowledgements and \[OpenCurlyDoubleQuote]To Do\
\[CloseCurlyDoubleQuote] list", "Section",
 CellChangeTimes->{{3.72267631254508*^9, 3.722676313825733*^9}, {
  3.729076148057804*^9, 3.729076169509482*^9}, {3.762706655559033*^9, 
  3.762706656541769*^9}, {3.8038072672558413`*^9, 
  3.803807280413783*^9}},ExpressionUUID->"84eac040-a18e-4237-8685-\
b45b9658428b"],

Cell[TextData[{
 "\n",
 StyleBox["Acknowledgements",
  FontWeight->"Bold"],
 ":\nEurico Ruivo has implemented six of the subsections from Section \
\[OpenCurlyDoubleQuote]Asynchronous deterministic update schedules\
\[CloseCurlyDoubleQuote]; the functions in the subsection \
\[OpenCurlyDoubleQuote]Rule Composition / Decomposition\
\[CloseCurlyDoubleQuote]; function ",
 StyleBox["BAPropertyQ",
  FontSize->14,
  FontSlant->"Italic"],
 " from subsection \[OpenCurlyDoubleQuote]Verification of the validity of a \
property in an an arbitrary basin of attraction \
field\[CloseCurlyDoubleQuote]; the functions from subsection \
\[OpenCurlyDoubleQuote]One-Dimensional CAs with any Asynchronous \
Deterministic Update Schedule\[CloseCurlyDoubleQuote]; all functions \
associated to asynchronous neighbourhood updates; the functions ",
 StyleBox["ReduceRuleRadius",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["ExtendRuleRadius",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 "; and participated in the Boolean expressions in ANF of the two subsections \
on algebraic and Boolean representation of rules.\nFunction ",
 StyleBox["RuleIt",
  FontSlant->"Italic"],
 " was written by Daniel S. Carvalho.\n\n",
 StyleBox["To Do",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["(1) ",
  FontWeight->"Bold"],
 "Are the graph arguments of ",
 StyleBox["DigraphUD",
  FontSlant->"Italic"],
 ", ",
 StyleBox["MoveVerticesQ",
  FontSlant->"Italic"],
 " and ",
 StyleBox["SameDigraphsQ",
  FontSlant->"Italic"],
 " of ",
 StyleBox["intG",
  FontSlant->"Italic"],
 " or ",
 StyleBox["labG",
  FontSlant->"Italic"],
 " type?\n",
 StyleBox["(2) ",
  FontWeight->"Bold"],
 "DecomposibleQ and DecomposeCA require better description.\n",
 StyleBox["(3)",
  FontWeight->"Bold"],
 " The function fastAsynchronousEvalRuleInDCT could be made even faster, by \
using fastAsynchronousCA.\n",
 StyleBox["(4)",
  FontWeight->"Bold"],
 " AsynchronismDegree is yet to be properly evaluated.\n",
 StyleBox["(5)",
  FontWeight->"Bold"],
 " There\[CloseCurlyQuote]s a serious bug in functin UDSFromLabIntGraph, that \
renders it unusable at the moment.\n",
 StyleBox["(6)",
  FontWeight->"Bold"],
 " The function AllCycles[directedGraph_] should be updated with the native \
equivalent function."
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.60182425140625*^9, 3.601824269234375*^9}, 3.601912132491571*^9, {
   3.601913309515019*^9, 3.601913330850052*^9}, {3.603361447987546*^9, 
   3.603361454378753*^9}, {3.6033614855236673`*^9, 3.603361523731002*^9}, {
   3.603361557812909*^9, 3.603361919086905*^9}, 3.603362550600369*^9, 
   3.620212282166991*^9, {3.729076206434972*^9, 3.7290763762757998`*^9}, {
   3.7292653820071287`*^9, 3.729265400600049*^9}, {3.762505539180994*^9, 
   3.762505573165366*^9}, {3.762596675889419*^9, 3.7625966936317244`*^9}, {
   3.762692780057112*^9, 3.762692807250724*^9}, {3.762705602391193*^9, 
   3.762705636643048*^9}, {3.762706668742687*^9, 3.76270677368108*^9}, {
   3.7627068225647497`*^9, 3.762706854707149*^9}, {3.762706887315038*^9, 
   3.762706911509151*^9}, {3.762707002943576*^9, 3.762707084906962*^9}, {
   3.762707246356559*^9, 3.762707263348391*^9}, {3.762707349168849*^9, 
   3.762707399615127*^9}, {3.7640669505533133`*^9, 3.764066951068481*^9}, {
   3.764237125712598*^9, 3.764237185426951*^9}, {3.764237419362384*^9, 
   3.764237420800727*^9}, {3.769361284897941*^9, 3.769361461906473*^9}, {
   3.785339767205632*^9, 3.785339781405276*^9}, {3.785339829367531*^9, 
   3.785339830955326*^9}, {3.785339886360689*^9, 3.785339907993642*^9}, {
   3.785339946339333*^9, 3.785340034895224*^9}, {3.785340087904038*^9, 
   3.785340105477089*^9}, {3.785343277433256*^9, 3.78534330700012*^9}, {
   3.8038072860323553`*^9, 3.803807297054538*^9}, {3.808677005454347*^9, 
   3.808677008556772*^9}, {3.80979315972393*^9, 3.809793162688198*^9}, {
   3.810739890088719*^9, 3.810739920270475*^9}, {3.810740016012019*^9, 
   3.810740023626478*^9}, {3.901980812123514*^9, 3.901980831517959*^9}, {
   3.933172231011402*^9, 3.933172264432658*^9}, {3.9331723007651663`*^9, 
   3.933172301962111*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9d062478-ff31-4183-87ba-d6a55f86aea1"]
}, Closed]],

Cell[CellGroupData[{

Cell["2. General auxiliary functions", "Section",
 CellChangeTimes->{{3.4049177920883856`*^9, 3.404917804826702*^9}, {
  3.558189159808967*^9, 3.558189162095815*^9}, {3.7226763158847437`*^9, 
  3.722676316233069*^9}},ExpressionUUID->"df2f9e2c-2733-480e-9f28-\
4fa98a195413"],

Cell[CellGroupData[{

Cell["List Handling", "Subsection",
 CellChangeTimes->{{3.4491346825*^9, 
  3.4491346834375*^9}},ExpressionUUID->"e1106a5c-c7e1-4fd6-b677-c36a8ce943a7"],

Cell[TextData[{
 "T",
 "urns the state transitions of a rule table into the form ",
 "{",
 StyleBox["neighbourhood\[Rule]output_state",
  FontSlant->"Italic"],
 "}."
}], "Text",
 CellChangeTimes->{{3.569331485227644*^9, 3.569331504881344*^9}, {
   3.569341496625467*^9, 3.569341877135335*^9}, {3.569342179868981*^9, 
   3.56934235078698*^9}, {3.569345381029118*^9, 3.569345385068578*^9}, {
   3.5732152135427017`*^9, 3.573215634176034*^9}, {3.5732156796303873`*^9, 
   3.573215716937791*^9}, {3.573221706978036*^9, 3.5732217075262346`*^9}, {
   3.573221738937748*^9, 3.573221966719859*^9}, {3.573222354770028*^9, 
   3.573222655789977*^9}, {3.573235373356277*^9, 3.57323538329491*^9}, {
   3.573235550805191*^9, 3.5732356452006693`*^9}, {3.573235685527568*^9, 
   3.573235834157926*^9}, {3.573235868739017*^9, 3.573235894134626*^9}, {
   3.575914116680661*^9, 3.57591423360913*^9}, 3.575914304574484*^9, {
   3.575914351054474*^9, 3.575914483163134*^9}, {3.575914820933111*^9, 
   3.575914823437934*^9}, {3.575914863007093*^9, 3.575915039472883*^9}, {
   3.575915207495357*^9, 3.5759152387788873`*^9}, {3.575915300925681*^9, 
   3.575915301015944*^9}, {3.68468506808124*^9, 3.684685069775674*^9}, {
   3.8421083985065517`*^9, 3.8421083997500963`*^9}, {3.927959932358232*^9, 
   3.927959952457148*^9}, {3.9279599845918417`*^9, 3.927960038811083*^9}, {
   3.9327199483998537`*^9, 3.932719948669403*^9}, {3.932725485279402*^9, 
   3.932725501275406*^9}, {3.9327255848684387`*^9, 3.932725608786221*^9}, 
   3.933170078155529*^9, {3.933170116820822*^9, 3.93317012842977*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"232d79f0-2ee5-46cb-9491-cf271c97ce0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RulifyRuleTable", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Rule", "@@", "#"}], "&"}], "/@", 
    RowBox[{"RuleTable", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5855170487277*^9, 3.585517139171867*^9}, {
   3.585517306872161*^9, 3.5855174617492332`*^9}, {3.585517508502519*^9, 
   3.585517567221019*^9}, {3.585517612726299*^9, 3.585517637514742*^9}, {
   3.585517684798425*^9, 3.585517699758851*^9}, {3.585517778039789*^9, 
   3.585517781190995*^9}, {3.58551781855306*^9, 3.585517820893064*^9}, {
   3.585517879627167*^9, 3.585517971074528*^9}, {3.585518195792923*^9, 
   3.5855181970565248`*^9}, {3.585518317301536*^9, 3.5855183774084415`*^9}, {
   3.5855184255657263`*^9, 3.5855184631305923`*^9}, {3.5855185146106825`*^9, 
   3.585518515952285*^9}, {3.58551862123687*^9, 3.5855186272740803`*^9}, {
   3.5855186746045637`*^9, 3.585518708799824*^9}, {3.5855202860830016`*^9, 
   3.585520288001805*^9}, 3.762595232686529*^9, {3.7625957389890842`*^9, 
   3.762595742816413*^9}, 3.777654497194499*^9, {3.820065963374006*^9, 
   3.820065963517005*^9}, {3.933169022168528*^9, 3.933169024940411*^9}, 
   3.933170085859109*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"234bfee9-f881-42d9-857b-e1b3f253405f"],

Cell[TextData[{
 "\nTakes a ",
 StyleBox["list",
  FontSlant->"Italic"],
 " of the type {a, b, c, d, e, ...} and returns a list with rules of the form \
{a\[Rule]b, b\[Rule]c, c\[Rule]d, d\[Rule]e, ...}."
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.60182425140625*^9, 3.601824269234375*^9}, 3.601912132491571*^9, {
   3.601913309515019*^9, 3.601913330850052*^9}, {3.603361447987546*^9, 
   3.603361454378753*^9}, {3.6033614855236673`*^9, 3.603361523731002*^9}, {
   3.603361557812909*^9, 3.603361919086905*^9}, 3.603362550600369*^9, {
   3.620212075864711*^9, 3.62021227744778*^9}, {3.901980836670911*^9, 
   3.901980837481901*^9}, 3.933170111223138*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"da105ade-0ba7-4e8d-888e-ffc3118c44cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleIt", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Rule", "@@@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", "1"}], "]"}]}], "]"}], ",", "2"}], "]"}]}], 
     "&"}], " ", "[", "list", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.620212061385994*^9, 3.620212067020092*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cd128e1f-b344-48fc-a9ac-7fb1ab97951f"],

Cell[TextData[{
 "\nTakes from ",
 StyleBox["list",
  FontSlant->"Italic"],
 " the item that is displaced the specified ",
 StyleBox["offset",
  FontSlant->"Italic"],
 " from position ",
 StyleBox["i",
  FontSlant->"Italic"],
 ". The offset has the form {",
 StyleBox["n",
  FontSlant->"Italic"],
 "}, where ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is an arbitrary integer, meaning that the item to be taken is at position ",
 StyleBox["i",
  FontSlant->"Italic"],
 "+",
 StyleBox["n",
  FontSlant->"Italic"],
 " in the list, wrapping the list around itself if necessary.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nTakeFromRelativePosition[{a, b, c, d, e, f}, 2, {-10}]  =>  d\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nThe argument ",
 StyleBox["i",
  FontSlant->"Italic"],
 " has to be in the range from 1 to Length[",
 StyleBox["list",
  FontSlant->"Italic"],
 "]."
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.60182425140625*^9, 3.601824269234375*^9}, 3.601912132491571*^9, {
   3.601913309515019*^9, 3.601913330850052*^9}, {3.603361447987546*^9, 
   3.603361454378753*^9}, {3.6033614855236673`*^9, 3.603361523731002*^9}, {
   3.603361557812909*^9, 3.603361919086905*^9}, 3.603362550600369*^9, 
   3.620212282166991*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"1a020eba-eace-41db-bf8b-1e2ad6e95612"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TakeFromRelativePosition", "[", 
    RowBox[{"list_List", ",", "i_Integer", ",", "offset_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leap", "=", 
       RowBox[{"First", "@", "offset"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"First", "@", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"offset", "\[Equal]", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{"Take", "[", 
         RowBox[{"list", ",", 
          RowBox[{"{", "i", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"i", "+", "leap"}], ",", "\[IndentingNewLine]", 
          RowBox[{"x_", "/;", 
           RowBox[{"x", ">", 
            RowBox[{"Length", "[", "list", "]"}]}]}], ",", 
          RowBox[{"Take", "[", 
           RowBox[{"list", ",", 
            RowBox[{"{", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "+", "leap"}], ",", 
               RowBox[{"Length", "@", "list"}]}], "]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"x_", "/;", 
           RowBox[{"x", "\[LessEqual]", "0"}]}], ",", 
          RowBox[{"Take", "[", 
           RowBox[{"list", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "@", "list"}], "-", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"i", "+", "leap"}], "]"}], ",", 
                RowBox[{"Length", "@", "list"}]}], "]"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", "_", ",", 
          RowBox[{"Take", "[", 
           RowBox[{"list", ",", 
            RowBox[{"i", "+", "offset"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.603205501020382*^9, 3.603205502436025*^9}, {
   3.603205826711275*^9, 3.603205848655469*^9}, 3.603205890474481*^9, {
   3.603206104452766*^9, 3.603206127138523*^9}, {3.603206195684795*^9, 
   3.603206328857355*^9}, {3.603206408299102*^9, 3.603206451925723*^9}, {
   3.603206505128089*^9, 3.603206514330004*^9}, {3.603206549797864*^9, 
   3.603206588041947*^9}, {3.603206685448395*^9, 3.603206778495714*^9}, {
   3.603206847967773*^9, 3.603206858614423*^9}, {3.603206899960285*^9, 
   3.60320691209593*^9}, {3.603207085465949*^9, 3.603207111131039*^9}, {
   3.603207183302243*^9, 3.603207368430381*^9}, {3.603207472272015*^9, 
   3.603207538532091*^9}, {3.603207705845982*^9, 3.603207745768594*^9}, {
   3.60320782615107*^9, 3.603207904568355*^9}, {3.6032116502970986`*^9, 
   3.603211655917944*^9}, {3.603211767412558*^9, 3.603211780100112*^9}, 
   3.603211851682289*^9, {3.603217650216045*^9, 3.603217654025514*^9}, {
   3.603277315723322*^9, 3.603277316856109*^9}, {3.603277431616369*^9, 
   3.603277432164906*^9}, {3.603277649892755*^9, 3.603277752634108*^9}, {
   3.603277817155175*^9, 3.603277830052464*^9}, {3.603277938780373*^9, 
   3.60327794363638*^9}, {3.603277983819334*^9, 3.603278013506031*^9}, {
   3.6032780837689257`*^9, 3.603278093308599*^9}, {3.60327818008959*^9, 
   3.603278191137621*^9}, 3.603278545710382*^9, {3.603300203137706*^9, 
   3.603300204225268*^9}, {3.603300247747979*^9, 3.603300250395912*^9}, {
   3.60330035494248*^9, 3.603300376704463*^9}, 3.603300433666795*^9, {
   3.603300467378065*^9, 3.603300476345751*^9}, 3.603300574945219*^9, {
   3.603300732799325*^9, 3.603300815093605*^9}, {3.603300857854895*^9, 
   3.603300923583728*^9}, {3.603300956629364*^9, 3.603300965484585*^9}, {
   3.6033011932436247`*^9, 3.60330119452999*^9}, {3.603301256513029*^9, 
   3.60330131363304*^9}, {3.6033014620303416`*^9, 3.60330147075805*^9}, 
   3.603301625067892*^9, {3.603301693445038*^9, 3.603301704588854*^9}, {
   3.603302399994528*^9, 3.60330240457788*^9}, {3.603302442674979*^9, 
   3.603302443090965*^9}, {3.603361320894156*^9, 3.603361344027581*^9}, {
   3.603361457744629*^9, 3.603361480451456*^9}, {3.603361997862064*^9, 
   3.603361999162112*^9}, {3.603362496516063*^9, 3.6033626431552677`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d3bfe59b-70e0-43af-838c-79ee0345f8a4"],

Cell["\<\

Just like the built-in Complement, but without sorting the resulting list. \
\>", "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.60182425140625*^9, 3.601824269234375*^9}, 3.601912132491571*^9, {
   3.601913309515019*^9, 3.601913330850052*^9}, 3.620212286622463*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ee9e4349-af71-4e49-a5b3-a10c3f25b37a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnsortedComplement", "[", 
    RowBox[{"list_List", ",", "excludedElements_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Except", "[", "#2", "]"}]}], "]"}], "&"}], ",", "list", ",", 
     "excludedElements"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540554534839113*^9, 3.540554537318413*^9}, 
   3.601913299341264*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"a1b093d0-0c5e-4894-b10a-44eed0c6fcc8"],

Cell[TextData[{
 "\nRandomly drops ",
 StyleBox["n",
  FontSlant->"Italic"],
 " elements from ",
 StyleBox["list",
  FontSlant->"Italic"],
 ", without affecting the relative order of the elements in the original ",
 StyleBox["list.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.594541905578295*^9, 3.594541985026287*^9}, {3.601913209765354*^9, 
   3.6019132407841196`*^9}, {3.601984488426405*^9, 3.601984582044785*^9}, 
   3.620212290654396*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a1740432-f525-4651-b052-d51b64c2f318"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomDrop", "[", 
    RowBox[{"list_List", ",", "n_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"UnsortedComplement", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"RandomChoice", "[", "#", "]"}], "}"}]}], "]"}], "&"}], ",", 
     "list", ",", "n"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601913153754016*^9, 3.601913160870493*^9}, {
  3.601984476586032*^9, 3.601984481256214*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"79043ad2-e018-4a65-8435-b18a3c530f3e"],

Cell[TextData[{
 "\nRandomly picks ",
 StyleBox["n",
  FontSlant->"Italic"],
 " elements from ",
 StyleBox["list",
  FontSlant->"Italic"],
 ", without repetition",
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.594541905578295*^9, 3.594541985026287*^9}, {3.601913209765354*^9, 
   3.6019132407841196`*^9}, 3.620212292260863*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"869a21e4-ea51-4b24-a07c-1f61b8df887a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomChoiceNoRepetition", "[", 
    RowBox[{"list_List", ",", "n_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"UnsortedComplement", "[", 
    RowBox[{"list", ",", 
     RowBox[{"RandomDrop", "[", 
      RowBox[{"list", ",", "n"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601913153754016*^9, 3.601913160870493*^9}, {
  3.601984602392737*^9, 3.601984624431189*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"029c78fa-58ab-49e8-8f05-b71c2aec5e2e"],

Cell[TextData[{
 "\nTakes a string (possibly with blank characters in it), and yields a list \
with every character in the string converted to an expression.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": StringToList[\"1010\"]  yields the list of integers {1, 0, 1, 0}"
}], "Text",
 CellChangeTimes->{3.620212293812967*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"93083774-cac9-4292-a366-0c647ab79db8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StringToList", "[", "strInput_String", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Characters", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"strInput", ",", 
       RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.54859517059375*^9, 3.54859517634375*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6f5c3d6e-3307-4aff-a982-4a5348c6cdec"],

Cell[TextData[{
 "\nA version of ",
 StyleBox["Complement", "MR"],
 " that neither sorts nor removes duplicates. This function was taken from \
the Help Browser."
}], "Text",
 CellChangeTimes->{3.620212296700891*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"fe64a11b-44c8-487b-9edf-74f75ebb1494"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnsortedComplement", "[", 
    RowBox[{"x_List", ",", "y__List"}], "]"}], ":=", 
   RowBox[{"Replace", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Dispatch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "\[RuleDelayed]", 
          RowBox[{"Sequence", "[", "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Union", "[", "y", "]"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"e0e9489e-43bd-4731-b432-fc6739be7829"],

Cell[TextData[{
 "\nGenerates a list with the results of applying function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " over all argument pairs formed by every element of the ",
 StyleBox["list",
  FontSlant->"Italic"],
 " and all the others ahead in the list. By default, the argument ",
 StyleBox["type",
  FontSlant->"Italic"],
 " is NR (Non-Repetition), which means that only the subsequent elements are \
taken to form the pairs; however, if ",
 StyleBox["type",
  FontSlant->"Italic"],
 " is R (Repetition), then every element in the list is also paired to \
itself.  "
}], "Text",
 CellChangeTimes->{3.620212298077229*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"01ce68f9-5b04-4cd9-9bf9-c74db6672466"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FunctionOverPairs", "[", 
    RowBox[{"f_Symbol", ",", "list_List", ",", 
     RowBox[{"type_", ":", "NR"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "aux", "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"aux", "=", "#"}], ";", 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{
               RowBox[{
               "list", "\[LeftDoubleBracket]", "aux", 
                "\[RightDoubleBracket]"}], ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"Drop", "[", 
             RowBox[{"list", ",", 
              RowBox[{"aux", "-", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"type", "===", "R"}], ",", "1", ",", "0"}], 
                "]"}]}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "list", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"30c6f260-b54e-4e63-8b13-93904088e088"],

Cell[TextData[{
 "\nDetermines the equivalence classes of the elements in ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", under the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 ", and returns one member (the first one) of each class.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": See ",
 StyleBox["RemoveEquivalentRules",
  FontSlant->"Italic"],
 " in my_ca_functions.nb."
}], "Text",
 CellChangeTimes->{3.575970481472351*^9, 3.575970546945535*^9, 
  3.620212299636976*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"85b6fed7-6fac-46b1-ae19-b715b1f2ba50"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RemoveEquivalents", "[", 
    RowBox[{"x_List", ",", "f_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "#", "]"}], "&"}], "/@", " ", 
    RowBox[{"GatherBy", "[", 
     RowBox[{"x", ",", "f"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.575970481493545*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"3a1c46be-73dd-4c5f-8cd7-41bab131b135"],

Cell[TextData[{
 "\nYields the ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long tuple formed by the elements of the list ",
 StyleBox["set",
  FontSlant->"Italic"],
 ". Argument ",
 StyleBox["i",
  FontSlant->"Italic"],
 " is defined within 1 and  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"Length", "[", "set", "]"}], "len"], TraditionalForm]],
  ExpressionUUID->"74bdf366-dff3-42ab-8c6d-a1e1f81d9193"],
 ".\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nIf ",
 StyleBox["set",
  FontSlant->"Italic"],
 " == Range[0, Length[set]-1] it\[CloseCurlyQuote]s simpler to use \n\t\
IthTuple[i_Integer, set_List, len_Integer] := IntegerDigits[i-1, Length[set], \
len]\nand consequent \n\tIthTuple[#, set, len]& /@ Range[1, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"Length", "[", "set", "]"}], "len"], TraditionalForm]],
  ExpressionUUID->"397c4cd2-ff21-4bb0-9d35-c544671e6df5"],
 "] ."
}], "Text",
 CellChangeTimes->{{3.531153813474009*^9, 3.5311538207857428`*^9}, {
   3.531155231643686*^9, 3.531155232253702*^9}, {3.531155429813902*^9, 
   3.531155503294047*^9}, {3.531155838197164*^9, 3.531155913099848*^9}, 
   3.62021230227556*^9, {3.653141074116995*^9, 3.653141159274222*^9}, 
   3.653141304949015*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"8fe5e533-6d70-4d14-a79b-771a850b27af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IthTuple", "[", 
    RowBox[{"i_Integer", ",", "set_List", ",", "len_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", 
      RowBox[{"Length", "[", "set", "]"}], ",", "len"}], "]"}], "/.", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "set", "]"}], "-", "1"}]}], "]"}], ",", 
        "set"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"1df56b1f-58be-4f89-90e1-63d096c49a2a"],

Cell[TextData[{
 "\nThe function generates every combination of the N elements of ",
 StyleBox["list",
  FontSlant->"Italic"],
 " (1 by 1, 2 by 2, etc, up to N by N), and yields a list with all their \
permutations.  \n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\n",
 "Arrangements",
 "[{1, 2, 3}]\n{{1}, {2}, {3}, {1, 2}, {2, 1}, {1, 3}, {3, 1}, {2, 3}, {3, \
2}, {1, 2, 3}, {1, 3, 2}, {2, 1, 3}, {2, 3, 1}, {3, 1, 2}, {3, 2, 1}}"
}], "Text",
 CellChangeTimes->{3.620212303595518*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ba541a73-562e-4dee-8e63-d2eeafe93a21"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Arrangements", "[", "list_List", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Permutations", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Rest", "@", 
       RowBox[{"Subsets", "[", "list", "]"}]}]}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"3e28dfd1-668b-4c4b-b7fa-909a38218347"],

Cell[TextData[{
 "\nThe function scans all numbers in the range from ",
 StyleBox["min",
  FontSlant->"Italic"],
 " to ",
 StyleBox["max",
  FontSlant->"Italic"],
 ", at stepsize ",
 StyleBox["step",
  FontSlant->"Italic"],
 ", and returns those whose that the application of ",
 StyleBox["unaryfunction",
  FontSlant->"Italic"],
 " to them matches ",
 StyleBox["form",
  FontSlant->"Italic"],
 ". It is assumed that ",
 StyleBox["unaryfunction",
  FontSlant->"Italic"],
 " is unary an that it returns a single value.  \n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nSieve[EvenQ, True, {1, 10}]  ==>  {2, 4, 6, 8, 10}\n\
Sieve[BFConservativeQ[#, 2, 1]&, True, {0, 255}]  ==>  {170, 184, 204, 226, \
240}\nSieve[BFConservativeQ[#, 2, 1]&, # >200&, {0, 255}]  ==> {204, 226, \
240}\nSieve[BFConservativeQ[#, 2, 1]&, x_ /; x > 200, {0, 255}]  ==> {204, \
226, 240}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nIn English, is it the same as Derangements? "
}], "Text",
 CellChangeTimes->{{3.39298515942332*^9, 3.392985286375869*^9}, {
   3.392985316799616*^9, 3.392985370617001*^9}, 3.3929854038047223`*^9, {
   3.393000099643346*^9, 3.39300031696584*^9}, {3.531155179629821*^9, 
   3.531155209825979*^9}, 3.620212306219903*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"eac4322b-2b02-4a00-bfdc-761580bb183e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sieve", "[", 
    RowBox[{"unaryfunction_", ",", "form_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"min_", ":", "1"}], ",", "max_", ",", 
       RowBox[{"step_", ":", "1"}]}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "min"}], ",", 
         RowBox[{"i", "\[LessEqual]", "max"}], ",", 
         RowBox[{
          RowBox[{"i", "++"}], "step"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"Head", "[", "form", "]"}], ",", "\[IndentingNewLine]", 
           "Function", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"unaryfunction", "[", "i", "]"}], "&&", 
              RowBox[{
               RowBox[{"form", "[", "i", "]"}], "\[Equal]", "True"}]}], ",", 
             RowBox[{"Sow", "[", "i", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "Condition", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"unaryfunction", "[", "i", "]"}], "&&", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{"i", ",", "form"}], "]"}], "\[Equal]", "True"}]}], 
             ",", 
             RowBox[{"Sow", "[", "i", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "_", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"unaryfunction", "[", "i", "]"}], ",", "form"}], 
               "]"}], "\[Equal]", "True"}], ",", 
             RowBox[{"Sow", "[", "i", "]"}]}], "]"}]}], "]"}]}], "]"}], "]"}],
       "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.3929867297212973`*^9, 3.392986783688899*^9}, {
   3.3929868706239057`*^9, 3.392986931140924*^9}, {3.3929869653300867`*^9, 
   3.3929869657306623`*^9}, {3.39298702075979*^9, 3.3929870250559683`*^9}, {
   3.3929875043551664`*^9, 3.3929875085912576`*^9}, {3.392987565843582*^9, 
   3.3929875689780893`*^9}, {3.392997141529787*^9, 3.392997174577307*^9}, {
   3.392997218971143*^9, 3.392997235154413*^9}, {3.3929976911300735`*^9, 
   3.392997691340376*^9}, {3.392997797583145*^9, 3.392997855145917*^9}, {
   3.392997926728848*^9, 3.392997962630472*^9}, {3.3929984847913027`*^9, 
   3.392998583182782*^9}, {3.3929987217119775`*^9, 3.392998724285678*^9}, {
   3.39299886346581*^9, 3.39299889526153*^9}, {3.392998934377776*^9, 
   3.392998937482238*^9}, {3.3929990068920465`*^9, 3.392999007102349*^9}, 
   3.3929990412714815`*^9, {3.3929992199684353`*^9, 3.3929992455552273`*^9}, {
   3.392999665118529*^9, 3.3929997091418324`*^9}, 3.530538790549087*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"e5624315-1a49-4a5c-b79e-ff0912ad4817"]
}, Closed]],

Cell[CellGroupData[{

Cell["Auxiliary random functions", "Subsection",ExpressionUUID->"352a9343-bcd2-44b3-b83d-45626755d6c3"],

Cell[TextData[{
 "Returns one of the even integers from the interval [",
 StyleBox["0, n",
  FontSlant->"Italic"],
 "], randomly chosen with uniform probability."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"02c1b355-c64e-40a8-a825-5e38c81ec1ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomEven", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", "n", "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"n", "-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "n", ",", "2"}], "}"}]}], "]"}]}], "]"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.575969448204144*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"39aa01c0-e0dc-4e88-ad70-0aeb593737e0"],

Cell[TextData[{
 "Returns one of the odd integers in the interval [",
 StyleBox["0, n",
  FontSlant->"Italic"],
 "], randomly chosen with uniform probability."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"79b4cc9e-c0e4-490b-b807-be035877ddd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomOdd", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.575969393139379*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"223e35ec-d35b-47f8-8d5c-a5fecbcef14f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generation of random binary sequences (RBS)", "Subsection",ExpressionUUID->"d7fb97f4-b9b1-4caf-8fdc-731153df64ed"],

Cell[TextData[{
 "Generates a ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, random, binary list, with the exact fraction ",
 StyleBox["fracblack",
  FontSlant->"Italic"],
 " of them being 1s. If len is odd, ",
 StyleBox["fracblack",
  FontSlant->"Italic"],
 " has to be \[GreaterEqual]0.51 in order for the number of 1s to be larger \
than the number of 0s."
}], "Text",
 CellChangeTimes->{3.716194570829695*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e2d65d1d-753d-4937-880d-f18aab12cc01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExactAmountOfOnesRBS", "[", 
    RowBox[{"fracblack_Real", ",", "len_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{"1", "&"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "len", "}"}]}], "]"}], ",", 
     RowBox[{"List", "/@", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "len", "]"}], ",", 
        RowBox[{"\[LeftFloor]", 
         RowBox[{"len", "*", "fracblack"}], "\[RightFloor]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.716202548760887*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"1d9944c1-b918-43ce-a197-7f91bfc27479"],

Cell[TextData[{
 "The function is a variation of the latter, but now ",
 StyleBox["fracblack",
  FontSlant->"Italic"],
 " is nondeterministic."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7c51f094-4867-4f8a-9ab5-66ab1e76637a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomAmountOfOnesRBS", "[", 
    RowBox[{"fracblack_Real", ",", "len_Integer"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[LeftCeiling]", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "-", "1", "+", "fracblack"}], 
      "\[RightCeiling]"}], ",", 
     RowBox[{"{", "len", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729075825090538*^9, 3.729075839724197*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b577d678-37a4-4d85-a3a1-d7b8c4ab842e"],

Cell[TextData[{
 "Generates a ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, random, binary list, such that: if ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is odd, the list is formed by (len\[PlusMinus]1)/2 1s, each possibility \
with 50% probability; and if ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is odd, the list is formed by (len\[PlusMinus]2)/2 1s, each possibility \
also with 50% probability."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"69d0acd2-b998-40d1-8882-b04f50d2624c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NearlyBalancedRBS", "[", "len_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnd", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "len", "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[LeftDoubleBracket]", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "\[LeftDoubleBracket]", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "len", "}"}]}], "]"}], ",", 
       RowBox[{"List", "/@", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "len", "]"}], ",", 
          RowBox[{
           RowBox[{"\[LeftFloor]", 
            FractionBox["len", "2"], "\[RightFloor]"}], "+", "rnd"}]}], 
         "]"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.716202550011902*^9, {3.729075850593997*^9, 3.729075858706238*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"bd4ac60b-4ef4-472e-9b03-d4fd3412e853"],

Cell[TextData[{
 "If ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is even, the function generates a ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, random, binary list, with the same amount of 1s and 0s (i.e., a \
balanced sequences), with the 1s placed at random positions, all of them with \
the same probability. Balancedness is not defined for an odd value of ",
 StyleBox["len.",
  FontSlant->"Italic"]
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ee73cfdf-10ed-460c-8e86-0029f99312ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedRBS", "[", "len_Integer", "]"}], " ", ":=", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"EvenQ", "[", "len", "]"}], ",", 
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "len", "}"}]}], "]"}], ",", 
       RowBox[{"List", "/@", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "len", "]"}], ",", 
          RowBox[{"len", "/", "2"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<The length of this binary sequence has to be even.\>\"", "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.716202551777554*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"9326bf48-48c2-4ced-b44e-41e273107e23"],

Cell[TextData[{
 "Generates a ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, random, binary list, with an even number of 1s."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"77179f5f-509b-452e-9155-21bcbcd443ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvenParityRBS", "[", "len_Integer", "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{"1", "&"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "len", "}"}]}], "]"}], ",", 
     RowBox[{"List", "/@", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "len", "]"}], ",", 
        RowBox[{"RandomEven", "[", "len", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.716202553094258*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"cbf874e8-d0e6-4105-86e2-aa1ce21dcfbb"],

Cell[TextData[{
 "Generates a ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, random, binary list, with an odd number of 1s."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"243d7c86-872b-48d3-906c-dbf172b51da8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OddParityRBS", "[", "len_Integer", "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{"1", "&"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "len", "}"}]}], "]"}], ",", 
     RowBox[{"List", "/@", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "len", "]"}], ",", 
        RowBox[{"RandomOdd", "[", "len", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7162025541290703`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"be194a3b-a765-4657-ab8b-42078629b855"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generation of a number of outcomes of a random function", "Subsection",
 CellChangeTimes->{
  3.497612991373*^9},ExpressionUUID->"ab3ec5a7-d59c-4b5e-8f01-78570f094351"],

Cell[TextData[{
 "Returns an unsorted list with ",
 StyleBox["nvalues",
  FontSlant->"Italic"],
 " of ",
 StyleBox["function",
  FontSlant->"Italic"],
 ", with the possibility of repetition among them. The attribute HoldFirst is \
required so that the function name remains unevaluated when it is passed as \
an argument.\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": The function in the argument is thought to generate any kind of random \
outcome, in particular, random numeric values."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ac8f0f44-d4cc-46a3-877a-aed8e0b0b424"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GetValues", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetValues", "[", 
    RowBox[{"function_", ",", "nvalues_Integer"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"Sow", "[", "function", "]"}], ",", 
         RowBox[{"{", "nvalues", "}"}]}], "]"}], "]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "1"}], 
    "]"}]}], ";"}]}], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"808b6fa4-e895-42fe-affc-ea3e28f102e8"],

Cell[TextData[{
 "Returns an unsorted list with distinct ",
 StyleBox["nvalues",
  FontSlant->"Italic"],
 " of ",
 StyleBox["function",
  FontSlant->"Italic"],
 ". The attribute HoldFirst is required so that the function name remains \
unevaluated when it is passed as an argument. The domain size of ",
 StyleBox["function",
  FontSlant->"Italic"],
 " has to be larger than ",
 StyleBox["nvalues; ",
  FontSlant->"Italic"],
 "otherwise, the function goes in loop.\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": The function in the argument is thought to generate any kind of random \
outcome, in particular, random numeric values.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": The slot # in the function represents a list of values, without \
repetition, that progressively goes larger up to the required ",
 StyleBox["nvalues",
  FontSlant->"Italic"],
 " size."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"224e87db-97b6-4c8f-a7e8-5fd9ea351a34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GetDifferentValues", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetDifferentValues", "[", 
    RowBox[{"function_", ",", "nvalues_Integer"}], "]"}], ":=", 
   RowBox[{"NestWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"GetValues", "[", 
          RowBox[{"function", ",", "nvalues"}], "]"}]}], "]"}], "]"}], "&"}], 
     ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "<", "nvalues"}], ")"}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.575978144446281*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"2f1e4bfa-2613-4b49-8681-7e520fb089a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Misc", "Subsection",ExpressionUUID->"cde636a9-5370-4136-b201-3ca991937491"],

Cell[TextData[{
 "Lists the filenames specified in ",
 StyleBox["dirPath",
  FontSlant->"Italic"],
 " in the order they were created, from the most recent to the oldest, and \
returns the name of the one at the position ",
 StyleBox["n",
  FontSlant->"Italic"],
 ". This function was created because the native function ",
 StyleBox["FileNames",
  FontSlant->"Italic"],
 " lists the files sorted by their names."
}], "Text",
 CellChangeTimes->{{3.919147659202034*^9, 3.9191476895971413`*^9}, {
  3.9191480336149187`*^9, 3.9191480554180193`*^9}, {3.919148318552143*^9, 
  3.9191483502321177`*^9}, {3.919148723619405*^9, 3.9191489203941803`*^9}, {
  3.9191492549264174`*^9, 3.919149260382493*^9}, {3.919149723629168*^9, 
  3.9191497611846*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e93ca9a2-3998-42a9-a372-ca896f76b351"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NthMoreRecentFile", "[", 
    RowBox[{"n_Integer", ",", "dirPath_String"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"SetDirectory", "[", "dirPath", "]"}], ";", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RunProcess", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<ls\>\"", ",", "\"\<-t\>\""}], "}"}], "]"}], "[", 
          "\"\<StandardOutput\>\"", "]"}], ",", "\"\<\\n\>\""}], "]"}], ",", 
       "n"}], "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.919147457769658*^9, 3.919147459575625*^9}, {
   3.919147496272699*^9, 3.91914757140112*^9}, 3.9191477107049017`*^9, {
   3.919147829306061*^9, 3.919147864769671*^9}, {3.9191479093859797`*^9, 
   3.919147934925426*^9}, {3.919148096483283*^9, 3.919148132578725*^9}, {
   3.919148168354849*^9, 3.919148300683498*^9}, {3.919148687909208*^9, 
   3.919148715371141*^9}, {3.9191489137329383`*^9, 3.919148917173754*^9}, {
   3.919149231063839*^9, 3.919149237689022*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6eb7a252-568d-43a3-9b42-f5a20f443978"],

Cell[TextData[{
 "\nReturns the quantity of files in the folder ",
 StyleBox["dirPath",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.919147659202034*^9, 3.9191476895971413`*^9}, {
  3.9191480336149187`*^9, 3.9191480343229637`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6f496a3d-3ed0-4629-86ee-2028c666b75d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HowManyFiles", "[", "dirPath_String", "]"}], ":=", 
   RowBox[{"Length", "@", 
    RowBox[{"Most", "@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"All", ",", "dirPath"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.9191477183551273`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"dd5c996e-2d5f-4894-b4d8-861db064d5b6"],

Cell[TextData[{
 "\nChecks whether ",
 StyleBox["num",
  FontSlant->"Italic"],
 " is multiple of ",
 StyleBox["factor",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{3.9191477242486277`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f2ea6610-7976-432f-9b39-7b2b0e19ce62"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MultipleQ", "[", 
    RowBox[{"num_Integer", ",", " ", "factor_Integer"}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"num", ",", "factor"}], "]"}], "\[Equal]", "0"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"dc75d870-c102-49d1-9bef-761b95cbd602"],

Cell[TextData[{
 "\nChecks whether ",
 StyleBox["arg",
  FontSlant->"Italic"],
 " is a binary digit, or whether it is a list, composed only of binary digits."
}], "Text",
 CellChangeTimes->{3.9191477258020353`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4166d80e-6114-4bc7-80e1-1cc0dc8fa9e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BinaryQ", "[", "arg_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "arg", "}"}], "]"}], "]"}], "===", 
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "arg", "}"}], "]"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[Rule]", "True"}], ",", 
           RowBox[{"1", "\[Rule]", "True"}]}], "}"}]}], ",", "True"}], 
       "]"}]}], ",", "True", ",", "False"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"f9f85439-b440-4f24-b4e6-2f936f5c6409"],

Cell[TextData[{
 "\nDivides ",
 StyleBox["xmax",
  FontSlant->"Italic"],
 " and ",
 StyleBox["ymax",
  FontSlant->"Italic"],
 " in ",
 StyleBox["nstairs",
  FontSlant->"Italic"],
 " equal parts, associates them as a stair function with ",
 StyleBox["nstairs",
  FontSlant->"Italic"],
 ", and then returns the value corresponding to argument ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". For x\[LessEqual]0 the function returns 0. "
}], "Text",
 CellChangeTimes->{3.919147727017198*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f2401287-1bff-44fb-b397-148f100a4536"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StairFunction", "[", 
    RowBox[{"x_", ",", "nstairs_", ",", "xmax_", ",", "ymax_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "aux", "}"}], ",", 
     RowBox[{"ymax", "*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nstairs", ">", "1"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"aux", "=", 
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{"nstairs", "*", 
                RowBox[{"x", "/", "xmax"}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"nstairs", "-", "1"}], ")"}]}]}], ")"}], ">", "1"}], 
          ",", "1", ",", "aux"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nstairs", "===", "1"}], ",", "1", ",", "0"}], "]"}]}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"98c0eced-49ff-422f-aa42-2e16ec96aec7"],

Cell["\<\

Contrarily to what native function Round does, this one rounds numbers in the \
usual way, in which, if its fractional part is 0.5, it is always rounded to \
the next integer.\
\>", "Text",
 CellChangeTimes->{3.919147728500266*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2db59eb6-74f9-4a43-9c08-1f9b49fe3efe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UsualRound", "[", "n_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FractionalPart", "[", "n", "]"}], "==", "0.5"}], ",", 
     RowBox[{"Ceiling", "[", "n", "]"}], ",", 
     RowBox[{"Round", "[", "n", "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"42c9d966-cf9b-47e5-8e84-7cd3ef706517"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Rule representation handling", "Section",
 CellChangeTimes->{{3.722676318775593*^9, 
  3.722676319157634*^9}},ExpressionUUID->"90f45815-d636-401b-bbed-\
39778cecebdd"],

Cell[CellGroupData[{

Cell["Rule tables", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 
   3.543489263744525*^9},ExpressionUUID->"2d7975e6-e62d-46b1-b590-\
5380c1f5cb99"],

Cell[TextData[{
 "All functions below assume a ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " rule table, represented as a list of state transitions, and each state \
transition is a list of 2 elements: the first is a list representing the \
neighbourhood, and the second is the corresponding output bit. ",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": Unless otherwise stated, the radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " is generalised so that it can be 0.5, 1.5, etc, and, in these cases, a \
neighbourhood considers 1 more cell to the left of the centre cell than to \
the right.\nRuleSpaceSize works out the number of rules in the space.\n\
AllNeighbourhoods creates all possible  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", 
    RowBox[{
     RowBox[{"2", "r"}], "+", "1"}]], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->"30ad6022-b592-48ec-8d61-901e2d061c26"],
 "neighbourhoods.\nRuleTable creates the rule table of ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", under Wolfram\.b4s lexicographic order. \nRuleTablePartitioned partitions \
the output of RuleTable, grouping the state transitions associated with the \
same output state. \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\[LineSeparator]RuleTable[110, 2, 1]  =>  { {{1,1,1}, 0}, {{1,1,0}, 1}, \
{{1,0,1}, 1}, {{1,0,0}, 0}, {{0,1,1}, 1}, {{0,1,0}, 1}, {{0,0,1}, 1}, \
{{0,0,0}, 0} }\[LineSeparator]RuleTable[110, 2, 1] // MatrixForm\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": Just for coherence with RuleTable, RuleTablePartitioned returns the \
partitions in descending order of the state values."
}], "Text",
 CellChangeTimes->{{3.532798645957529*^9, 3.532798648279393*^9}, {
  3.563008556354254*^9, 3.563008624006022*^9}, {3.563358733147635*^9, 
  3.563358789330312*^9}, {3.563359947891275*^9, 3.563359980449926*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"5ffd2b11-423a-4955-9b1c-a64bfcddfac1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleSpaceSize", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   SuperscriptBox["k", 
    SuperscriptBox["k", 
     RowBox[{"\[LeftFloor]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllNeighbourhoods", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"k", "-", "1"}], ",", "0", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"\[LeftFloor]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleTable", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
   RowBox[{"RuleTableFromKAry", "[", 
    RowBox[{
     RowBox[{"PadLeft", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"rnum", ",", "k"}], "]"}], ",", 
       SuperscriptBox["k", 
        RowBox[{
         RowBox[{"\[LeftCeiling]", 
          RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]]}], "]"}], ",", 
     "k", ",", "r"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleTable", "[", 
    RowBox[{"{", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "}"}], "]"}], ":=", 
   RowBox[{"RuleTable", "[", 
    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleTablePartitioned", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "&"}], "/@", "#"}], ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Reverse", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "&"}]}], "]"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.3951310628232417`*^9, 3.395131091524513*^9}, {
   3.498407397616294*^9, 3.498407398885294*^9}, 3.498407561896294*^9, {
   3.5630085392667933`*^9, 3.563008540320975*^9}, {3.563358461683847*^9, 
   3.5633584764010487`*^9}, {3.563359472281186*^9, 3.563359472533454*^9}, {
   3.56335990807629*^9, 3.563359943300082*^9}, 3.608538147036264*^9, {
   3.6110556472145777`*^9, 3.611055681695416*^9}, {3.905331226197564*^9, 
   3.905331257582959*^9}},
 Background->RGBColor[
  0.9686274509803922, 0.9411764705882353, 0.8392156862745098],
 CellLabel->"In[32]:=",ExpressionUUID->"550cd6cc-4bea-499a-8f61-46733c4717de"],

Cell[TextData[{
 StyleBox["\nAuxiliary function that converts k-ary rule table to its \
classical representation.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\[LineSeparator]RuleTableFromKAry[{1,0,1,0,1,0,1,0}] => \
{{{1,1,1},1},{{1,1,0},0},{{1,0,1},1},{{1,0,0},0},{{0,1,1},1},{{0,1,0},0},{{0,\
0,1},1},{{0,0,0},0}}\[LineSeparator]RuleTableFromKAry[{1,0,1,0,1,0,1,0}, 2, \
1] => {{{1,1,1},1},{{1,1,0},0},{{1,0,1},1},{{1,0,0},0},{{0,1,1},1},{{0,1,0},0}\
,{{0,0,1},1},{{0,0,0},0}}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601718790072857*^9, 3.601718817686749*^9}, {
   3.601718853673757*^9, 3.601718872152715*^9}, {3.601719280421247*^9, 
   3.601719329890005*^9}, {3.602669042557648*^9, 3.6026690586692533`*^9}, 
   3.7619332452648983`*^9},ExpressionUUID->"2b1923ef-985e-4153-9b73-\
41fc0f3c3eb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleTableFromKAry", "[", 
    RowBox[{"kAryRuleTable_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"List", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"k", "-", "1"}], ",", "0", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}], ",", 
       "kAryRuleTable"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601718831408965*^9, 3.601718847555831*^9}, 
   3.602669072995248*^9, {3.6026692445636177`*^9, 3.602669288598699*^9}, 
   3.6026711505988703`*^9, 3.61105495198882*^9, 3.746440786932024*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"db4fdfff-a30b-45f8-af5b-ad48e40d4ed2"],

Cell[TextData[{
 StyleBox["\nAuxiliary function that converts a rule table to its k-ary \
representation.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\[LineSeparator]KAryFromRuleTable[{{{1,1,1},1},{{1,1,0},0},{{1,0,\
1},1},{{1,0,0},0},{{0,1,1},1},{{0,1,0},0},{{0,0,1},1},{{0,0,0},0}}] => \
{1,0,1,0,1,0,1,0}\n\
KAryFromRuleTable[{{{1,1,1},1},{{1,1,0},0},{{1,0,1},1},{{1,0,0},0},{{0,1,1},1}\
,{{0,1,0},0},{{0,0,1},1},{{0,0,0},0}}, 2, 1] => {1,0,1,0,1,0,1,0}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601718876685635*^9, 3.601718893019177*^9}, {
   3.601719333082393*^9, 3.601719372986355*^9}, {3.602669085616883*^9, 
   3.6026691000907083`*^9}, 
   3.761933241158239*^9},ExpressionUUID->"8b0ab320-5af1-43fb-af84-\
e8a561b929c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KAryFromRuleTable", "[", "ruleTable_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "ruleTable"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601719448749559*^9, 3.601719448750274*^9}, 
   3.602669083199883*^9, {3.608656886702587*^9, 3.608656889227951*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"18d4fc61-50d1-4fdd-8f75-e4c368e6a41d"],

Cell[TextData[{
 StyleBox["\nAuxiliary function that gives the number of a rule from its ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["k",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["-ary representation.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\[LineSeparator]RnumFromKAry[{1,1,1,0,1,0,0,0}] => 232",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601718876685635*^9, 3.601718893019177*^9}, {
   3.601719333082393*^9, 3.601719372986355*^9}, {3.602669085616883*^9, 
   3.6026691000907083`*^9}, {3.761932300046839*^9, 3.761932436858903*^9}, 
   3.761933239009572*^9},ExpressionUUID->"925b0a71-a84d-4d5e-859c-\
74ec4032b62e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RnumFromKAry", "[", 
    RowBox[{"kAryRuleTable_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"RnumFromRuleTable", "[", 
    RowBox[{
     RowBox[{"RuleTableFromKAry", "[", 
      RowBox[{"kAryRuleTable", ",", "k", ",", "r"}], "]"}], ",", "k"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601719448749559*^9, 3.601719448750274*^9}, 
   3.602669083199883*^9, {3.608656886702587*^9, 3.608656889227951*^9}, 
   3.761932431392874*^9, {3.762084206651102*^9, 3.76208420742552*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0bf41f9a-89cc-4061-a850-c36f0d09b1f7"],

Cell["\<\

Takes a rule table and works out its rule number.\
\>", "Text",
 CellChangeTimes->{3.543515586823131*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9406bb71-0957-4b62-83b2-a25e9cc5ddf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RnumFromRuleTable", "[", 
    RowBox[{"ruletable_", ",", 
     RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"KAryFromRuleTable", "[", "ruletable", "]"}], ",", "k"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.608538294885733*^9, {3.611054910939904*^9, 3.611054914779653*^9}, {
   3.750586923891943*^9, 3.750586931880017*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2cc641c9-a3bd-43bb-9ded-24dacae85f69"],

Cell[TextData[{
 StyleBox["\nPredicate that tells if a k-ary form rule table is well formed \
or not.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\[LineSeparator]WellFormedRuleTableQ[{1, 1, 1, 1, 0, 0, 0, 0}] => \
True\nWellFormedRuleTableQ[{1, 2, 0, -1, 0, 1, 1, 0}] => False",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601719197663259*^9, 3.6017192574937577`*^9}, {
   3.601719381413466*^9, 3.601719429033993*^9}, 
   3.761933236896068*^9},ExpressionUUID->"f180d854-3693-4f00-9647-\
92898766f805"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WellFormedRuleTableQ", "[", 
    RowBox[{"ruleTable_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permittedRange", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"k", "-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "True", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"permittedRange", ",", "#"}], "]"}], "&"}], "/@", 
        "ruleTable"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601719237577454*^9, 3.601719245196034*^9}, {
   3.602671058378405*^9, 3.602671059188965*^9}, 3.611054933531756*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"fb76343a-acdd-4596-939b-e66c3305d05b"],

Cell[TextData[{
 "\nGives the groups of neighbourhoods of the ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " associated with each state, ordered from those leading to 0 up to ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1. "
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689253969097835*^9, 3.6892539691778398`*^9}, {3.689254121536555*^9, 
   3.689254159192708*^9}, {3.6892541912885437`*^9, 3.689254261471558*^9}, {
   3.6892547852525177`*^9, 3.6892547989082975`*^9}, {3.689254847252063*^9, 
   3.689254849092168*^9}, {3.6892549791866093`*^9, 3.689255000578832*^9}, {
   3.689314834515696*^9, 3.6893148381661034`*^9}, {3.689316754658684*^9, 
   3.689316848504465*^9}, {3.689420752494645*^9, 3.689420805149042*^9}, {
   3.76028173677972*^9, 3.76028173678825*^9}, {3.762526246454508*^9, 
   3.762526248085734*^9}, 3.762526404631403*^9, {3.76259532614401*^9, 
   3.762595417699744*^9}, {3.762595540160013*^9, 3.762595546094026*^9}, 
   3.762595601034298*^9, {3.762595666722946*^9, 3.762595709339258*^9}, {
   3.762596400138748*^9, 3.762596403905662*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a3051c61-1974-4c8d-a76f-4d7e01e42927"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NeighbourhoodsOfEachState", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "\[Equal]", "x"}], "&"}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.585518545670337*^9, 3.5855185526747494`*^9}, 
   3.585520289811408*^9, 3.762595232681731*^9, 3.78318864523411*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"27181949-e0fe-43ab-89ff-88848376b197"],

Cell[TextData[{
 "\nGrabs from the rule table only the state transitions where the central \
cell actually changes (i.e., it is ",
 StyleBox["active",
  FontSlant->"Italic"],
 "). By default, stateRefPair=={}, in which case all active state transitions \
are grabbed; otherwise, stateRefPair can be assigned a binary list specifying \
{",
 StyleBox["present_state_of_the_central_cell",
  FontSlant->"Italic"],
 ", ",
 StyleBox["output_state",
  FontSlant->"Italic"],
 "}. The output is sorted according to {",
 StyleBox["present_state_of_the_central_cell",
  FontSlant->"Italic"],
 ", ",
 StyleBox["output_state",
  FontSlant->"Italic"],
 "}. \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\[LineSeparator]ActiveStateTransitions[{110, 2, 1}]            \[Implies]  \
{{{1, 1, 1}, 0}, {{1, 0, 1}, 1}, {{0, 0, 1}, \
1}}\[LineSeparator]ActiveStateTransitions[{110, 2, 1}, {0, 1}]  \[Implies]  \
{{{1, 0, 1}, 1}, {{0, 0, 1}, 1}}\[LineSeparator]ActiveStateTransitions[{110, \
2, 1}, {1, 0}]  \[Implies]  {{{1, 1, 1}, 0}} \n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\[LineSeparator]The result is given following Wolfram\[CloseCurlyQuote]s \
lexicographic ordering of the neighbourhoods involved. "
}], "Text",
 CellChangeTimes->{{3.531075776021242*^9, 3.531075810635727*^9}, {
   3.532798424476813*^9, 3.53279846464307*^9}, {3.5327985002003393`*^9, 
   3.532798665584676*^9}, {3.532798753565753*^9, 3.532798801179475*^9}, {
   3.543421709264576*^9, 3.54342173865023*^9}, 3.543515577609189*^9, {
   3.651863169530363*^9, 3.651863192099684*^9}, {3.651863229533464*^9, 
   3.651863244787485*^9}, {3.783189400735604*^9, 3.783189443906748*^9}, {
   3.814544825023508*^9, 3.814544844353758*^9}, {3.814544917513945*^9, 
   3.814544956932732*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"90713c8d-f96a-4cf2-93bb-de149b12f24a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ActiveStateTransitions", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"stateRefPair_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"stateRefPair", "===", 
      RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ReverseSortBy", "[", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"_", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[LeftFloor]", 
                    RowBox[{"2", "r"}], "\[RightFloor]"}], "/", "2"}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"{", "x_", "}"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"_", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[LeftFloor]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "/", 
                    "2"}], "}"}]}], "]"}]}], "]"}], ",", "y_"}], "}"}], "/;", 
            RowBox[{"x", "\[NotEqual]", "y"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}]}], "]"}], ",", "First"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ReverseSortBy", "[", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"_", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftFloor]", 
                    RowBox[{"2", "r"}], "\[RightFloor]"}], "/", "2"}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "stateRefPair", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "}"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{"_", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftFloor]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "/", 
                   "2"}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{
             "stateRefPair", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}], ",", "First"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5327977581026406`*^9, 3.532797814194295*^9}, {
   3.532797871193697*^9, 3.532798040235022*^9}, {3.532798123064172*^9, 
   3.532798206376067*^9}, {3.532798341410399*^9, 3.53279834149693*^9}, 
   3.532798810207546*^9, 3.651863169575919*^9, {3.8145446778102083`*^9, 
   3.814544708531419*^9}, {3.814545511870219*^9, 3.814545512371255*^9}, 
   3.814553279384946*^9, 3.927031595252186*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"2451b690-505e-4c02-8116-5512c794083e"],

Cell[TextData[{
 "\n",
 StyleBox["ActiveNeighbourhoodPositions",
  FontSlant->"Italic"],
 " gives the position (from 1 to ",
 Cell[BoxData[
  SuperscriptBox[
   StyleBox["k",
    FontSlant->"Italic"], 
   RowBox[{"\[LeftCeiling]", 
    RowBox[{
     RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]]],
  CellChangeTimes->{{3.5327977581026382`*^9, 3.532797814194295*^9}, {
    3.532797871193697*^9, 3.532798040235022*^9}, {3.532798123064172*^9, 
    3.532798206376067*^9}, {3.532798341410399*^9, 3.53279834149693*^9}, 
    3.532798810207546*^9, 3.651863169575919*^9, {3.783189512265339*^9, 
    3.783189513381735*^9}, {3.78534098607095*^9, 3.7853410345023136`*^9}, {
    3.785341093902515*^9, 3.785341124536949*^9}, {3.814544990977781*^9, 
    3.814544992652775*^9}},ExpressionUUID->
  "44309f54-dae5-4f32-a8e3-e45ec1bc8944"],
 ") of each active neighbourhood of a local rule {",
 StyleBox["rnum,k,r",
  FontSlant->"Italic"],
 "}, the neighbourhoods organised in Wolfram\[CloseCurlyQuote]s lexicographic \
order. \nNon",
 StyleBox["ActiveNeighbourhoodPositions",
  FontSlant->"Italic"],
 " is the opposite to ",
 StyleBox["ActiveNeighbourhoodPositions",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nActiveNeighbourhoodPositions[30, 2, 1]         \[Implies] {1,2,4,7} \n\
NonActiveNeighbourhoodPositions[30, 2, 1]  \[Implies] {3,5,6,8} "
}], "Text",
 CellChangeTimes->{{3.531075776021242*^9, 3.531075810635727*^9}, {
   3.532798424476813*^9, 3.53279846464307*^9}, {3.5327985002003393`*^9, 
   3.532798665584676*^9}, {3.532798753565753*^9, 3.532798801179475*^9}, {
   3.543421709264576*^9, 3.54342173865023*^9}, 3.543515577609189*^9, {
   3.651863169530363*^9, 3.651863192099684*^9}, {3.651863229533464*^9, 
   3.651863244787485*^9}, 3.78318939559157*^9, {3.7831894618355093`*^9, 
   3.783189479921537*^9}, {3.783189534798935*^9, 3.783189562292015*^9}, {
   3.785340953772543*^9, 3.785340974348871*^9}, {3.7853411612238283`*^9, 
   3.785341188212264*^9}, {3.8145529321960073`*^9, 3.81455300760052*^9}, {
   3.814553046486862*^9, 3.8145530602886267`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"00cdf60d-6226-4b22-aeea-335acd2be31e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ActiveNeighbourhoodPositions", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IntegerPart", "[", 
          SuperscriptBox["k", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}]], "]"}], "-", 
         RowBox[{"FromDigits", "[", 
          RowBox[{"#", ",", "k"}], "]"}]}], ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"First", "/@", 
        RowBox[{"ActiveStateTransitions", "[", 
         RowBox[{"{", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], "]"}]}], ")"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NonActiveNeighbourhoodPositions", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       SuperscriptBox["k", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]]}], "]"}], ",", 
     RowBox[{"ActiveNeighbourhoodPositions", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5327977581026406`*^9, 3.532797814194295*^9}, {
   3.532797871193697*^9, 3.532798040235022*^9}, {3.532798123064172*^9, 
   3.532798206376067*^9}, {3.532798341410399*^9, 3.53279834149693*^9}, 
   3.532798810207546*^9, 3.651863169575919*^9, {3.783189512265339*^9, 
   3.783189513381735*^9}, {3.78534098607095*^9, 3.785341034502314*^9}, {
   3.785341093902515*^9, 3.785341124536949*^9}, {3.814544990977781*^9, 
   3.814544992652775*^9}, {3.814553315216951*^9, 3.814553324845122*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c4bb0151-f7f0-4593-a932-664bbe960b9a"],

Cell[TextData[{
 "\nTakes a ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " rule, expressed as a pattern of all the active state transitions, and \
works out the corresponding rule number. The patterns can be expressed in the \
standard form of the CellularAutomaton function, i.e., {{_,_,_,0,1,1,0,_,_}\
\[Rule]0, {_,0,0,1,0,0,_,_,_}\[Rule]1, ...} , or as a list of the active \
state transitions, i.e., {{{_,_,_,0,1,1,0,_,_}, 0}, {{_,0,0,1,0,0,_,_,_}, 1}, \
... }.\nThis is done because the CellularAutomaton function is MUCH faster to \
run with the rule number than with a pattern. The input pattern is meant to \
explicity represent all the state transitions the rule must have, but NOT \
those that are simply meant to preserve the central cell. \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nActiveStateTransitionsToRnum[2, 4, {{_,_,_,0,1,1,0,_,_} \[Rule] 0, \
{1,1,1,0,1,_,_,_,_} \[Rule] 0, {1,1,1,0,0,_,_,_,_} \[Rule] 1, \
{_,_,0,1,0,1,0,0,_} \[Rule] 1}]\nActiveStateTransitionsToRnum[2, 4, \
{{{_,_,_,0,1,1,0,_,_}, 0}, {{1,1,1,0,1,_,_,_,_}, 0}, {{1,1,1,0,0,_,_,_,_}, \
1}, {{_,_,0,1,0,1,0,0,_}, 1}}]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nFor asymmetrical neighbourhood",
 StyleBox[",",
  FontSlant->"Italic"],
 " the cell that has its state changed is the one on the right of the \
symmetry axis of the neighbourhood. However, in order to have the change on \
the left of the symmetry axis of the neighbourhood, it suffices to replace \
\[LeftCeiling](2 \[LeftCeiling]r\[RightCeiling]+1)/2\[RightCeiling] with \
\[LeftCeiling](2  \[LeftFloor]r\[RightFloor]+1)/2\[RightCeiling] ."
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.527251468720158*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.54298361110452*^9, 3.542983611975018*^9}, {3.5429841446522617`*^9, 
   3.542984278780014*^9}, {3.542984545779944*^9, 3.542984561928295*^9}, 
   3.543513530109576*^9, {3.543514375274689*^9, 3.54351438528716*^9}, {
   3.543514498348002*^9, 3.543514507849997*^9}, {3.5435145449100046`*^9, 
   3.543514632432372*^9}, {3.543514694968414*^9, 3.543514804725131*^9}, {
   3.543514855945701*^9, 3.543514925463566*^9}, {3.543514969539377*^9, 
   3.543514989064666*^9}, {3.543515059978657*^9, 3.54351514590536*^9}, 
   3.543515546805366*^9, {3.543515639972035*^9, 3.543515649966383*^9}, {
   3.65186316959551*^9, 3.651863192138912*^9}, {3.873983520338903*^9, 
   3.873983555797922*^9}, {3.873983608158283*^9, 3.873983612565367*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6f4180b4-f324-4447-ada5-713d7eae76aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ActiveStateTransitionsToRnum", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "inpattern_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"allTuples", ",", "inStateTransitions"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"allTuples", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], ",", 
         RowBox[{"\[LeftCeiling]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"inStateTransitions", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", ",", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                "}"}], "&"}], "[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"allTuples", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
              "inpattern"}], ")"}]}], ")"}]}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RnumFromRuleTable", "[", 
       RowBox[{
        RowBox[{"Reverse", "@", 
         RowBox[{"Union", "[", 
          RowBox[{"inStateTransitions", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", " ", ",", 
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"\[LeftCeiling]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", 
                    RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], "+",
                     "1"}], ")"}], "/", "2"}], "\[RightCeiling]"}], 
                "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Complement", "[", 
             RowBox[{"allTuples", ",", 
              RowBox[{"First", "/@", "inStateTransitions"}]}], "]"}]}]}], 
          "]"}]}], ",", "k"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.527017081537174*^9, 3.527017118397089*^9}, {
   3.527017152758809*^9, 3.527017211690764*^9}, {3.527017368172933*^9, 
   3.527017423279414*^9}, {3.5270176309582453`*^9, 3.527017643420727*^9}, 
   3.527017689198312*^9, {3.527017726410346*^9, 3.527017737604679*^9}, {
   3.5270177932634*^9, 3.527017800271123*^9}, {3.527017844038816*^9, 
   3.527017926083797*^9}, {3.5270181589317*^9, 3.527018159219784*^9}, {
   3.52701819257044*^9, 3.527018201314401*^9}, {3.527018280666441*^9, 
   3.5270182871753206`*^9}, {3.527018318257036*^9, 3.5270183341335583`*^9}, {
   3.527018586182487*^9, 3.527018587773098*^9}, {3.527018682274699*^9, 
   3.52701871613729*^9}, {3.527031374020742*^9, 3.527031407195507*^9}, {
   3.527031464124441*^9, 3.527031586508531*^9}, 3.527031682283654*^9, {
   3.527032997874303*^9, 3.527033066726693*^9}, {3.527033137070681*^9, 
   3.527033171813436*^9}, {3.527073225209497*^9, 3.527073291703401*^9}, {
   3.5270733544798326`*^9, 3.527073354943767*^9}, {3.527073387557823*^9, 
   3.527073418874012*^9}, {3.527073451882954*^9, 3.527073481091584*^9}, {
   3.527073536604704*^9, 3.527073654008662*^9}, {3.527094492237696*^9, 
   3.527094540840061*^9}, 3.527094572943256*^9, {3.527094678355262*^9, 
   3.527094682394525*^9}, {3.527094731558747*^9, 3.527094797633755*^9}, {
   3.52709484615062*^9, 3.527095028430442*^9}, {3.527095109326565*^9, 
   3.52709511340362*^9}, 3.527095305774699*^9, {3.527095351686462*^9, 
   3.527095357420659*^9}, {3.527095560768444*^9, 3.527095564960096*^9}, {
   3.527098867521832*^9, 3.527098937674576*^9}, {3.527098969197599*^9, 
   3.52709902697098*^9}, {3.527099091676543*^9, 3.527099109955865*^9}, {
   3.527099172520982*^9, 3.527099194882969*^9}, 3.527099250237067*^9, 
   3.527099325982496*^9, {3.527099424065578*^9, 3.527099487069445*^9}, {
   3.527099752184675*^9, 3.527099797757036*^9}, 3.52709984031919*^9, 
   3.527248351827932*^9, 3.527248929960973*^9, {3.527249000580511*^9, 
   3.527249041115122*^9}, {3.527249144248155*^9, 3.527249177242132*^9}, 
   3.527255181671712*^9, 3.529150430733148*^9, {3.542984511083212*^9, 
   3.54298452012805*^9}, {3.543513481426002*^9, 3.543513507009872*^9}, {
   3.543513547603084*^9, 3.54351358053899*^9}, {3.543514058378312*^9, 
   3.543514064724635*^9}, {3.543514344652141*^9, 3.543514345045128*^9}, {
   3.543514814565919*^9, 3.543514817724545*^9}, 3.6518631696219177`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"72fff3d2-c001-4126-9b2d-247ca7948dc2"],

Cell["\<\

Flips the bit of a neighbourhood at a given position.\
\>", "Text",
 CellChangeTimes->{
  3.543515588407075*^9, {3.783189265164239*^9, 3.783189280243242*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"23c60baf-9149-4323-a6ae-f0a2d906d15f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flip", "[", 
    RowBox[{"neighbourhood_", ",", "position_"}], "]"}], ":=", " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"neighbourhood", ",", 
     RowBox[{"1", "-", 
      RowBox[{
      "neighbourhood", "\[LeftDoubleBracket]", "position", 
       "\[RightDoubleBracket]"}]}], ",", "position"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"14eb75e1-4fc4-48d2-ab0b-d63699779a0d"],

Cell[TextData[{
 "\nYields the output of a given neighbourhood from rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ". The neighbourhood may be given as the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary sequence that defines it, or as the decimal number it represents (e.g, \
decimal 6 for neighbourhood {0, 1, 1, 0}, etc).\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nThe function is general for any value of ",
 StyleBox["k",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.498385550383894*^9, 3.498385622407894*^9}, {
   3.498385656487894*^9, 3.498385763999894*^9}, {3.498548511917*^9, 
   3.498548561696*^9}, {3.4985486237799993`*^9, 3.498548636071*^9}, 
   3.543515590303743*^9, {3.571564704265625*^9, 3.571564755875*^9}, {
   3.57156488725*^9, 3.5715649401875*^9}, {3.571565235171875*^9, 
   3.571565247859375*^9}, {3.806338770500465*^9, 3.806338771294853*^9}, 
   3.806338839408819*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4dd9a42e-c71d-4ee3-b084-fcccb616a083"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{"neighbourhood_List", ",", "rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{
      RowBox[{"FromDigits", "[", 
       RowBox[{"neighbourhood", ",", "k"}], "]"}], ",", 
      RowBox[{"KAryFromRuleTable", "[", 
       RowBox[{"RuleTable", "[", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}], ",", "k", ",", 
      "r"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{"neighbourhood_List", ",", "kAryRuleTable_List", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{
      RowBox[{"FromDigits", "[", 
       RowBox[{"neighbourhood", ",", "k"}], "]"}], ",", "kAryRuleTable", ",", 
      "k", ",", "r"}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{"neighbourhoodindex_Integer", ",", "rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"RuleOutputFromNeighbourhood", "[", 
     RowBox[{"neighbourhoodindex", ",", 
      RowBox[{"KAryFromRuleTable", "[", 
       RowBox[{"RuleTable", "[", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}], ",", "k", ",", 
      "r"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleOutputFromNeighbourhood", "[", 
    RowBox[{"neighbourhoodindex_Integer", ",", "kAryRuleTable_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"Extract", "[", 
    RowBox[{"kAryRuleTable", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["k", 
        RowBox[{"\[LeftFloor]", 
         RowBox[{
          RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "-", 
       "neighbourhoodindex"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.498384277520894*^9, 3.498384285017894*^9}, {
   3.498384329569894*^9, 3.498384353256894*^9}, {3.498384459593894*^9, 
   3.498384467537894*^9}, {3.4983856431778936`*^9, 3.4983856690578938`*^9}, {
   3.4983857936898937`*^9, 3.498385796992894*^9}, {3.498548876719*^9, 
   3.498548897909*^9}, {3.571565193109375*^9, 3.571565193125*^9}, 
   3.6085383262138243`*^9, {3.611054823944264*^9, 3.611054835092054*^9}, {
   3.611055004581606*^9, 3.611055009389844*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"9ac4080e-65cf-4e99-bcbb-cb68f94b6cd8"],

Cell[TextData[{
 "\nTakes a one-dimensional ",
 StyleBox["lattice",
  FontSlant->"Italic"],
 " configuration, and returns the neighbourhood associated with the cell \
position ",
 StyleBox["cellpos",
  FontSlant->"Italic"],
 ", according to a radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " rule number",
 "."
}], "Text",
 CellChangeTimes->{3.543515592175581*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"90653f1d-dfd3-42c7-a4bd-9b187ae6b054"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNeighbourhood", "[", 
    RowBox[{"cellpos_Integer", ",", "lattice_List", ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"latlen", "=", 
       RowBox[{"Length", "[", "lattice", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Extract", "[", 
      RowBox[{"lattice", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[LessEqual]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"#", "+", "latlen"}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", ">", "latlen"}], ",", 
             RowBox[{"{", 
              RowBox[{"#", "-", "latlen"}], "}"}], ",", 
             RowBox[{"{", "#", "}"}]}], "]"}]}], "]"}], "&"}], "/@", " ", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"cellpos", "-", 
           RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
          RowBox[{"cellpos", "+", 
           RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}]}], "]"}]}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.611054855225464*^9, 3.611054856973371*^9}, {
  3.728990559728265*^9, 3.7289905635099*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"54cfad9f-3c02-422a-8aed-406295056712"],

Cell[TextData[{
 "\nWorks out the Boolean Derivative of a state transition, at a given bit \
position in the neighbourhood. \n",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": The radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " can only be an integer, but maybe it can be generalised here too."
}], "Text",
 CellChangeTimes->{3.495985459449199*^9, 3.543515597078563*^9, 
  3.728990521009944*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a634f650-e208-4a0e-bc07-087ea7a6c2d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BooleanDerivative", "[", 
    RowBox[{
    "statetransition_", ",", "position_", ",", " ", "rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "statetransition", "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
      RowBox[{"RuleOutputFromNeighbourhood", "[", 
       RowBox[{
        RowBox[{"Flip", "[", 
         RowBox[{
          RowBox[{
          "statetransition", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], ",", " ", "position"}], "]"}], ",", 
        "rnum", ",", "k", ",", "r"}], "]"}]}], ",", " ", "1", ",", " ", "0"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.571565193125*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"33b754bb-7d4d-474c-a406-05e2403c95e5"],

Cell[TextData[{
 "\nAuxiliary function that takes a Real radius value (multiple of 0.5), and \
returns the appropriate radius representation for the CellularAutomaton \
function. This means that it allows using Integer or Real-valued radii in the \
CellularAutomaton function. Used in functions such as ReversibleRuleQ.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nFlexRadius[1]  or  FlexRadius[1.]  yields 1\nFlexRadius[1.5]  yields \
{{-2}, {-1}, {0}, {1}}"
}], "Text",
 CellChangeTimes->{3.543515600367592*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a80ce846-ca1a-4d20-8725-1b9fbf462026"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FlexRadius", "[", 
    RowBox[{"r_", ":", "1"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"raux", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], "<", "r"}], ",", 
         "r", ",", 
         RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], "]"}]}], "}"}], 
     ",", "     ", 
     RowBox[{"(*", " ", 
      RowBox[{"r", "=", 
       RowBox[{
        RowBox[{"1.", " ", "becomes", " ", "r"}], "=", "1"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Not]", 
        RowBox[{"IntegerQ", "[", "raux", "]"}]}], ",", 
       RowBox[{"List", "/@", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
          RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], "]"}]}], ",", 
       "raux"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"993d70f8-871c-4b3a-90bd-fdf3368c4497"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rule templates", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 
   3.543489258912819*^9},ExpressionUUID->"838f7d5d-5ed5-44a9-8696-\
9bc810d7232a"],

Cell[TextData[{
 StyleBox["Creates a rule template representing an entire CA rule space, \
using xn..x1 as variables.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\nBaseTemplate[] => {x8,x7,x6,x5,x4,x3,x2,x1}\nBaseTemplate[2,2] \
=> {x32,x31,x30,x29,x28,x27,x26,x25,x24,x23,x22,x21,x20,x19,x18,x17,x16,x15,\
x14,x13,x12,x11,x10,x9,x8,x7,x6,x5,x4,x3,x2,x1}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601721674906526*^9, 
  3.601721793133881*^9}},ExpressionUUID->"48779cda-88c7-4a7b-a767-\
13c40500c11e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BaseTemplate", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<x\>\"", "<>", 
       RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"\[LeftCeiling]", 
         RowBox[{"r", "*", "2"}], "\[RightCeiling]"}], "+", "1"}]], ",", "1", 
      ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.601721711271803*^9, 3.601721711272914*^9}, {
  3.602671080896063*^9, 3.602671081790635*^9}, {3.610996254141404*^9, 
  3.610996261846389*^9}, {3.611044848529464*^9, 3.611044853323766*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f0f72a31-ff65-4ba8-8ad1-4a93a511f7a9"],

Cell[TextData[{
 "Rule templates may have 2 forms: the standard ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary representation of the rule, and the variable-based form. The \
variable-based form is useful for further processing of the template, since \
the variables names in this case can be considered as variables for ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 "\nExamples:\n",
 StyleBox["K-ary",
  FontSlant->"Italic"],
 " form: {1, 1, 0, 1, 0, 1, 1, 0} \n",
 StyleBox["Variable",
  FontSlant->"Italic"],
 "-based",
 StyleBox[" ",
  FontSlant->"Italic"],
 "form: {1-BBB, 1-BBA, 1-BAB, BBA, 1-BBA, BAB, BBA, BBB}"
}], "Text",
 CellChangeTimes->{{3.586684575140625*^9, 3.586684603265625*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"292ab257-22ac-4b59-a5e1-15eeca074d6e"],

Cell[TextData[{
 StyleBox["RnumFromRuleTemplate",
  FontSlant->"Italic"],
 " yields the rule number associated with a rule template. When the template \
is in the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary form it works just like the function ",
 StyleBox["RnumFromRuleTable",
  FontSlant->"Italic"],
 ". But when the variable-based form is concerned, it works by instantiating \
the set of variables with the ",
 StyleBox["n-",
  FontSlant->"Italic"],
 "th possible value substitution, in lexicographic order. \nArgument ",
 StyleBox["substitutionref",
  FontSlant->"Italic"],
 " may be assigned a single substitution or a list of them. If ",
 StyleBox["substitutionref",
  FontSlant->"Italic"],
 " is assigned All, then all possible substitutions are used. Also, if ",
 StyleBox["substitutionref",
  FontSlant->"Italic"],
 " is assigned 0, no substitution is carried out, since it is assumed that \
the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary form is being used; values <0 or those larger than the possible \
maximum entail error and a warning message. \nNotice that it is the set of \
substitutions that are generated in (lexicographic) order, not the resulting \
list of rule numbers. For example, since \
RuleTemplateVars[MaxSymmTemplate[{BWLR, BW, LR},2,1]] returns {BAB, BBA, \
BBB}, RnumFromRuleTemplate[2, 1, Range[8], MaxSymmTemplate[{BWLR, BW, LR}, 2, \
1]] returns the unsorted list {105, 178, 51, 204, 77, 150, 23, 232}, because\n\
rule 105 corresponds to the 1st variable substitution {BBB\[Rule]0, \
BBA\[Rule]0, BAB\[Rule]1}, \nrule 178 corresponds to the 2nd variable \
substitution {BBB\[Rule]0, BBA\[Rule]1, BAB\[Rule]0},\nrule 51 corresponds to \
the 3rd variable substitution {BBB\[Rule]0, BBA\[Rule]1, BAB\[Rule]1}, and so \
on.\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 "\nRnumFromRuleTemplate[2, 1, All, {1-BBB, 1-BBA, 1-BAB, BBA, 1-BBA, BAB, \
BBA, BBB}]  => {105, 178, 51, 204, 77, 150, 23, 232}\nRnumFromRuleTemplate[2, \
1, 2, {1-BBB, 1-BBA, 1-BAB, BBA, 1-BBA, BAB, BBA, BBB}]  => 178\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": In the MacBook, I noticed that  RnumFromRuleTemplate[2, 1, {1-BBB, 1-BBA, \
1-BAB, BBA, 1-BBA, BAB, BBA, BBB}]  is interpreted as RnumFromRuleTemplate[2, \
1, 1, {1-BBB, 1-BBA, 1-BAB, BBA, 1-BBA, BAB, BBA, BBB}] =>  105.  "
}], "Text",
 CellChangeTimes->{
  3.526922294355423*^9, {3.5269232894998913`*^9, 3.526923440442416*^9}, {
   3.526923481431405*^9, 3.526923547576375*^9}, {3.5269245733239*^9, 
   3.526924609642871*^9}, {3.526924662201074*^9, 3.526924762296725*^9}, {
   3.52692523149792*^9, 3.526925269768567*^9}, {3.526925310842558*^9, 
   3.526925317280014*^9}, {3.52692540978761*^9, 3.526925413785233*^9}, {
   3.527248691337809*^9, 3.52724872210163*^9}, 3.586684776953125*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"fe3d1cee-b69f-4987-acac-1dc2a20eacb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RnumFromRuleTemplate", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "substitutionref_", ",", 
     "ruletemplate_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"substitutionref", ",", "\[IndentingNewLine]", "All", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"RnumFromRuleTemplate", "[", 
        RowBox[{"k", ",", "r", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           SuperscriptBox["k", 
            RowBox[{"Length", "[", 
             RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]]}],
           "]"}], ",", "ruletemplate"}], "]"}], ",", "NumberQ"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"s_", "/;", 
      RowBox[{"IntegerQ", "[", "s", "]"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"substitutionref", ",", "\[IndentingNewLine]", "0", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}], "===",
           "0"}], ",", 
         RowBox[{"RnumFromRuleTable", "[", 
          RowBox[{
           RowBox[{"RuleTemplateToRuleTable", "[", 
            RowBox[{"ruletemplate", ",", "k", ",", "r"}], "]"}], ",", "k"}], 
          "]"}], ",", 
         RowBox[{
         "Print", "[", "\"\<Given template should be in k-ary form.\>\"", 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"s_", "/;", 
        RowBox[{
         RowBox[{"s", ">", 
          SuperscriptBox["k", 
           RowBox[{"Length", "[", 
            RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]]}], 
         "\[Or]", 
         RowBox[{"s", "<", "0"}]}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Substitution order is beyond the maximum possible value (\>\"", 
         ",", 
         SuperscriptBox["k", 
          RowBox[{"Length", "[", 
           RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]], 
         ",", "\"\<) for this rule space.\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", "_", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "==",
             "True"}], ",", 
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
              "k"}], "]"}]}], "]"}], "&"}], "[", 
        RowBox[{"SubstitutionValidity", "[", 
         RowBox[{"k", ",", "substitutionref", ",", "ruletemplate"}], "]"}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"s_", "/;", 
      RowBox[{
       RowBox[{"Length", "[", "s", "]"}], ">", 
       SuperscriptBox["k", 
        RowBox[{"Length", "[", 
         RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]]}]}], 
     ",", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<List of substitutions is larger the maximum (\>\"", ",", 
       SuperscriptBox["k", 
        RowBox[{"Length", "[", 
         RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]], ",", 
       "\"\<) for this rule space.\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     "_", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"RnumFromRuleTemplate", "[", 
          RowBox[{"k", ",", "r", ",", "#", ",", "ruletemplate"}], "]"}], 
         "&"}], "/@", "substitutionref"}], ",", "NumberQ"}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.526924793915106*^9, 3.526924849734735*^9}, {
  3.526924885444247*^9, 3.526924896034065*^9}, {3.526924935976667*^9, 
  3.526924938898498*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ad8b9768-8d89-4c1e-ae75-0baa58847b6a"],

Cell[TextData[{
 "Performs a template expansion, i. e. finds all rule tables a template \
represents in k-ary form. The third optional parameter is used to perform one \
expansion at a time, making it feasible to partition a big expansion in \
smaller ones.\n",
 StyleBox["Examples of usage:\[LineSeparator]",
  FontWeight->"Bold"],
 "ExpandTemplate[{1,1+x3-x4,1-x3,1-x2-x3,x4,x3,x2,0}]",
 StyleBox[" => ",
  FontWeight->"Bold"],
 "{{1,0,1,1,1,0,0,0},{1,2,0,0,0,1,0,0},{1,1,0,0,1,1,0,0},{1,1,1,0,0,0,1,0},{1,\
0,1,0,1,0,1,0},{1,2,0,-1,0,1,1,0},{1,1,0,-1,1,1,1,0},{1,1,1,1,0,0,0,0}}\n\
ExpandTemplate[{1,1+x3-x4,1-x3,1-x2-x3,x4,x3,x2,0}, 2]",
 StyleBox[" => ",
  FontWeight->"Bold"],
 "{1,2,0,0,0,1,0,0}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \[LineSeparator]This function does not remove invalid substitutions (like \
{1,2,0,0,0,1,0,0} in the elementary space). This decision was made because it \
would create confusion with the parameter ithSubstitution, as a user that \
expects the template to have x substitutions would actually have x-invalid \
substitutions. This problem would be agravated by the fact that the number of \
invalid substituins is not predictable by the user of the function."
}], "Text",
 CellChangeTimes->{{3.601815183770213*^9, 3.6018155901400957`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"433a87d6-8c6d-4472-8b78-310aebedbe89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpandTemplate", "[", 
     RowBox[{"template_List", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"substitutionRange", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"k", "^", 
           RowBox[{"Length", "[", 
            RowBox[{"RuleTemplateVars", "[", "template", "]"}], "]"}]}]}], 
         "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ExpandTemplate", "[", 
         RowBox[{"template", ",", "k", ",", "#"}], "]"}], "&"}], "/@", 
       "substitutionRange"}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandTemplate", "[", 
    RowBox[{"template_List", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", "ithSubstitution_Integer"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "templateVariables", ",", "transformationRules", ",", "substitutions"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"templateVariables", "=", 
       RowBox[{"RuleTemplateVars", "[", "template", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"substitutions", "=", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"ithSubstitution", ",", "k", ",", 
         RowBox[{"Length", "[", "templateVariables", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"transformationRules", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"templateVariables", ",", "substitutions"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"template", "/.", "transformationRules"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6018151681601343`*^9, 3.601815172405945*^9}, {
  3.602671087545079*^9, 3.602671095214114*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"74bdb6ce-86ba-4557-a45e-a60ced441898"],

Cell[TextData[{
 "Extracts the variable names used in a rule template and returns them in a \
list. The names are given in lexicographical order; for instance, \
RuleTemplateVars[MaxSymmTemplate[{BWLR, BW, LR}, 2, 1]] returns {BAB, BBA, \
BBB}. If the template is in the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary form, the function returns {}."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a7c7d032-e513-4877-9258-e4ca34f4868f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleTemplateVars", "[", "ruletemplate_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"varnames", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "===", "0"}], ",", "#", ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}], "/@", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "===", "0"}], ",", "#", 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], 
               "]"}], "&"}], "/@", "ruletemplate"}], "]"}], ",", 
           RowBox[{
            RowBox[{"\[Not]", 
             RowBox[{"NumericQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "varnames", "]"}], ">", "0"}], ",", "varnames",
        ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"882dd356-a16c-4fa8-816b-160c69918dfe"],

Cell[TextData[{
 "Transforms a rule template (including those in the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary form) into the corresponding rule table."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"fc006ba7-9b97-4cfc-84c2-3963ade6a88c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleTemplateToRuleTable", "[", 
    RowBox[{"ruletemplate_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"List", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AllNeighbourhoods", "[", 
        RowBox[{"k", ",", "r"}], "]"}], ",", "ruletemplate"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"f8bd7226-a56e-4aef-bbd7-a2a4ba411fa1"],

Cell["\<\
Generalisation of the function RuleOutputFromNeighbourhood. Yields the output \
for a given neighbourhood of a rule, represented in either of the 2 kinds of \
templates.\
\>", "Text",
 CellChangeTimes->{3.5715651931875*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"079e565b-a4d3-45e0-875b-3261744575c6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"RuleOutputFromTemplate", "[", 
     RowBox[{"neighbourhood_List", ",", "template_", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Extract", "[", 
     RowBox[{"template", ",", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["k", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "-", 
        RowBox[{"FromDigits", "[", 
         RowBox[{"neighbourhood", ",", "k"}], "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.392757297958217*^9, {3.60853855578329*^9, 3.608538558244346*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"7046886d-5cff-4c6e-b30e-a14e8d02d2f1"],

Cell[TextData[{
 "Transforms the variables in a template to strings of the type \"b",
 StyleBox["number",
  FontSlant->"Italic"],
 "\". For instance, TemplateVarsToString[{1-BBB, 1-BBA, 1-BAB, BBA, 1-BBA, \
BAB, BBA, BBB}] yields the string",
 StyleBox["  ",
  FontSlant->"Italic"],
 "{1-\"b3\", 1-\"b2\", 1-\"b1\", \"b2\", 1-\"b2\", \"b1\", \"b2\", \"b3\"}. \
This kind of string form is useful for providing a simpler final display of \
the template, which is better for visual inspection."
}], "Text",
 CellChangeTimes->{{3.586687229171875*^9, 3.586687229328125*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c843853d-103a-49c3-aa72-5a07e5e48fc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemplateVarsToString", "[", "ruletemplate_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ruletemplate", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"#", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<b\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], 
     "&"}], "[", 
    RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"64e40aa4-7576-420a-a916-c42631f4e647"],

Cell[TextData[{
 "Generates variable names to be used in a rule template. They are meant to \
be standard variable names in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (for instance, to be used in the ",
 StyleBox["Solve",
  FontSlant->"Italic"],
 " function).\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": This is an auxiliary function for some template handling functions, such \
as ",
 StyleBox["MaxSymmTemplate",
  FontSlant->"Italic"],
 ". "
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2c8ae193-ca93-461f-a487-90ebdd57fef5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreateVarForm", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"Apply", "[", 
       RowBox[{"StringJoin", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"CharacterRange", "[", 
       RowBox[{
        RowBox[{"FromCharacterCode", "[", "65", "]"}], ",", 
        RowBox[{"FromCharacterCode", "[", 
         RowBox[{"64", "+", "k"}], "]"}]}], "]"}], ",", 
      RowBox[{"\[LeftFloor]", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.392757238562811*^9, 3.392757249568637*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"c37fd88c-d039-4e14-b12a-b0c6bff5949c"],

Cell[TextData[{
 "This function uses ",
 StyleBox["InequalitySolve",
  FontSlant->"Italic"],
 " to list all valid substitutions for the given input template; this is \
required because, as a consequence of its variable substitutions, some of \
them may lead to outputs not in the valid ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary set.\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) Only valid for BF templates, so far: yet to be generalised for other \
templates.\n2) The equations given to InequalitySolve are organised so as to \
(hopefully) make it easier and/or more efficient to be solved: (1) they are \
grouped via ",
 "GatherBy",
 " according to the (sorted) variables they refer to; (2) they are sorted \
from the shortest to the longest list of variables they rely upon. Even then \
it's still very slow.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nValidSubstitutionsForTemplate[2, 1, BFConservationTemplate[2,1]]\n{{BAA\
\[Rule]0,BAB\[Rule]0,BBA\[Rule]0}, {BAA\[Rule]0,BAB\[Rule]0,BBA\[Rule]1}, \
{BAA\[Rule]1,BAB\[Rule]0,BBA\[Rule]0}, {BAA\[Rule]1,BAB\[Rule]0,BBA\[Rule]1}, \
{BAA\[Rule]1,BAB\[Rule]1,BBA\[Rule]0}}\nValidSubstitutionsForTemplate[2, 1, \
MaxSymmTemplate[{BWLR, BW, LR}, 2,1]]\n\
{{BAB\[Rule]0,BBA\[Rule]0,BBB\[Rule]0},{BAB\[Rule]0,BBA\[Rule]0,BBB\[Rule]1},{\
BAB\[Rule]0,BBA\[Rule]1,BBB\[Rule]0},{BAB\[Rule]0,BBA\[Rule]1,BBB\[Rule]1},{\
BAB\[Rule]1,BBA\[Rule]0,BBB\[Rule]0},{BAB\[Rule]1,BBA\[Rule]0,BBB\[Rule]1},{\
BAB\[Rule]1,BBA\[Rule]1,BBB\[Rule]0},{BAB\[Rule]1,BBA\[Rule]1,BBB\[Rule]1}}"
}], "Text",
 CellChangeTimes->{3.575970481577368*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6509e549-7b8b-4128-87c4-072d2fcd4ee6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ValidSubstitutionsForTemplate", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "intemplate_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"templatepartswithvariables", ",", "equations"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"templatepartswithvariables", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"intemplate", ",", 
          RowBox[{
           RowBox[{"\[Not]", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}], ",", "True"}], "]"}], ",",
               "#"}], "]"}]}], "&"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0", "\[LessEqual]", "#", "\[LessEqual]", 
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}]}], ")"}], "&"}], "/@", 
          "templatepartswithvariables"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"List", "@", 
       RowBox[{"ToRules", "@", 
        RowBox[{"LogicalExpand", "@", 
         RowBox[{"Reduce", "[", 
          RowBox[{"equations", ",", 
           RowBox[{
           "RuleTemplateVars", "[", "templatepartswithvariables", "]"}], ",", 
           "Integers"}], "]"}]}]}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.392983432079521*^9, 3.39298343333132*^9}, {
  3.392983476613558*^9, 3.392983489502091*^9}, {3.392983630685102*^9, 
  3.392983631316009*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"96136d6d-ae4c-4caa-ba77-f5417d64007d"],

Cell[TextData[{
 "Auxiliary function used only by ",
 StyleBox["ValidSubstitutionsForTemplate",
  FontSlant->"Italic"],
 ", with individual variables explicitly included in the alternatives (",
 StyleBox["type",
  FontSlant->"Italic"],
 "=vars",
 "). See examples below.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:",
  FontSlant->"Italic"],
 "     TemplateToAlternatives[{1-2BBA, 1-BBA, BBA, 2BBA}, 2]\n",
 StyleBox["Out:",
  FontSlant->"Italic"],
 "  {1-2BBA\[Equal]0 || 1-2BBA\[Equal]1, 1-BBA\[Equal]0 || 1-BBA\[Equal]1, \
BBA\[Equal]0 || BBA\[Equal]1, 2BBA\[Equal]0 || 2BBA\[Equal]1}\n",
 StyleBox["In:",
  FontSlant->"Italic"],
 "     TemplateToAlternatives[{1-2BBA, 1-BBA, BBA, 2BBA}, 2, vars]\n",
 StyleBox["Out:",
  FontSlant->"Italic"],
 "  {{1-2BBA\[Equal]0 || 1-2BBA\[Equal]1, BBA\[Equal]0 || BBA\[Equal]1}, \
{1-BBA\[Equal]0 || 1-BBA\[Equal]1, BBA\[Equal]0 || BBA\[Equal]1}, \
{BBA\[Equal]0 || BBA\[Equal]1}, {BBA\[Equal]0 || BBA\[Equal]1, 2BBA\[Equal]0 \
|| 2BBA\[Equal]1}}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":",
 " It doesn't work for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary templates, but there's no sense in using the function for them."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f3ba3a43-4980-4e30-9c12-4fb2960e4df9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TemplateToAlternatives", "[", 
      RowBox[{"template_", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"type_", ":", "noindivvars"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Union", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\[IndentingNewLine]", "noindivvars", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Or", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"temp", "\[Equal]", "#"}], ")"}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"k", "-", "1"}]}], "]"}]}], ")"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"temp", "\[Rule]", "#"}], "}"}]}], "&"}], "/@", 
         "template"}], ",", "\[IndentingNewLine]", "_", ",", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"Sequence", "@@", "#2"}]}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TemplateToAlternatives", "[", 
             RowBox[{"template", ",", "k"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"TemplateToAlternatives", "[", 
               RowBox[{"#", ",", "k"}], "]"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"RuleTemplateVars", "[", 
                 RowBox[{"{", "#", "}"}], "]"}], "&"}], "/@", "template"}], 
              ")"}]}]}], "}"}]}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"<<", "Algebra`InequalitySolve`"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ValidSubstitutionsForTemplate", "[", 
       RowBox[{
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}], ",", "intemplate_"}], "]"}]}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vars", "=", 
          RowBox[{"RuleTemplateVars", "[", "intemplate", "]"}]}], ",", 
         "templatepartswithvariables", ",", "equationsandvars"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"templatepartswithvariables", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"intemplate", ",", 
            RowBox[{
             RowBox[{"\[Not]", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", "True"}], "]"}], 
                ",", "#"}], "]"}]}], "&"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"equationsandvars", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Union", "@", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"TemplateToAlternatives", "[", 
                   RowBox[{"#", ",", "2", ",", "vars"}], "]"}], ",", "1"}], 
                 "]"}]}], ",", 
               RowBox[{"RuleTemplateVars", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"GatherBy", "[", 
             RowBox[{"templatepartswithvariables", ",", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"RuleTemplateVars", "[", 
                 RowBox[{"{", "#", "}"}], "]"}], "]"}], "&"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "\[LessEqual]", 
             RowBox[{"Length", "[", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"List", "@", 
           RowBox[{"ToRules", "@", 
            RowBox[{"LogicalExpand", "@", 
             RowBox[{"Simplify", "@", 
              RowBox[{"Fold", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"And", "[", 
                  RowBox[{
                   RowBox[{"Simplify", "[", "#1", "]"}], ",", 
                   RowBox[{"Simplify", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
                RowBox[{"First", "[", "#", "]"}], ",", 
                RowBox[{"Rest", "[", "#", "]"}]}], "]"}]}]}]}]}], "&"}], "[", 
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"InequalitySolve", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "]"}], "&"}], "/@", "equationsandvars"}], "]"}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.392983654839835*^9, 3.392983700475456*^9}, {
   3.392983792197346*^9, 3.3929838123463182`*^9}, 3.5759704816497*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"879fd30b-d07f-4c67-83aa-997c0f88be43"],

Cell[TextData[{
 "Auxiliary function used only by ",
 StyleBox["RnumFromRuleTemplate",
  FontSlant->"Italic"],
 "; it checks whether the ",
 StyleBox["ithsubstitution",
  FontSlant->"Italic"],
 " of the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary ",
 StyleBox["ruletemplate",
  FontSlant->"Italic"],
 " is valid or not.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SubstitutionValidity[2, 4, BFConservationTemplate[2, 1]]  ==> ",
 StyleBox["Out:  ",
  FontSlant->"Italic"],
 "{True, {1,0,1,1,1,0,0,0}}\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SubstitutionValidity[2, 2, BFConservationTemplate[2, 1]]  ==> ",
 StyleBox["Out:  ",
  FontSlant->"Italic"],
 "{False}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) It also returns ",
 StyleBox["RuleTemplateVars",
  FontSlant->"Italic"],
 "[",
 StyleBox["ruletemplate",
  FontSlant->"Italic"],
 "] so that it doesn't have to be re-calculated by ",
 StyleBox["RnumFromRuleTemplate",
  FontSlant->"Italic"],
 "; if it weren't for that, the function could be a predicate."
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"979eeb93-82bc-421f-a796-8f77fec74a8a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"SubstitutionValidity", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", "2"}], ",", "ithsubstitution_Integer", ",", 
      "ruletemplate_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"\[Not]", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}], ",", "x"}], "]"}]}]}]}], 
           "]"}], "]"}], "===", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "#"}], "}"}], ",", 
        RowBox[{"{", "False", "}"}]}], "]"}], "&"}], "[", 
     RowBox[{"ruletemplate", "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"#", "\[Rule]", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"ithsubstitution", ",", "k", ",", 
             RowBox[{"Length", "[", "#", "]"}]}], "]"}]}], "]"}], "&"}], "[", 
        RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}], 
       ")"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.3950597510973806`*^9, 3.39505975517324*^9}, 
   3.3950903311320868`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"13c58838-e1c3-464e-8626-b49d1bd932ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SubstitutionValidity", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", "ithsubstitution_Integer", ",", 
     "ruletemplate_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "===", "False"}], ",", 
       RowBox[{"{", "#", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "#"}], "}"}]}], "]"}], "&"}], "[", 
    RowBox[{"Catch", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[Not]", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], ",", "#"}], "]"}]}], ",", 
         RowBox[{"Throw", "[", "False", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"ruletemplate", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"#", "\[Rule]", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"ithsubstitution", ",", "k", ",", 
               RowBox[{"Length", "[", "#", "]"}]}], "]"}]}], "]"}], "&"}], 
          "[", 
          RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}], 
         ")"}]}], ")"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.39505849938751*^9, 3.395058663683757*^9}, {
  3.3950595387820864`*^9, 3.3950596083721523`*^9}, {3.395059661949192*^9, 
  3.395059674817696*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"1f155bee-e98c-4066-8442-818b08c1944f"],

Cell[TextData[{
 "Derived from ",
 StyleBox["SubstitutionValidity",
  FontSlant->"Italic"],
 ", it returns the ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th substitution of the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary ",
 StyleBox["ruletemplate",
  FontSlant->"Italic"],
 ". The function is not at use at moment, but it may be useful."
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}, {
   3.395090373903589*^9, 3.39509053236144*^9}, 3.7640669110870857`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"b8c32f1d-7365-4dbf-a61f-99b5986d757a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IthSubstitution", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", "i_Integer", ",", 
     "ruletemplate_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     RowBox[{"ruletemplate", "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"#", "\[Rule]", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"i", ",", "k", ",", 
             RowBox[{"Length", "[", "#", "]"}]}], "]"}]}], "]"}], "&"}], "[", 
        RowBox[{"RuleTemplateVars", "[", "ruletemplate", "]"}], "]"}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.39314327323128*^9, 3.3931432742928066`*^9}, {
  3.395090234342911*^9, 3.395090300768426*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"0e050572-ce84-4937-bee8-6b6443e83319"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exception patterns for templates", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, {3.650830547313867*^9, 
   3.650830560535701*^9}},ExpressionUUID->"e76c19da-05be-4474-ab49-\
fbce500d9781"],

Cell[TextData[{
 "This function works out the ",
 StyleBox["exception patterns",
  FontSlant->"Italic"],
 " of the given template, which are all the patterns with variable \
assignments that make the template invalid. By invalid I mean that the value \
of a field in the template, entailed by the value substitutions in the \
variables referred to in the exception pattern, is not within the range [0, ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1], as it should.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "ExceptionPatterns[2, 1, BFConservationTemplate[2, 1]]  ==> ",
 StyleBox["Out:  ",
  FontSlant->"Italic"],
 "{{_, _, _, _, 0, 1, _, _}, {_, _, _, _, _, 1, 1, _}}\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "ExceptionPatterns[2, 1.5, BFConservationTemplate[2, 1.5]]\n",
 StyleBox["Out:",
  FontSlant->"Italic"],
 " {{_, _, _, _, _, _, _, _, 0, 1, _, _, _, _, _, _}, {_, _, _, _, _, _, _, \
_, _, 0, 0, _, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, 0, 1, _, 0, 0, _, _}, \
{_, _, _, _, _, _, _, _, _, 0, 1, _, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, \
0, 1, _, 1, 1, _, _}, {_, _, _, _, _, _, _, _, _, 0, _, 0, 0, 1, _, _}, {_, \
_, _, _, _, _, _, _, _, 0, _, 1, 0, 0, _, _}, {_, _, _, _, _, _, _, _, _, 0, \
_, 1, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, 0, _, 1, 1, 1, _, _}, {_, _, \
_, _, _, _, _, _, _, 1, 0, _, 1, 0, _, _}, {_, _, _, _, _, _, _, _, _, 1, 1, \
_, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, 1, _, 0, 1, 0, _, _}, {_, _, _, \
_, _, _, _, _, _, 1, _, 1, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, _, 0, _, \
1, 0, _, _}, {_, _, _, _, _, _, _, _, _, _, 1, _, 0, 1, _, _}, {_, _, _, _, \
_, _, _, _, _, _, _, 0, _, 1, 1, _}, {_, _, _, _, _, _, _, _, _, _, _, 1, _, \
0, 1, _}, {_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, 0, _}, {_, _, _, _, _, \
_, _, _, _, _, _, 1, _, 1, 1, _}, {_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, \
_, _}}"
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}, {
   3.395090373903589*^9, 3.39509053236144*^9}, {3.395169770694609*^9, 
   3.395169772126669*^9}, 3.395169807387371*^9, {3.395170092537397*^9, 
   3.39517016182703*^9}, {3.395170881161383*^9, 3.3951708828137584`*^9}, 
   3.4209788782047634`*^9, {3.420979130026865*^9, 3.420979162743911*^9}, 
   3.573236344904915*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a97e8b50-adaa-4e24-88f7-a08a57b82725"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExceptionPatterns", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "intemplate_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "[", "#", "]"}], ",", "#", ",", "_"}], "]"}], 
         "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CreateVarForm", "[", 
           RowBox[{"k", ",", "r"}], "]"}], "/.", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ")"}], "&"}], "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
             "}"}], "&"}], "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"List", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "}"}], ",", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", "1"}], "]"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "&"}], "/@", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{"Outer", "[", 
                    RowBox[{"List", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RuleTemplateVars", "[", 
                    RowBox[{"{", "#", "}"}], "]"}], ",", "#"}], "}"}], "&"}], 
                    "/@", 
                    RowBox[{"Select", "[", 
                    RowBox[{"intemplate", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Depth", "[", "#", "]"}], ">", "1"}], ")"}], 
                    "&"}]}], "]"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",",
             "2"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"\[Not]", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"k", "-", "1"}]}], "]"}], ",", "x"}], "]"}]}]}]}], 
          "}"}]}], "]"}]}], ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395081127618083*^9, 3.3950811816257424`*^9}, {
   3.395081958202405*^9, 3.395081997318651*^9}, {3.395082069872979*^9, 
   3.395082206008733*^9}, 3.395082302006771*^9, 3.395082346470707*^9, {
   3.395082437902178*^9, 3.395082469157121*^9}, {3.39508252375563*^9, 
   3.395082598813558*^9}, {3.395082629087086*^9, 3.395082631871093*^9}, {
   3.39508273414816*^9, 3.395082740467246*^9}, 3.395082771902448*^9, {
   3.395083003185015*^9, 3.3950830078817697`*^9}, {3.395083175362595*^9, 
   3.3950832108936863`*^9}, {3.395083246945526*^9, 3.395083258952792*^9}, {
   3.395083689111329*^9, 3.395083727246165*^9}, {3.3950837593022594`*^9, 
   3.39508379467312*^9}, {3.395083874457844*^9, 3.395084033626718*^9}, {
   3.3950840745755997`*^9, 3.3950840873539743`*^9}, {3.39508412305531*^9, 
   3.395084125328579*^9}, {3.395084218572658*^9, 3.395084234405424*^9}, {
   3.3950842644986963`*^9, 3.395084266431475*^9}, {3.395084432630458*^9, 
   3.395084434533191*^9}, {3.3950844654977183`*^9, 3.395084582666199*^9}, {
   3.3950846904712143`*^9, 3.395084707716011*^9}, {3.395084772999884*^9, 
   3.3950849200012627`*^9}, {3.395084976252147*^9, 3.395085130814397*^9}, {
   3.395085170511478*^9, 3.395085253500811*^9}, {3.3950852867886767`*^9, 
   3.395085355647691*^9}, {3.395085395094413*^9, 3.395085412259094*^9}, {
   3.395085556256152*^9, 3.395085571558155*^9}, {3.395085676869584*^9, 
   3.395085683218715*^9}, 3.395085761631467*^9, {3.395085800447282*^9, 
   3.395085935972156*^9}, {3.395086006032899*^9, 3.395086337809971*^9}, {
   3.395086372349637*^9, 3.395086375584286*^9}, {3.3950864111954947`*^9, 
   3.395086413618977*^9}, {3.3950865021262465`*^9, 3.395086525019165*^9}, {
   3.3950865857665153`*^9, 3.395086600788115*^9}, {3.395086652762851*^9, 
   3.395086653043254*^9}, 3.395086735371637*^9, {3.3950868418146944`*^9, 
   3.395086962408099*^9}, {3.395087298140859*^9, 3.395087324478731*^9}, {
   3.3951350031421747`*^9, 3.395135014318245*^9}, 3.3951350884648623`*^9, {
   3.395157152130005*^9, 3.3951571574576654`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"50ced673-5a19-40ee-b407-1927bf80546a"],

Cell[TextData[{
 "This function checks whether a pair of patterns can be subsumed by a more \
general (simpler) one, and returns it, if any; otherwise, the original \
patterns are returned. It is used by ",
 StyleBox["SimplifyExceptionPatterns",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SimplifyPairOfExceptionPatterns[{_, _, _, _, _, _, _, _, _, _, _, 0, 0, 1, \
_, _}, {_, _, _, _, _, _, _, _, _, 0, _, 1, 0, 1, _, _}]  \n",
 StyleBox["Out:  ",
  FontSlant->"Italic"],
 "{{_, _, _, _, _, _, _, _, _, _, _, 0, 0, 1, _, _}, {_, _, _, _, _, _, _, _, \
_, 0, _, 1, 0, 1, _, _}}\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SimplifyPairOfExceptionPatterns[{_, _, _, _, _, _, _, _, _, 0, _, 0, 0, 1, \
_, _}, {_, _, _, _, _, _, _, _, _, 0, _, 1, 0, 1, _, _}]\n",
 StyleBox["Out: ",
  FontSlant->"Italic"],
 "{_, _, _, _, _, _, _, _, _, 0, _, _, 0, 1, _, _}\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SimplifyPairOfExceptionPatterns[{_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, \
0, _}, {_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, 1, _}]\n",
 StyleBox["Out: ",
  FontSlant->"Italic"],
 "{_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, _, _}"
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}, {
   3.395090373903589*^9, 3.39509053236144*^9}, {3.395169770694609*^9, 
   3.395169772126669*^9}, 3.3951698251629314`*^9, {3.39517019036807*^9, 
   3.395170256603312*^9}, {3.3951704922020864`*^9, 3.395170503708632*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3bcdd020-9438-4d50-bd2b-81d34dfea323"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyPairOfExceptionPatterns", "[", 
    RowBox[{"exceptionpatternA_", ",", "exceptionpatternB_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aux", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "===", "#2"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"exceptionpatternA", ",", "exceptionpatternB"}], "}"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ListQ", "[", "#", "]"}], "===", "True"}], ",", "#"}],
               "]"}], "&"}], "/@", "aux"}], ",", "ListQ"}], "]"}], "]"}], "===",
         "1"}], ",", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "===", "#2"}], ",", "#1", ",", "_"}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"exceptionpatternA", ",", "exceptionpatternB"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"exceptionpatternA", ",", "exceptionpatternB"}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.39513303736249*^9, 3.395133131327605*^9}, {
  3.395133169812944*^9, 3.395133234385795*^9}, {3.3951333157027235`*^9, 
  3.395133626249267*^9}, {3.395161472943028*^9, 3.395161473163345*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"c36a1c4b-c146-4529-8a82-c31c0eac0874"],

Cell[TextData[{
 "Performs the simplification of an exception pattern, in the sense explained \
above.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": The block concerning the innermost Union checks all pairwise \
simplifications, and returns only the resulting simplified patterns. This is \
then used by the block concerning the outermost Union to perform one entire \
single pass of the simplification, so that FixedPoint can carry on until no \
longer possible.\nAlthough the one-pass simplification uses Outer, I'm not \
fully sure that all possible simplifications are picked.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:     ",
  FontSlant->"Italic"],
 "SimplifyExceptionPatterns[ExceptionPatterns[2, 1.5, \
BFConservationTemplate[2, 1.5]]]\n",
 StyleBox["Out: ",
  FontSlant->"Italic"],
 "{{_, _, _, _, _, _, _, _, 0, 1, _, _, _, _, _, _}, {_, _, _, _, _, _, _, _, \
_, 0, 1, _, 0, _, _, _}, {_, _, _, _, _, _, _, _, _, 0, 1, _, _, 1, _, _}, \
{_, _, _, _, _, _, _, _, _, 0, _, 1, 0, _, _, _}, {_, _, _, _, _, _, _, _, _, \
0, _, _, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, 1, _, 0, 1, 0, _, _}, {_, \
_, _, _, _, _, _, _, _, _, 0, _, 1, 0, _, _}, {_, _, _, _, _, _, _, _, _, _, \
1, _, 0, 1, _, _}, {_, _, _, _, _, _, _, _, _, _, _, 1, _, 1, _, _}, {_, _, \
_, _, _, _, _, _, _, _, _, 1, _, _, 1, _}, {_, _, _, _, _, _, _, _, _, _, _, \
_, _, 1, 1, _}}"
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}, {
   3.395090373903589*^9, 3.39509053236144*^9}, {3.395169770694609*^9, 
   3.395169772126669*^9}, 3.3951698405450497`*^9, {3.3951702941973696`*^9, 
   3.3951703237398486`*^9}, {3.395170454457813*^9, 3.395170483058939*^9}, {
   3.395170525059333*^9, 3.39517057175648*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"bcf86bfe-4bc6-43e3-826d-30b0d6a8acfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyExceptionPatterns", "[", "exceptionpatternlist_", "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"FixedPoint", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expattlist", "=", "#"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{
            RowBox[{"Fold", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"DeleteCases", "[", 
                RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "expattlist", 
              ",", "#"}], "]"}], ",", "#"}], "]"}], "&"}], "[", 
         RowBox[{"Union", "@", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"SimplifyPairOfExceptionPatterns", "[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "expattlist", 
                ",", "expattlist", ",", "1"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Depth", "[", "#", "]"}], "\[Equal]", "3"}], ")"}], 
             "&"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
     "exceptionpatternlist"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395161840411423*^9, 3.3951618766335073`*^9}, {
  3.3951619389531183`*^9, 3.395161954936101*^9}, {3.395162010746352*^9, 
  3.395162042842504*^9}, {3.3951621085970545`*^9, 3.395162171277184*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"4ab09a59-68dd-48fc-a801-31bba1112be8"],

Cell[TextData[{
 "Auxiliary function that turns an exception pattern into a corresponding \
equation. I wrote it because I thought it might be useful to be used together \
with ",
 StyleBox["Solve",
  FontSlant->"Italic"],
 " or ",
 StyleBox["Reduce",
  FontSlant->"Italic"],
 "; however, my first attempt to use it didn't work...\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In:  ",
  FontSlant->"Italic"],
 "ExceptionPatternToEquation[{_, _, _, _, _, 1, 1, _}]   ==> ",
 StyleBox["Out:  ",
  FontSlant->"Italic"],
 "! (BAB == 1 && BBA == 1)"
}], "Text",
 CellChangeTimes->{{3.393146739981747*^9, 3.3931468064072623`*^9}, 
   3.395058128804638*^9, {3.39505969510687*^9, 3.395059695968109*^9}, {
   3.395090373903589*^9, 3.39509053236144*^9}, {3.395169770694609*^9, 
   3.395169772126669*^9}, {3.3951698405450497`*^9, 3.395169995537918*^9}, {
   3.3951703387113776`*^9, 3.3951703712782063`*^9}, 3.395170588660787*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6d1974b8-76bb-4fdc-b2ae-ab8f8ac09556"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExceptionPatternToEquation", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "exceptionpattern_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Not", "[", 
    RowBox[{"And", "@@", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumberQ", "[", "#2", "]"}], ",", 
            RowBox[{"#1", "==", "#2"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"CreateVarForm", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", "exceptionpattern"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"Except", "[", "Null", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.39516321617968*^9, 3.3951632310710926`*^9}, {
  3.3951632788798385`*^9, 3.3951633089230385`*^9}, {3.395163367657495*^9, 
  3.395163400715029*^9}, {3.3951634952910223`*^9, 3.395163694187021*^9}, {
  3.395163733353339*^9, 3.395163820118101*^9}, {3.3951638531455917`*^9, 
  3.3951639514669714`*^9}, {3.3951664617565904`*^9, 3.395166467284539*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e9401942-7bc4-4bdc-b084-99830068162f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4. Template generation of special rule families", "Section",
 CellChangeTimes->{{3.7226763215430937`*^9, 
  3.722676321914288*^9}},ExpressionUUID->"18b7e748-2068-4a51-a529-\
4f9d613bda6b"],

Cell[CellGroupData[{

Cell["\<\
Maximum symmetry counts for any combination of BWLR, BW, LR equivalence\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489588292837*^9},ExpressionUUID->"abf665e5-7711-48ed-8fe8-\
eef310116dd6"],

Cell[TextData[{
 "This higher order function works out a template representing all ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rules with maximum symmetry counts of any transformation function \
(or list of transformation functions) passed in as the first parameter.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nMaxSymmTemplate[BWTransform, 2, 1]\nMaxSymmTemplate[LRTransform, 2, 1]\n\
MaxSymmTemplate[{BWTransform, LRTransform}, 2, 1]\n\
MaxSymmTemplate[{BWTransform, LRTransform, BWTransform[",
 "LRTransform",
 "[#]] &}, 2, 1, BFConservationTemplate[2, 1]]"
}], "Text",
 CellChangeTimes->{{3.580744378125*^9, 3.5807443795*^9}, {
  3.6017224896499434`*^9, 3.601722622732951*^9}, {3.609153764215045*^9, 
  3.6091537709073977`*^9}, {3.609153824470231*^9, 3.6091538292381797`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f5f67aa8-4e66-4555-8039-ddf17da99baf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxSymmTemplate", "[", 
     RowBox[{"transformation_", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"intemplate_List", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"MaxSymmTemplate", "[", 
     RowBox[{
      RowBox[{"{", "transformation", "}"}], ",", "k", ",", "r", ",", 
      "intemplate"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxSymmTemplate", "[", 
    RowBox[{"transformations_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"intemplate_List", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "basetemplate", ",", "vars", ",", "ruleVariations", ",", 
       "organisedmapping", ",", "eqrelations", ",", "equations", ",", 
       "substitutions"}], "}"}], ",", 
     RowBox[{
      RowBox[{"basetemplate", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"intemplate", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "intemplate", ",", 
         RowBox[{"BaseTemplate", "[", 
          RowBox[{"k", ",", "r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"RuleTemplateVars", "[", "basetemplate", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ruleVariations", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"RuleTableFromKAry", "[", 
           RowBox[{"basetemplate", ",", "k", ",", "r"}], "]"}], "]"}], "&"}], 
        "/@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", "&"}], "}"}], ",", "transformations"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"organisedmapping", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"GatherBy", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ruleVariations", ",", "1"}], "]"}], ",", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "&"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eqrelations", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "&"}], "/@", "#"}], ")"}], "&"}], "/@", "organisedmapping"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"Equal", ",", "#"}], "]"}], "&"}], "/@", "eqrelations"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"substitutions", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{"equations", ",", "vars"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Union", "[", "#", "]"}], ",", "1"}], "]"}], "&"}], "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"organisedmapping", "/.", "substitutions"}], ",", "1"}], 
          "]"}]}], ")"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.601722465858426*^9, 3.601722465859248*^9}, {
  3.6026711240275393`*^9, 3.602671126049778*^9}, {3.602671156824488*^9, 
  3.60267117986979*^9}, {3.602671540210527*^9, 3.602671561529729*^9}, {
  3.60865685130932*^9, 3.6086569001617317`*^9}, {3.609154422801701*^9, 
  3.6091544259341393`*^9}, {3.6110516491768713`*^9, 3.611051651037264*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"188132d0-4904-4969-8d69-c2b1d45f3a31"],

Cell[TextData[{
 "Returns a list with the rule numbers with maximum symmetry counts of any \
combination of the three types (BWLR, BW or LR), in the ordered interval {",
 StyleBox["begin",
  FontSlant->"Italic"],
 ", ",
 StyleBox["end",
  FontSlant->"Italic"],
 "}. If ",
 StyleBox["end",
  FontSlant->"Italic"],
 " is omitted, all rules from ",
 StyleBox["begin",
  FontSlant->"Italic"],
 " are listed. \nWhen working out a long list of rule numbers, in order to \
save computing time a pre-given template can be used, so that it doesn't have \
to be worked out on and on; this is done by argument ",
 "intemplate",
 ", which might be initialised with, say, MaxSymmTemplate[{BW, LR}, 2, 3]."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"06016aea-fcfe-476e-be61-5c0780d53ea1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaxSymmRules", "[", 
    RowBox[{
     RowBox[{"symmtypes_List", ":", 
      RowBox[{"{", 
       RowBox[{"BW", ",", "LR", ",", "BWLR"}], "}"}]}], ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"begin_Integer", ":", "1"}], ",", 
       RowBox[{"end_", ":", "Infinity"}], ",", 
       RowBox[{"step_Integer", ":", "1"}]}], "}"}], ",", 
     RowBox[{"intemplate_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basetemplate", "=", 
       RowBox[{"MaxSymmTemplate", "[", 
        RowBox[{"symmtypes", ",", "k", ",", "r", ",", "intemplate"}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"end", "===", "Infinity"}], ",", 
       RowBox[{"RnumFromRuleTemplate", "[", 
        RowBox[{"k", ",", "r", ",", "All", ",", "basetemplate"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Reap", "[", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "begin"}], ",", 
             RowBox[{"i", "\[LessEqual]", "end"}], ",", 
             RowBox[{"i", "+=", "step"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Sow", "[", 
              RowBox[{"RnumFromRuleTemplate", "[", 
               RowBox[{"k", ",", "r", ",", "i", ",", "basetemplate"}], "]"}], 
              "]"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         "NumberQ"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"dff77615-eed4-429f-9cc1-d868fe9e42dd"],

Cell[TextData[{
 "Works out the amount of rules with maximum symmetry counts of any \
combination of the three types (BWLR, BW or LR), as defined in the ",
 StyleBox["symmtypes",
  FontSlant->"Italic"],
 " list."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"51fab749-8b5c-46f6-8eec-8aa2ff477abe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberOfMaxSymmRules", "[", 
    RowBox[{
     RowBox[{"symmtypes_List", ":", 
      RowBox[{"{", 
       RowBox[{"BW", ",", "LR", ",", "BWLR"}], "}"}]}], ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   SuperscriptBox["k", 
    RowBox[{"Length", "[", 
     RowBox[{"RuleTemplateVars", "[", 
      RowBox[{"MaxSymmTemplate", "[", 
       RowBox[{"symmtypes", ",", "k", ",", "r"}], "]"}], "]"}], "]"}]]}], 
  ";"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"ba65a775-01e7-45a9-a423-1e52b5d3faea"]
}, Closed]],

Cell[CellGroupData[{

Cell["BF-Conservation", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489583725116*^9},ExpressionUUID->"f136d44e-4309-49c2-8c6f-\
9b73c1d87037"],

Cell[TextData[{
 "The function works out a template representing all conservative ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rules, which are coherent with input template ",
 StyleBox["intemplate",
  FontSlant->"Italic"],
 ". It relies upon the simplified BF algorithm given in ",
 "BFConservativeQ",
 ".\nSee details in the comment header for ",
 StyleBox["MaxSymmTemplate",
  FontSlant->"Italic"],
 ". \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nBFConservationTemplate[2, 1]\nBFConservationTemplate[2, 2, \
MaxSymmTemplate[{BWLR, BW},2, 2]]"
}], "Text",
 CellChangeTimes->{{3.3929841243549643`*^9, 3.3929841561306562`*^9}, {
  3.610910772641111*^9, 3.610910839226033*^9}, {3.61091088421227*^9, 
  3.610910887534072*^9}, {3.610910950822939*^9, 3.610910989257112*^9}, {
  3.610911020826227*^9, 3.610911025734685*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6a501ab5-d4a1-4744-80fd-199029dd451e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BFConservationTemplate", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}], ",", 
     RowBox[{"intemplate_List", ":", " ", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "basetemplate", ",", "vars", ",", "relevantNeighbourhoods", ",", 
       "equations"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"basetemplate", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"intemplate", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "intemplate", ",", 
         RowBox[{"BaseTemplate", "[", 
          RowBox[{"k", ",", "r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"RuleTemplateVars", "[", 
        RowBox[{"BaseTemplate", "[", 
         RowBox[{"k", ",", "r"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"relevantNeighbourhoods", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "}"}]}], "]"}], "}"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x_", "/;", 
              RowBox[{"x", "\[NotEqual]", "0"}]}], ",", "___"}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Equal", "@@", "#"}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RuleOutputFromNeighbourhood", "[", 
              RowBox[{"#", ",", "basetemplate", ",", "k", ",", "r"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "1"}], 
                RowBox[{"2", "r"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "basetemplate", ",", "k", ",", "r"}],
                   "]"}], "-", 
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "basetemplate", ",", "k", ",", "r"}],
                   "]"}]}], ")"}]}]}]}], "}"}], "&"}], " ", "/@", " ", "\n", 
          "\t\t\t\t\t\t", "relevantNeighbourhoods"}], ")"}]}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"First", "[", 
       RowBox[{"basetemplate", "/.", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Solve", "[", 
          RowBox[{"equations", ",", "vars"}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.611672707950832*^9, 3.611672715815795*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"157c99ca-be87-4327-960f-7cbdaf09e06c"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"previousBFConservationTemplate", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"intemplate_List", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vars", ",", "basetemplate", ",", "equations", ",", " ", 
        "relevantNeighbourhoods"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"basetemplate", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"intemplate", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "intemplate", ",", 
          RowBox[{"BaseTemplate", "[", 
           RowBox[{"k", ",", "r"}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"vars", "=", 
        RowBox[{"RuleTemplateVars", "[", 
         RowBox[{"BaseTemplate", "[", 
          RowBox[{"k", ",", "r"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"relevantNeighbourhoods", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}]}], "}"}]}], "]"}], "}"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightDoubleBracket]"}], 
              "\[NotEqual]", "0"}], "&"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t  ", 
       RowBox[{"equations", "=", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Equal", "@@", "#"}], ")"}], "&"}], "/@", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Total", "[", "#", "]"}], ",", 
              RowBox[{
               RowBox[{"RuleOutputFromNeighbourhood", "[", 
                RowBox[{"#", ",", "basetemplate", ",", "k", ",", "r"}], "]"}],
                " ", "+", "\n", "\t\t\t\t\t\t ", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], 
                 RowBox[{"2", "r"}]], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"RuleOutputFromNeighbourhood", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "2", "-", "i"}], ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1", "-", "i"}], "}"}]}], 
                    "]"}]}], "]"}], ",", " ", "basetemplate", ",", " ", "k", 
                    ",", " ", "r"}], "]"}], " ", "+", " ", "\n", 
                  "\t\t\t\t\t\t", 
                  RowBox[{"RuleOutputFromNeighbourhood", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1", "-", "i"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "basetemplate", ",", "k", ",", "r"}],
                    "]"}]}], ")"}]}]}]}], "}"}], "&"}], " ", "/@", " ", "\n", 
           "\t\t\t\t\t\t", "relevantNeighbourhoods"}], ")"}]}]}], ";", "\n", 
       "\t\t", 
       RowBox[{"First", "[", 
        RowBox[{"basetemplate", "/.", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Solve", "[", 
           RowBox[{"equations", ",", "vars"}], "]"}], "]"}]}], "]"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.601721994133903*^9, 3.60172199413514*^9}, {
   3.601722059488643*^9, 3.601722080832378*^9}, {3.601722112136962*^9, 
   3.601722206744978*^9}, 3.601722258307033*^9, 3.602671141847753*^9, {
   3.602671570241075*^9, 3.602671570706739*^9}, {3.608656908314528*^9, 
   3.608656911744811*^9}, 3.610908344425775*^9, {3.610908375765373*^9, 
   3.6109084440185547`*^9}, {3.610980004214666*^9, 3.610980009366555*^9}, {
   3.611052805786286*^9, 3.611052805819348*^9}, {3.611070553707143*^9, 
   3.611070577874838*^9}, {3.611070621221369*^9, 3.611070623210573*^9}, {
   3.611672694390671*^9, 3.611672704187175*^9}, {3.611672735910924*^9, 
   3.611672738926593*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a0f8aaf5-4765-418f-a06d-357698a6557c"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"orgBFConservationTemplate", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"intemplate_", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vars", ",", "basetemplate", ",", "equations"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"intemplate", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"vars", "=", 
          RowBox[{"basetemplate", "=", 
           RowBox[{"CreateVarForm", "[", 
            RowBox[{"k", ",", "r"}], "]"}]}]}], ",", 
         RowBox[{"vars", "=", 
          RowBox[{"RuleTemplateVars", "[", 
           RowBox[{"basetemplate", "=", "intemplate"}], "]"}]}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"equations", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Equal", "@@", "#"}], ")"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RuleOutputFromTemplate", "[", 
               RowBox[{"#", ",", "basetemplate", ",", "k", ",", "r"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], "+", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], 
                 RowBox[{"2", "r"}]], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"RuleOutputFromTemplate", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "basetemplate", ",", "k", ",", "r"}],
                    "]"}], "-", 
                  RowBox[{"RuleOutputFromTemplate", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "basetemplate", ",", "k", ",", "r"}],
                    "]"}]}], ")"}]}]}]}], "}"}], "&"}], " ", "/@", " ", 
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"First", "[", 
        RowBox[{"basetemplate", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{"equations", ",", "vars"}], "]"}]}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.3929840680339794`*^9, 3.392984082765161*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"ff709f38-de05-4a23-a515-3583ee3107f2"],

Cell[TextData[{
 "Lists all BF-Conservative ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rules that abide by the template ",
 StyleBox["intemplate",
  FontSlant->"Italic"],
 ", within the specified range of valid substitutions."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c506e7b8-4f5e-41f6-ae84-37820df74ade"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConservativeRules", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"begin_Integer", ":", "1"}], ",", 
       RowBox[{"end_", ":", "Infinity"}], ",", 
       RowBox[{"step_Integer", ":", "1"}]}], "}"}], ",", 
     RowBox[{"intemplate_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basetemplate", "=", 
       RowBox[{"BFConservationTemplate", "[", 
        RowBox[{"k", ",", "r", ",", "intemplate"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"end", "===", "Infinity"}], ",", 
       RowBox[{"RnumFromRuleTemplate", "[", 
        RowBox[{"k", ",", "r", ",", "All", ",", "basetemplate"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Reap", "[", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "begin"}], ",", 
             RowBox[{"i", "\[LessEqual]", "end"}], ",", 
             RowBox[{"i", "+=", "step"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Sow", "[", 
              RowBox[{"RnumFromRuleTemplate", "[", 
               RowBox[{"k", ",", "r", ",", "i", ",", "basetemplate"}], "]"}], 
              "]"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         "NumberQ"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"fa2b26f1-9668-4afc-b881-41258426d251"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["5. Generation of binary initial configurations (ICs)", "Section",
 CellChangeTimes->{{3.558189188918991*^9, 3.5581891920308743`*^9}, {
  3.722676324243248*^9, 
  3.7226763246030903`*^9}},ExpressionUUID->"8684c922-8935-4f0f-8793-\
ad8bd10172bd"],

Cell[CellGroupData[{

Cell["\<\
Random ICs, with various types of distribution of 1s in their bit \
representations: Binomial, Uniform, Balanced, NearlyBalanced, EvenParity and \
OddParity\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.54348956931018*^9},ExpressionUUID->"d3149dad-721a-4795-b249-\
06dda5b63410"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BinaryRandomICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", "type_Symbol", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Switch", "[", 
      RowBox[{"type", ",", "\[IndentingNewLine]", "Binomial", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomAmountOfOnesRBS", "[", 
          RowBox[{"0.50", ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "Uniform", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ExactAmountOfOnesRBS", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "Balanced", ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "len", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"BalancedRBS", "[", "len", "]"}], ",", 
           RowBox[{"{", "nICs", "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "NearlyBalanced", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NearlyBalancedRBS", "[", "len", "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "EvenParity", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"EvenParityRBS", "[", "len", "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "OddParity", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"OddParityRBS", "[", "len", "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_",
        ",", 
       RowBox[{
       "Print", "[", "\"\<Invalid type of bit distribution!\>\"", "]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", "2", ",", 
     RowBox[{"Switch", "[", 
      RowBox[{"type", ",", "\[IndentingNewLine]", "Binomial", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"RandomAmountOfOnesRBS", "[", 
            RowBox[{"0.50", ",", 
             SuperscriptBox["len", "2"]}], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "Uniform", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"ExactAmountOfOnesRBS", "[", 
            RowBox[{
             RowBox[{"Random", "[", "]"}], ",", 
             SuperscriptBox["len", "2"]}], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "Balanced", ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "len", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"BalancedRBS", "[", 
              SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
           RowBox[{"{", "nICs", "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "NearlyBalanced", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"NearlyBalancedRBS", "[", 
            SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "EvenParity", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"EvenParityRBS", "[", 
            SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "OddParity", ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"OddParityRBS", "[", 
            SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_",
        ",", 
       RowBox[{
       "Print", "[", "\"\<Invalid type of bit distribution!\>\"", "]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", "_", ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4956282642725*^9, 3.4956282653085*^9}, 
   3.812884291249776*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"15e4d261-41e2-4008-8f8a-cc866c1dc437"],

Cell[TextData[{
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) For all functions related to 2D ICs, the squared ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["len", 
    RowBox[{"2", " "}]], TraditionalForm]],ExpressionUUID->
  "5bface81-7a90-4f86-a597-866e78c3b1fb"],
 "is to guarantee that the property at issue is valid for the IC a s a whole, \
and not by only the rows or columns.\n2) For one-dimensional ICs (the \
default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", with uniform distribution of the number of 1s (or 0s). For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created.\n3) Using RandomAmountOfOnesRBS[Random[], ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"2", "r"}], "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "c7bbb589-b62e-48f2-b81e-4e4fabb6387a"],
 "] also works."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"227bd09c-866e-44df-aab6-4282a9347817"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UniformICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ExactAmountOfOnesRBS", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2", 
     ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"ExactAmountOfOnesRBS", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], ",", 
           SuperscriptBox["len", "2"]}], "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
     ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"12254b11-e53a-4e5e-b043-473f16d95b3d"],

Cell[TextData[{
 "For one-dimensional ICs (the default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", with Binomial distribution of the number of 1s (or 0s). For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"63ab6942-2947-48d9-90e3-de37f779e355"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BinomialICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RandomAmountOfOnesRBS", "[", 
        RowBox[{"0.50", ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2", 
     ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"RandomAmountOfOnesRBS", "[", 
          RowBox[{"0.50", ",", 
           SuperscriptBox["len", "2"]}], "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
     ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"dfcb0250-035a-4a08-9b8b-bb9c1c25434d"],

Cell[TextData[{
 "For one-dimensional ICs (the default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", such that: if ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is odd, each IC has (len\[PlusMinus]1)/2 1s, each possibility with 50% \
probability; otherwise, each IC has (len\[PlusMinus]2)/2 1s, each possibility \
also with 50% probability. For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created."
}], "Text",
 CellChangeTimes->{{3.8133422087676888`*^9, 3.813342235290724*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6f4dd111-1c12-406a-a3b5-44fcddb0aeee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NearlyBalancedICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NearlyBalancedRBS", "[", "len", "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2", 
     ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"NearlyBalancedRBS", "[", 
          SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
     ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"3f88260d-c776-41f4-b134-6994eff39dad"],

Cell[TextData[{
 "For one-dimensional ICs (the default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " balanced binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", ",
 "i.e., ",
 "with the same amount of 1s and 0s. ",
 "For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f82f9908-eab1-4570-ae8c-ae4966302956"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"EvenQ", "[", "len", "]"}], ",", 
     RowBox[{"Switch", "[", 
      RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"BalancedRBS", "[", "len", "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2",
        ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"BalancedRBS", "[", 
            SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
         RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_",
        ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
        "]"}]}], "]"}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<The length of the initial conditions has to be even.\>\"", "]"}]}],
     "]"}]}], ";"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"1c4d573f-1d0d-405c-aae3-1feeafd1395a"],

Cell[TextData[{
 "For one-dimensional ICs (the default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", with an even numbers of 1s. ",
 "For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"89d0a853-7de2-432a-b664-fb1f2a607d6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvenParityICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"EvenParityRBS", "[", "len", "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2", 
     ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"EvenParityRBS", "[", 
          SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
     ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"06e1c1b6-3add-4de9-a54c-f0f3094c5d27"],

Cell[TextData[{
 "For one-dimensional ICs (the default, for ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=1), the function generates ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " binary sets of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", with an odd numbers of 1s. ",
 "For ",
 StyleBox["dim",
  FontSlant->"Italic"],
 "=2, a square table of side ",
 StyleBox["len",
  FontSlant->"Italic"],
 " is created."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ce3eaf0d-ea6e-4565-b0dd-c4efe49d9d9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OddParityICs", "[", 
    RowBox[{"nICs_Integer", ",", "len_Integer", ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"dim", ",", "\[IndentingNewLine]", "1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"OddParityRBS", "[", "len", "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "2", 
     ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"OddParityRBS", "[", 
          SuperscriptBox["len", "2"], "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{"{", "nICs", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
     ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Dimension of the initial conditions should be 1 or 2!\>\"", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"af07d5f4-fd7e-4d4c-abab-ebfd89fda6eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Deterministic ICs, and additional auxiliary functions", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489564981585*^9},ExpressionUUID->"cdda206b-ea8f-42a2-868b-\
b042d587c721"],

Cell[TextData[{
 "Reads in all HND families in directory ",
 StyleBox["HNDdir",
  FontSlant->"Italic"],
 ", each one having the specified ",
 StyleBox["familysize",
  FontSlant->"Italic"],
 " (current values are 40, 30, 20, 5). It is assumed that the various HND \
families are placed in sub-directories of ",
 StyleBox["HNDdir",
  FontSlant->"Italic"],
 ", having names in the format   \\\\FAMSIZE_",
 StyleBox["familysize",
  FontSlant->"Italic"],
 "\\\\."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"578fc814-6e79-47c6-974b-33c85f00872c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReadHNDfamilies", "[", 
    RowBox[{"HNDdir_String", ",", "familysize_Integer"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ImportIC", "[", 
         RowBox[{"HNDdir", "<>", "\"\<FAMSIZE_\>\"", "<>", 
          RowBox[{"ToString", "[", "familysize", "]"}], "<>", "\"\<\\\\\>\"", 
          "<>", "#"}], "]"}], "&"}], "/@", " ", "#"}], ")"}], "&"}], "/@", 
    " ", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"ImagesInDir", "[", 
       RowBox[{
        RowBox[{"HNDdir", "<>", "\"\<FAMSIZE_\>\"", "<>", 
         RowBox[{"ToString", "[", "familysize", "]"}], "<>", "\"\<\\\\\>\""}],
         ",", "familysize", ",", "10", ",", "1"}], "]"}], ",", "familysize"}],
      "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"16b9c87a-7e39-44f1-bb21-16a230b3808e"],

Cell[TextData[{
 "Generates a matrix ",
 StyleBox["nrows ",
  FontSlant->"Italic"],
 "\[Cross] ",
 StyleBox["ncolumns",
  FontSlant->"Italic"],
 ", with a 1 in the centre, and 0s all around. If either argument is even, \
the 1 becomes displaced one position before the centre. Since the function \
returns a matrix, notice that, for one-dimensional ICs it is required to turn \
it into a 1D vector , as in First[BlackSurroundedByWhites[1, 50]]."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"768d7f1c-3f36-4f33-bcc6-17aadc8d6c60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BlackSurroundedByWhites", "[", 
    RowBox[{
     RowBox[{"nrows_", ":", "Integer"}], ",", 
     RowBox[{"ncolumns_", ":", "Integer"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "ncolumns", "}"}]}], "]"}], ",", 
       RowBox[{"{", "nrows", "}"}]}], "]"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[LeftCeiling]", 
        RowBox[{"nrows", "/", "2"}], "\[RightCeiling]"}], ",", 
       RowBox[{"\[LeftCeiling]", 
        RowBox[{"ncolumns", "/", "2"}], "\[RightCeiling]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"200684f6-7940-4243-875f-93204490364b"],

Cell[TextData[{
 "Generates a binary matrix corresponding to the (assumedly) bitmap image \
stored in ",
 StyleBox["filename",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"475784e5-59c8-49c7-933e-afb9754ccc2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImportIC", "[", "filename_String", "]"}], ":=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"Import", "[", "filename", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"7342769b-060f-4419-b594-50ae06ddda2b"],

Cell[TextData[{
 "Shows all images stored in directory ",
 StyleBox["dir",
  FontSlant->"Italic"],
 ", of the type defined by ",
 StyleBox["imgtype",
  FontSlant->"Italic"],
 " (default \"bmp\", for bitmap)",
 ", according to ",
 StyleBox["dispmode",
  FontSlant->"Italic"],
 ":",
 " the ",
 StyleBox["filenames",
  FontSlant->"Italic"],
 " (the default) or the actual ",
 StyleBox["images",
  FontSlant->"Italic"],
 ". The relevant part of the filenames to be printed is defined by specifying \
the last ",
 StyleBox["init",
  FontSlant->"Italic"],
 "-",
 StyleBox["end",
  FontSlant->"Italic"],
 " symbols of the filename. The number of images to be displayed per row is ",
 StyleBox["inarow",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9c3999cd-2dcb-475b-a2a4-1c5e6e613231"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImagesInDir", "[", 
    RowBox[{"dir_String", ",", 
     RowBox[{"inarow_Integer", ":", "1"}], ",", 
     RowBox[{"init_Integer", ":", "9"}], ",", 
     RowBox[{"end_Integer", ":", "5"}], ",", 
     RowBox[{"dispmode_", ":", "filenames"}], ",", 
     RowBox[{"imgtype_String", ":", "\"\<bmp\>\""}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"dispmode", "===", "images"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Import", "[", "#1", "]"}], "&"}], ")"}], "/@", 
          RowBox[{"FileNames", "[", 
           RowBox[{
            RowBox[{"\"\<*.\>\"", "<>", "imgtype"}], ",", 
            RowBox[{"{", "dir", "}"}]}], "]"}]}], ",", "inarow"}], "]"}], 
       "]"}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dispmode", "===", "filenames"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "init"}], ",", 
              RowBox[{"-", "end"}]}], "}"}]}], "]"}], "&"}], ")"}], "/@", 
        RowBox[{"FileNames", "[", 
         RowBox[{
          RowBox[{"\"\<*.\>\"", "<>", "imgtype"}], ",", 
          RowBox[{"{", "dir", "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"dd803175-3d30-4c4a-830c-2c9852c997a4"],

Cell[TextData[{
 "Yields all ",
 StyleBox["len",
  FontSlant->"Italic"],
 "-long, binary necklace ICs, in an unsorted list. I define a necklace IC as \
any representative of the IC class formed by the ICs which are invariant to \
any number of rotations in periodic boundary condition. The representative \
taken here is the last one in lexicographic order of its class (i.e., the one \
with the largest associated decimal number)."
}], "Text",
 CellChangeTimes->{{3.5317661391293573`*^9, 3.5317661911117983`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"aca312ef-4994-479f-90e8-af8c306f2af3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NecklaceICs", "[", "len_Integer", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ibits", "}"}], ",", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          SuperscriptBox["2", "len"]}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RotateRight", "[", 
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"i", ",", "2", ",", "len"}], "]"}], ",", "j"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "0", ",", 
                  RowBox[{"len", "-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], "===", 
            RowBox[{"(", 
             RowBox[{"ibits", "=", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"i", ",", "2", ",", "len"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"Sow", "[", "ibits", "]"}]}], "]"}]}], "]"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.531766095971998*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"5c9c9ee6-2029-416e-b9ee-a7da9893bd67"],

Cell[TextData[{
 "Yields all",
 StyleBox[" len",
  FontSlant->"Italic"],
 "-long necklaces that can be formed with the list of ",
 StyleBox["beads",
  FontSlant->"Italic"],
 ".Therefore, ",
 "Necklace[len, Range[0, k-1]",
 " generates all necklace ICs of ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colours, thus ",
 "generalising the previous function (which is, however, probably faster for \
binary ICs)."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f948c6ac-aa18-44d7-b5fe-07f4e5b7be53"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Necklaces", "[", 
    RowBox[{"len_Integer", ",", "beads_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "itht", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          SuperscriptBox[
           RowBox[{"Length", "[", "beads", "]"}], "len"]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RotateRight", "[", 
                 RowBox[{
                  RowBox[{"itht", "=", 
                   RowBox[{"IthTuple", "[", 
                    RowBox[{"i", ",", "beads", ",", "len"}], "]"}]}], ",", 
                  "k"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", 
                  RowBox[{"len", "-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], "===",
             "itht"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Sow", "[", "itht", "]"}]}], "]"}]}], "]"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"5f4d2ba9-0de5-42f4-8722-c52a4540dcd2"],

Cell[TextData[{
 "Generates the ",
 StyleBox["ith, len",
  FontSlant->"Italic"],
 "-long tuple made with the elements of ",
 StyleBox["set",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3c109b74-49b7-4e6c-9dd2-4dd3b3b2a8f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IthTuple", "[", 
    RowBox[{"i_Integer", ",", "set_List", ",", "len_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", 
      RowBox[{"Length", "[", "set", "]"}], ",", "len"}], "]"}], "/.", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "set", "]"}], "-", "1"}]}], "]"}], ",", 
        "set"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"ed842efb-d416-4baf-b87b-f20fffb9f9a2"],

Cell["\<\
As a help to the user, prints all types of 2D configurations available for \
use as initial conditions to two-dimensional CAs.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0ccbdc9e-009b-4c1d-84c4-409d6bf23ba5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "ICtypes", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<ImportIC[filename]\>\"", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<IdentityMatrix[side]\>\"", "]"}], ";", 
    RowBox[{
    "Print", "[", "\"\<BlackSurroundedByWhites[nrows,ncolumns]\>\"", "]"}], 
    ";", 
    RowBox[{"Print", "[", "\"\<UniformICs[nICs,len,dim]\>\"", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<BinomialICs[nICs,len,dim]\>\"", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<NearlyBalancedICs[nICs,len,dim]\>\"", "]"}], 
    ";", 
    RowBox[{"Print", "[", "\"\<BalancedICs[nICs,len,dim]\>\"", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<EvenParityICs[nICs,len,dim]\>\"", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<OddParityICs[nICs,len,dim]\>\"", "]"}], ";", 
    RowBox[{
    "Print", "[", "\"\<ReadHNDfamilies[HNDdir,familysize]\>\"", "]"}]}], 
   ")"}]}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"764717a1-66d7-4678-bd77-26c316b3a9b2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["6. IC classes", "Section",
 CellChangeTimes->{{3.7226763304756193`*^9, 
  3.722676330869035*^9}},ExpressionUUID->"bcd6d42a-237a-47e2-9918-\
033e1d253c15"],

Cell[CellGroupData[{

Cell["BWLR", "Subsection",ExpressionUUID->"90f1ddbb-fcc5-4bd0-a8f5-8c929b0eea6b"],

Cell[TextData[{
 "Yields the (sorted, with no repetition) IC class formed by the BW, LR and \
BWLR transforms of ",
 StyleBox["bitsequence",
  FontSlant->"Italic"],
 ". The function also accepts the ",
 StyleBox["icnumber",
  FontSlant->"Italic"],
 ", in the range [0, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nbits"], TraditionalForm]],ExpressionUUID->
  "85a9effb-7746-4bdd-a552-70827c80d662"],
 "-1]; if nbits is ommited or given a smaller value than the required minimum \
\[LeftCeiling]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Log", "2"], TraditionalForm]],ExpressionUUID->
  "b10287f3-46be-4c80-b764-a021a16a1d1b"],
 "[",
 StyleBox["icnumber",
  FontSlant->"Italic"],
 "+1]\[RightCeiling]  to represent ",
 StyleBox["icnumber",
  FontSlant->"Italic"],
 ", the function returns the IC members of the class with the minimum number \
of bits."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6d6c7250-8192-41e1-9ad7-373d3efaac45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BWLRClass", "[", "bitsequence_List", "]"}], ":=", 
    RowBox[{"Union", "[", 
     RowBox[{"{", 
      RowBox[{"bitsequence", ",", 
       RowBox[{"1", "-", "bitsequence"}], ",", 
       RowBox[{"Reverse", "[", "bitsequence", "]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"Reverse", "[", "bitsequence", "]"}]}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWLRClass", "[", 
    RowBox[{"icnumber_Integer", ",", 
     RowBox[{"nbits_Integer", ":", "0"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"1", "-", "#"}], ",", 
        RowBox[{"Reverse", "[", "#", "]"}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"Reverse", "[", "#", "]"}]}]}], "}"}], "]"}], "&"}], "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nbits", "<", 
       RowBox[{"\[LeftCeiling]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"icnumber", "+", "1"}]}], "]"}], "\[RightCeiling]"}]}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"icnumber", ",", "2"}], "]"}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"icnumber", ",", "2", ",", "nbits"}], "]"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"88360c6b-9848-4a15-aa69-f3f88fe2b9b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AllBWLRClasses", "[", "nbits_Integer", "]"}], ":=", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BWLRClass", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"#", ",", "2", ",", "nbits"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          SuperscriptBox["2", "nbits"], "-", "1"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[98]:=",ExpressionUUID->"edfc00fb-46f0-4a7d-9851-5b1e48cf7a2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberOfBWLRClasses", "[", 
    RowBox[{"nbits_Integer", ",", 
     RowBox[{"type_", ":", "allclasses"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"type", ",", "\[IndentingNewLine]", "2", ",", 
     SuperscriptBox["2", 
      RowBox[{"\[LeftFloor]", 
       FractionBox["nbits", "2"], "\[RightFloor]"}]], ",", 
     "\[IndentingNewLine]", "4", ",", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"nbits", "-", "2"}]], "+", 
      SuperscriptBox["2", 
       RowBox[{"nbits", "-", "1", "-", 
        RowBox[{"\[LeftCeiling]", 
         FractionBox["nbits", "2"], "\[RightCeiling]"}]}]], "-", 
      SuperscriptBox["2", 
       RowBox[{"\[LeftFloor]", 
        FractionBox["nbits", "2"], "\[RightFloor]"}]]}], ",", 
     "\[IndentingNewLine]", "allclasses", ",", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"nbits", "-", "2"}]], "+", 
      SuperscriptBox["2", 
       RowBox[{"nbits", "-", "1", "-", 
        RowBox[{"\[LeftCeiling]", 
         FractionBox["nbits", "2"], "\[RightCeiling]"}]}]]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"f55b9fe0-1934-4ad1-a6f4-5b789f8573e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomBWLRClass", "[", 
    RowBox[{"nICs_Integer", ",", "nbits_Integer", ",", 
     RowBox[{"type_Symbol", ":", "Uniform"}], ",", 
     RowBox[{"dim_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BWLRClass", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"BinaryRandomICs", "[", 
     RowBox[{"nICs", ",", "nbits", ",", "type", ",", "dim"}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"7ee18467-79dc-48c4-b4d7-443cf647a220"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cyclic", "Subsection",ExpressionUUID->"6d7efcb7-0496-43c8-9b76-b69c7285604b"],

Cell[TextData[{
 "Yields the (sorted, with no repetition) IC class formed by all possible \
rotations of ",
 StyleBox["stateSequence",
  FontSlant->"Italic"],
 " (i.e., the class members are invariant to any number of rotations in \
periodic boundary condition)."
}], "Text",
 CellChangeTimes->{3.65228446678697*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6038c5a7-c871-4b06-97c3-7d96edf2d893"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CyclicClass", "[", "stateSequence_List", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Union", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RotateRight", "[", 
       RowBox[{"stateSequence", ",", "k"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "stateSequence", "]"}], "-", "1"}]}], "}"}]}],
      "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.590771208743346*^9, 3.59077122150696*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"e07709a5-28ea-49ee-92ec-98593372aea6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["7. Generation of random rule numbers", "Section",
 CellChangeTimes->{{3.722676333378007*^9, 
  3.722676333782977*^9}},ExpressionUUID->"a4f80aa5-0254-4abe-b7e0-\
c47650d0ac9c"],

Cell[CellGroupData[{

Cell["\<\
Binary rule numbers, with various types of distribution of 1s in their bit \
representations: Binomial, Uniform, Balanced, NearlyBalanced, EvenParity and \
OddParity\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.5434895477093086`*^9},ExpressionUUID->"e60a07d4-15b9-46c1-ae11-\
be9bbce78550"],

Cell[TextData[{
 "Generates ",
 StyleBox["nrules",
  FontSlant->"Italic"],
 " radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", binary rule numbers, all of them with a certain specification for the \
distribution of 1s in their binary representation. The specification is \
defined by ",
 StyleBox["type",
  FontSlant->"Italic"],
 ", and the following possibilities are valid: Binomial, Uniform, Balanced, \
NearlyBalanced, EvenParity and OddParity. \n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": In the case of a rule to be used in a 2D CA, it suffices to specify a \
radius value that would account for the neighbourhood size of the rule at \
issue; for instance, von Neumann neighbourhood would entail r=2, and Moore \
neighbourhood r=4.\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": The distribution of rule numbers becomes uniform for Binomial, Balanced \
and NearlyBalanced distributions of 1s. However, for the other distributions \
of 1s (Uniform, EvenParity and OddParity) the distribution of rule numbers \
becomes non-uniform, since some rule numbers with lots of 0s or 1s become \
more frequent in order to compensate for the fact that there are many less \
rule numbers with lots of 0s or 1s than with similar amount of 0s and 1s; \
this non-uniform distribution can be visualised with ",
 StyleBox["Histogram[#]& /@(BinaryRandomRules[100000,2,#]& /@ \
{Uniform,EvenParity,OddParity}",
  FontFamily->"Courier New"],
 ")."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"87cfde4a-727b-4a51-a4ab-77796b04112e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BinaryRandomRules", "[", 
    RowBox[{"nrules_Integer", ",", 
     RowBox[{"r_", ":", "1"}], ",", "type_Symbol"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nrules", ">", 
      SuperscriptBox["2", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]]]}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Fatal: the number of rules required is larger than the rule space!\
\>\"", " ", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}], " ", "/@", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\[IndentingNewLine]", "Binomial", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomAmountOfOnesRBS", "[", 
           RowBox[{"0.5", ",", 
            SuperscriptBox["2", 
             RowBox[{"\[LeftFloor]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}], 
          ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "Uniform", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ExactAmountOfOnesRBS", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ",", 
            SuperscriptBox["2", 
             RowBox[{"\[LeftFloor]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}], 
          ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "Balanced", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"BalancedRBS", "[", 
           SuperscriptBox["2", 
            RowBox[{"\[LeftFloor]", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "]"}], ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "NearlyBalanced", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NearlyBalancedRBS", "[", 
           SuperscriptBox["2", 
            RowBox[{"\[LeftFloor]", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "]"}], ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "EvenParity", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"EvenParityRBS", "[", 
           SuperscriptBox["2", 
            RowBox[{"\[LeftFloor]", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "]"}], ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "OddParity", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"OddParityRBS", "[", 
           SuperscriptBox["2", 
            RowBox[{"\[LeftFloor]", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "]"}], ",", 
          RowBox[{"{", "nrules", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "_", ",", 
        RowBox[{
        "Print", "[", "\"\<Invalid type of bit distribution!\>\"", "]"}]}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395130277654224*^9, 3.3951303226789665`*^9}, {
  3.495628289580499*^9, 3.4956282903625*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"72b6f979-8017-4e1b-9ea7-7f348e4d86bb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, uniformly distributed"
}], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489543390383*^9, {3.651257276841326*^9, 3.651257277379968*^9}, {
   3.651257349414998*^9, 
   3.65125735031359*^9}},ExpressionUUID->"daf1a707-1f65-4365-87e3-\
1fa5016ce7be"],

Cell[TextData[{
 "Returns an unsorted list with ",
 StyleBox["nrules",
  FontSlant->"Italic"],
 " ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius random rules, uniformly distributed, with the possibility of \
repetition among them."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"27e235da-2e5e-4b45-adb2-5e4843ad684f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomRules", "[", 
    RowBox[{"nrules_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nrules", ">", 
      SuperscriptBox["k", 
       SuperscriptBox["k", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]]]}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Fatal: the number of rules required is larger than the rule space!\
\>\"", "]"}], ",", 
     RowBox[{"GetValues", "[", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         SuperscriptBox["k", 
          SuperscriptBox["k", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}]]], "-", "1"}], "]"}], ",", 
       "nrules"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.651257220423357*^9, {3.746440774206063*^9, 3.746440778971174*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"46981422-8f3c-4203-abe9-ab22d193867e"],

Cell[TextData[{
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": While the bug with Random[Integer, {min, max}] remains for high values of \
",
 StyleBox["max",
  FontSlant->"Italic"],
 " (> ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "32"], TraditionalForm]],ExpressionUUID->
  "9a15a68c-43dd-46ea-9cec-3187045eb680"],
 ")",
 StyleBox[",",
  FontWeight->"Bold"],
 " I'll be using the following version:\n",
 StyleBox["NEW NOTE",
  FontWeight->"Bold"],
 ": The bug has been corrected with the new functions for handling random \
numbers. I need to update this part of the notebook, by removing no longer \
needed functions."
}], "Text",
 CellChangeTimes->{{3.543490050588525*^9, 3.543490130692739*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"5b4d5b1a-f8fd-4ae7-8874-7967d2e4b708"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomRules", "[", 
    RowBox[{"nrules_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nrules", ">", 
      SuperscriptBox["k", 
       SuperscriptBox["k", 
        RowBox[{
         RowBox[{"2", " ", "r"}], "+", "1"}]]]}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Fatal: the number of rules required is larger than the rule space!\
\>\"", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}], ",", 
           SuperscriptBox["k", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}]]}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", "nrules", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.651257224091134*^9, 3.7464407304785843`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"fb77821e-c6bc-492f-be11-2ab55e8129f3"],

Cell[TextData[{
 "Returns a unsorted list with different ",
 StyleBox["nrules",
  FontSlant->"Italic"],
 " ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius random rules, uniformly distributed."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"09844b64-9a9e-4ee0-92f3-7d2d32aaf8a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DifferentRandomRules", "[", 
    RowBox[{"nrules_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nrules", ">", 
      SuperscriptBox["k", 
       SuperscriptBox["k", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]]]}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Fatal: the number of rules required is larger than the rule space!\
\>\"", "]"}], ",", 
     RowBox[{"GetDifferentValues", "[", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         SuperscriptBox["k", 
          SuperscriptBox["k", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}]]], "-", "1"}], "]"}], ",", 
       "nrules"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.746440712055343*^9, 3.746440721661689*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"1dcdba02-57a4-44a8-a710-24167bf209f3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["8. Dynamical equivalence\t", "Section",
 CellChangeTimes->{
  3.558189183967029*^9, {3.722676336719242*^9, 3.722676337146819*^9}, 
   3.905958560185754*^9},ExpressionUUID->"3dd9a5f2-5152-4e2e-a547-\
95448542cee1"],

Cell[CellGroupData[{

Cell["Rule table transformations", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489258912819*^9, {3.601721369486414*^9, 
   3.60172137271601*^9}},ExpressionUUID->"b102e0c2-45fb-4fdb-a886-\
7fcaa73992c5"],

Cell[TextData[{
 "The transformation functions operate over every individual state transition \
of the rule table.\nOBS:  stLRBWTransform = stBWLRTransform\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nstBWTransform /@ RuleTable[110, 2, 1]\nstLRTransform /@ RuleTable[110, \
2, 1]\nstBWLRTransform /@ RuleTable[110, 2, 1]"
}], "Text",
 CellChangeTimes->{{3.6091495713863144`*^9, 3.609149572819113*^9}, {
  3.609149932658101*^9, 3.609149934126934*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2c8d6e8e-f6b5-40bf-8c7b-e0560cdf940e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stBWTransform", "[", "statetransition_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{
      "statetransition", "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{
      "statetransition", "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stLRTransform", "[", "statetransition_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{
      "statetransition", "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], "]"}], ",", " ", 
     RowBox[{
     "statetransition", "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stBWLRTransform", "[", "statetransition_", "]"}], ":=", " ", 
   RowBox[{"stBWTransform", "[", 
    RowBox[{"stLRTransform", "[", "statetransition", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stLRBWTransform", "[", "statetransition_", "]"}], ":=", " ", 
   RowBox[{"stLRTransform", "[", 
    RowBox[{"stBWTransform", "[", "statetransition", "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.484479204613*^9, {3.609149564218375*^9, 3.6091495889502296`*^9}, {
   3.612874901433875*^9, 3.612874915864695*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"5519dc51-e231-4cc3-a88e-48e864f731b8"],

Cell[TextData[{
 StyleBox["Performs the BW-, LR-, LR-BW-, and BW-LR-transforms, respectively, \
in a rule table.\[LineSeparator]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Examples of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\nBWTransform[RuleTable[110]] => \
{{{1,1,1},1},{{1,1,0},0},{{1,0,1},0},{{1,0,0},0},{{0,1,1},1},{{0,1,0},0},{{0,\
0,1},0},{{0,0,0},1}}\nLRTransform[RuleTable[110]] => \
{{{1,1,1},0},{{1,1,0},1},{{1,0,1},1},{{1,0,0},1},{{0,1,1},1},{{0,1,0},1},{{0,\
0,1},0},{{0,0,0},0}}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.601721375036886*^9, 3.601721448111671*^9}, {
   3.601721481472666*^9, 3.601721489259535*^9}, {3.608657953121201*^9, 
   3.608657973871819*^9}, 3.609153772947942*^9, {3.651254419648912*^9, 
   3.65125457895037*^9}, {3.651254620527045*^9, 
   3.651254631529823*^9}},ExpressionUUID->"69f80aaf-ff6f-4375-a120-\
6fdb46efd3c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BWTransform", "[", "ruleTable_", "]"}], ":=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"stBWTransform", "/@", "ruleTable"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LRTransform", "[", "ruleTable_", "]"}], ":=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"stLRTransform", "/@", "ruleTable"}], ",", " ", "First"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LRBWTransform", "[", "ruleTable_", "]"}], ":=", 
   RowBox[{"LRTransform", "[", 
    RowBox[{"BWTransform", "[", "ruleTable", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BWLRTransform", "[", "ruleTable_", "]"}], ":=", 
   RowBox[{"LRBWTransform", "[", "ruleTable", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.601721356621072*^9, 3.601721358633074*^9}, {
  3.601721425814089*^9, 3.601721426389873*^9}, {3.6086566556981153`*^9, 
  3.608656662657784*^9}, {3.609152972034578*^9, 3.609152983198518*^9}, {
  3.6091530216515045`*^9, 3.60915303575008*^9}, {3.609153090454339*^9, 
  3.609153093733431*^9}, {3.609153753587785*^9, 3.609153753657872*^9}, {
  3.651254588330315*^9, 3.651254614117675*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"c3dfcdb2-4f87-40f9-ab99-b358204f1649"],

Cell[TextData[{
 StyleBox["\nIMPORTANT!\nThe functions below are not yet integrated in the ",
  FontWeight->"Bold"],
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["=2 scheme above, i.e., while those define a transform in respect \
to a rule table, the functions below define it in respect to state \
transition. Therefore they cannot be used for symmetry scoring at the moment. \
\n",
  FontWeight->"Bold"],
 "\nGeneralised transformation functions for any ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule. \n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["1)",
  FontWeight->"Bold"],
 " The generalisation is achieved through the use of function \
AllStatePermutations",
 StyleBox["[k, r]",
  FontFamily->"Courier New"],
 " that yields all possible state transformations.\nFor instance, \
AllStatePermutations",
 StyleBox["[2,1]",
  FontFamily->"Courier New"],
 " yields the standard single BW-replacements {{0\[Rule]1, 1\[Rule]0}}, \
whereas AllStatePermutations",
 StyleBox["[3,1]",
  FontFamily->"Courier New"],
 " yields all five possibilities associated with 3-colour CAs: {{0\[Rule]0, 1\
\[Rule]2, 2\[Rule]1}, {0\[Rule]1, 1\[Rule]0, 2\[Rule]2}, {0\[Rule]1, \
1\[Rule]2, 2\[Rule]0}, {0\[Rule]2, 1\[Rule]0, 2\[Rule]1}, {0\[Rule]2, \
1\[Rule]1, 2\[Rule]0}}.\n",
 StyleBox["2)",
  FontWeight->"Bold"],
 " PossibleStateReplacements is left here just for backward compatibility \
with older versions of this notebook.\n",
 StyleBox["3)",
  FontWeight->"Bold"],
 " While ReflectTransform yields a single transformed state transition, the \
others yield a set of them, which are returned in a list."
}], "Text",
 CellChangeTimes->{{3.619436494050898*^9, 3.619436513285557*^9}, {
   3.650279133817795*^9, 3.650279416084155*^9}, {3.651483260953505*^9, 
   3.651483369022924*^9}, {3.7465568345272427`*^9, 3.74655683636014*^9}, 
   3.746557815711658*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"42b36332-ed71-449c-a333-7d315c0ef410"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateTransform", "[", 
     RowBox[{"statetransition_", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"statetransition", "/.", "#"}], ")"}], "&"}], "/@", 
     RowBox[{"AllStatePermutations", "[", "k", "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReflectedTransform", "[", "statetransition_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{
       "statetransition", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "]"}], ",", 
      RowBox[{
      "statetransition", "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateReflectedTransform", "[", 
    RowBox[{"statetransition_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"ConjugateTransform", "[", 
    RowBox[{
     RowBox[{"ReflectedTransform", "[", "statetransition", "]"}], ",", "k", 
     ",", "r"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReflectedConjugateTransform", "[", 
     RowBox[{"statetransition_", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"ReflectedTransform", "[", 
     RowBox[{"ConjugateTransform", "[", 
      RowBox[{"statetransition", ",", "k", ",", "r"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllStatePermutations", "[", 
    RowBox[{"k_Integer", ":", "2"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permuts", "=", 
       RowBox[{"Permutations", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"k", "-", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"#1", "\[Rule]", "#2"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"First", "@", "permuts"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "permuts", "]"}], "-", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"Rest", "@", "permuts"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PossibleStateReplacements", "[", 
    RowBox[{"k_Integer", ":", "2"}], "]"}], ":=", 
   RowBox[{"AllStatePermutations", "[", "k", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7465573135521197`*^9, 3.7465573135539513`*^9}, {
   3.746557350469454*^9, 3.746557385915891*^9}, {3.746557815721332*^9, 
   3.74655783269946*^9}, {3.746638200354356*^9, 3.746638200363537*^9}, 
   3.746638248365621*^9, {3.7466382993947773`*^9, 3.746638316203209*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"a7633917-c0bf-4868-9271-fb753d776c14"]
}, Closed]],

Cell[CellGroupData[{

Cell["General shift-equivalence", "Subsection",
 CellChangeTimes->{{3.74638132607275*^9, 
  3.746381333119976*^9}},ExpressionUUID->"b5590afc-8f2b-4e2d-af86-\
0e802a57887e"],

Cell[TextData[{
 "Yields a list with {",
 StyleBox["rnum,k,r",
  FontSlant->"Italic"],
 "} and all other rules in the same space that are equivalent by shift to it. \
",
 StyleBox["ShiftEquivalentRules",
  FontSlant->"Italic"],
 " yields the equivalence class without ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 " \nShiftEquivalenceClass[170, 2, 1] \[Implies] \
{{170,2,1},{204,2,1},{240,2,1}}\nShiftEquivalentRules[170,2,1] \[Implies] \
{{204,2,1},{240,2,1}}\nShiftEquivalenceClass[184,2,1] \[Implies] {{184,2,1}}\n\
ShiftEquivalentRules[184,2,1] \[Implies] {}\n\
ShiftEquivalenceClass[4042322160,2,2] \[Implies] \
{{2863311530,2,2},{3435973836,2,2},{4042322160,2,2},{4278255360,2,2},{\
4294901760,2,2}}\nShiftEquivalentRules[4042322160,2,2] \[Implies] \
{{2863311530,2,2},{3435973836,2,2},{4278255360,2,2},{4294901760,2,2}}\n",
 StyleBox["Implementation note:",
  FontWeight->"Bold"],
 "\n1) The algorithm is based on the detection of the block of positions of \
the non-dummy neighbours. Implemented by E. Ruivo, according to: E. Ruivo, \
P.P.B. de Oliveira, F. Lobos and E. Goles. \
\[OpenCurlyDoubleQuote]Shift-equivalence of ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary, one-dimensional cellular automata rules\[CloseCurlyDoubleQuote]. ",
 StyleBox["Communications in Nonlinear Science and Numerical Simulation",
  FontSlant->"Italic"],
 ", 63:280-291, 2018."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746379399197089*^9, 3.746379431857475*^9}, {
   3.746379493841545*^9, 3.746379554565198*^9}, {3.746379676168296*^9, 
   3.746379685869966*^9}, {3.746442146896947*^9, 3.746442275059834*^9}, {
   3.746442359769985*^9, 3.746442488035349*^9}, 3.74644256638582*^9, {
   3.746955555663909*^9, 3.7469556081050253`*^9}, {3.7471340020773926`*^9, 
   3.7471340934166527`*^9}, {3.747134129710129*^9, 3.747134151647254*^9}, {
   3.747134230318872*^9, 3.747134381373396*^9}, {3.815230527120365*^9, 
   3.815230544307267*^9}, {3.815230750252481*^9, 3.815230770435246*^9}, {
   3.815232079848962*^9, 3.815232111341787*^9}, {3.815232176168155*^9, 
   3.815232216111326*^9}, 3.815232291000575*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cd5ff28b-820f-4693-9d46-3f4ac1560095"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShiftEquivalentRules", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"ShiftEquivalenceClass", "[", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShiftEquivalenceClass", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ntab", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "&"}], "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"RuleTable", "[", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"outputs", "=", 
        RowBox[{"Last", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"RuleTable", "[", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"dummies", "=", 
        RowBox[{"DummyNeighbours", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
       "leftmostnondummy", ",", "righmostnondummy", ",", "nondummyrange", ",",
        "outvalidrange"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dummies", "==", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{"dummies", "\[Equal]", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"\[LeftCeiling]", 
             RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}]}]}],
        ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"leftmostnondummy", "=", 
         RowBox[{"First", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], 
            ",", "dummies"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"righmostnondummy", "=", 
         RowBox[{"Last", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], 
            ",", "dummies"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nondummyrange", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"leftmostnondummy", ",", "righmostnondummy"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"outvalidrange", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"\[LeftCeiling]", 
               RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], 
           ",", "nondummyrange"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "k", ",", "r"}], "}"}], "&"}], "/@", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RnumFromRuleTable", "[", 
             RowBox[{"#", ",", "k"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"SortBy", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"ntab", "\[LeftDoubleBracket]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"outvalidrange", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", "i"}], "]"}], "\[RightDoubleBracket]"}],
                     ",", "nondummyrange", ",", 
                    RowBox[{"outvalidrange", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"Length", "[", "outvalidrange", "]"}]}], "]"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", "outputs"}], "}"}],
                   "]"}], ",", "First"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"Length", "[", "outvalidrange", "]"}]}], "}"}]}], 
             "]"}], ")"}]}], "]"}]}]}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7469809802324476`*^9, 3.74698101712126*^9}, {
   3.74698112858992*^9, 3.746981261205982*^9}, {3.746981295590155*^9, 
   3.746981313126899*^9}, {3.746981382912774*^9, 3.746981512242549*^9}, {
   3.746981585047713*^9, 3.746981616252103*^9}, {3.746981695796114*^9, 
   3.746981713072482*^9}, {3.746981766116887*^9, 3.746981913674178*^9}, {
   3.746981951917378*^9, 3.746982306834603*^9}, {3.746982343347701*^9, 
   3.746982372707239*^9}, {3.74698246426718*^9, 3.746982482177632*^9}, {
   3.746982531454388*^9, 3.74698253941696*^9}, {3.746983179195182*^9, 
   3.746983179323838*^9}, {3.746983407370134*^9, 3.746983408842198*^9}, {
   3.7469834618594456`*^9, 3.7469834686632576`*^9}, {3.746983520884608*^9, 
   3.746983611899268*^9}, {3.74713251316811*^9, 3.747132523414147*^9}, 
   3.747133720966713*^9, {3.747133761632687*^9, 3.747133808948037*^9}, {
   3.747133868228406*^9, 3.747133948360787*^9}, {3.747134203827227*^9, 
   3.747134218497253*^9}, 3.747386510750546*^9, {3.747386799445079*^9, 
   3.747386811796629*^9}, {3.747386975182229*^9, 3.747387069689509*^9}, {
   3.74738716960607*^9, 3.747387172181754*^9}, {3.747387217402557*^9, 
   3.747387224332788*^9}, {3.747387283863203*^9, 3.74738732358477*^9}, 
   3.747387376822336*^9, {3.747387807450727*^9, 3.747387813828544*^9}, {
   3.815220285569948*^9, 3.815220308474093*^9}, {3.815229524625392*^9, 
   3.815229535449154*^9}, 3.815229569390665*^9, {3.815229664439779*^9, 
   3.815229768173286*^9}, {3.815229973644936*^9, 3.815229976048884*^9}, {
   3.815230025531906*^9, 3.815230062047085*^9}, {3.815230196241355*^9, 
   3.815230211107463*^9}, {3.815230280726075*^9, 3.815230322405262*^9}, {
   3.815230605854766*^9, 3.815230682625101*^9}, {3.815230714597384*^9, 
   3.815230719783152*^9}, {3.815232254860306*^9, 3.815232274603338*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"7a628b26-b07b-4282-b4fe-f128b9e50a00"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Rule classes of dynamical equivalence and extended dynamical equivalence (due \
to shift equivalence)\
\>", "Subsection",
 CellChangeTimes->{{3.7468109942451143`*^9, 
  3.746811055737584*^9}},ExpressionUUID->"842d4e80-d216-49a8-a802-\
c871c48e8a11"],

Cell[TextData[{
 "The functions below are for the determination of the classes of dynamical \
equivalence of any one-dimensional rule. The maximum number of rules in the \
class is 1+1+ 2(",
 StyleBox["k",
  FontSlant->"Italic"],
 "! - 1), that is: 1 for the given rule + 1 for its equivalent by reflection \
+ (",
 StyleBox["k",
  FontSlant->"Italic"],
 "! -1) for its conjugate rules + (",
 StyleBox["k",
  FontSlant->"Italic"],
 "! -1) for its conjugate-reflected rules.\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nConjugateRules[74795539765,3,1] \[Implies] \
{{179863174765,3,1},{707271646117,3,1},{3770218742597,3,1},{3831962584373,3,1}\
,{4539951525437,3,1}}\nReflectedRule[74795539765,3,1] \[Implies] \
{52702142005,3,1}\nConjugateReflectedRules[74795539765,3,1] \[Implies] \
{{722280697645,3,1},{1030275294277,3,1},{3392526483197,3,1},{3782214627557,3,\
1},{4625652890933,3,1}}\nDynamicallyEquivalentRules[74795539765,3,1] \
\[Implies] \
{{52702142005,3,1},{179863174765,3,1},{707271646117,3,1},{722280697645,3,1},{\
1030275294277,3,1},{3392526483197,3,1},{3770218742597,3,1},{3782214627557,3,1}\
,{3831962584373,3,1},{4539951525437,3,1},{4625652890933,3,1}}\n\
DynamicalEquivalenceClass[74795539765,3,1] \[Implies] \
{{52702142005,3,1},{74795539765,3,1},{179863174765,3,1},{707271646117,3,1},{\
722280697645,3,1},{1030275294277,3,1},{3392526483197,3,1},{3770218742597,3,1},\
{3782214627557,3,1},{3831962584373,3,1},{4539951525437,3,1},{4625652890933,3,\
1}}\n\nDynamicallyEquivalentRules[204] \[Implies] {}\n\
DynamicalEquivalenceClass[204] \[Implies] {{204,2,1}}\n\
ExtDynamicallyEquivalentRules[204] \[Implies] {{170,2,1},{240,2,1}}\n\
ExtDynamicalEquivalenceClass[204] \[Implies] {{170,2,1},{204,2,1},{240,2,1}}\n\
\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) DynamicalEquivalenceClass returns the rules already sorted, from the \
smallest to the largest.\n2) SortBy[ruleTable, k - #\[LeftDoubleBracket]1\
\[RightDoubleBracket]&] == Reverse@SortBy[ruleTable, #\[LeftDoubleBracket]1\
\[RightDoubleBracket]&]"
}], "Text",
 CellChangeTimes->{{3.650277620227306*^9, 3.6502777534732847`*^9}, {
  3.650277863939047*^9, 3.650277914733553*^9}, {3.650278108304821*^9, 
  3.650278304418239*^9}, {3.651311309986223*^9, 3.651311374223063*^9}, {
  3.746556431945099*^9, 3.746556436061713*^9}, {3.746556547773746*^9, 
  3.746556547788413*^9}, {3.746810944858509*^9, 3.7468109834013443`*^9}, {
  3.815231216815482*^9, 3.815231264711362*^9}, {3.815232637615468*^9, 
  3.815232763539673*^9}, {3.903079724134219*^9, 3.903079787529465*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9919dd5d-86f6-45db-b965-8da307cb15a0"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"The", " ", "old", " ", "functions", " ", 
     RowBox[{"(", 
      RowBox[{"commented", " ", "out"}], ")"}], " ", "below", " ", "are", " ",
      "for", " ", "the", " ", "determination", " ", "of", " ", "the", " ", 
     "classes", " ", "of", " ", "dynamical", " ", "equivalence", " ", "of", 
     " ", "binary", " ", "rules", " ", 
     RowBox[{"only", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"BWEquivalent", "[", 
       RowBox[{"rnum_Integer", ",", 
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RnumFromRuleTable", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{"stBWTransform", " ", "/@", " ", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], ",", " ", 
      "k"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LREquivalent", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RnumFromRuleTable", "[", 
     RowBox[{
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"stLRTransform", " ", "/@", " ", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"k", "-", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "&"}]}], "]"}], ",", " ", "k"}], "]"}]}], ";", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BWLREquivalent", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RnumFromRuleTable", "[", 
     RowBox[{
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"stBWLRTransform", " ", "/@", " ", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"k", "-", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "&"}]}], "]"}], ",", " ", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LRBWEquivalent", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"BWLREquivalent", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EquivalentRules", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"DynamicallyEquivalentRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EquivalenceClass", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"DynamicalEquivalenceClass", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.4976165924890003`*^9, 3.497616619817*^9}, {
   3.575978144544473*^9, 3.575978144578948*^9}, {3.592817445196452*^9, 
   3.592817518656241*^9}, {3.609149547272224*^9, 3.609149548976366*^9}, {
   3.651311736709365*^9, 3.651311738509355*^9}, {3.651311785952458*^9, 
   3.651311805907529*^9}, 3.7467003586925607`*^9, {3.746810599755234*^9, 
   3.746810609809455*^9}, {3.7468107937491293`*^9, 3.746810863623065*^9}, {
   3.74681089541537*^9, 3.746810938287867*^9}, {3.746811065841134*^9, 
   3.746811094033261*^9}, {3.777823867974503*^9, 3.777823871211419*^9}, 
   3.777888900618232*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"23c92a4f-0908-4999-a135-a079bcd279f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateRules", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", "k", ",", "r"}], "}"}], "&"}], "/@", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"SortBy", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"k", "-", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "&"}]}], "]"}], ",", "k"}], "]"}], "&"}], "/@", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ConjugateTransform", "[", 
          RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}], "/@", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateRules", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"ConjugateRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReflectedRule", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerQ", "[", "r", "]"}], "===", "True"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"ReflectedTransform", "/@", 
            RowBox[{"RuleTable", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"k", "-", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "&"}]}], "]"}], ",", "k"}], "]"}], ",", "k", ",", "r"}], "}"}], 
     ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReflectedRule", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"ReflectedRule", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateReflectedRules", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerQ", "[", "r", "]"}], "===", "True"}], ",", 
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"k", "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "&"}]}], "]"}], ",", "k"}], "]"}], ",", "k", ",", "r"}], 
         "}"}], "&"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ConjugateReflectedTransform", "[", 
           RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}], "/@", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateReflectedRules", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"ConjugateReflectedRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReflectedConjugateRules", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"ConjugateReflectedRules", "[", 
    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReflectedConjugateRules", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"ReflectedConjugateRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DynamicallyEquivalentRules", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"DynamicalEquivalenceClass", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DynamicallyEquivalentRules", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"DynamicallyEquivalentRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DynamicalEquivalenceClass", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], "}"}], ",", 
         RowBox[{"ConjugateRules", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ReflectedRule", "[", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "}"}], ",", 
         RowBox[{"ConjugateReflectedRules", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"DynamicalEquivalenceClass", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"DynamicalEquivalenceClass", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtDynamicallyEquivalentRules", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"ExtDynamicalEquivalenceClass", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtDynamicallyEquivalentRules", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
    RowBox[{"ExtDynamicallyEquivalentRules", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtDynamicalEquivalenceClass", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Union", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ShiftEquivalenceClass", "[", 
         RowBox[{"Sequence", "@@", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"DynamicalEquivalenceClass", "[", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "1"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtDynamicalEquivalenceClass", "[", 
    RowBox[{"{", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", 
   RowBox[{"ExtDynamicalEquivalenceClass", "[", 
    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8152198239858255`*^9, 3.815219834892882*^9}, {
   3.815219871758218*^9, 3.815219872859699*^9}, {3.815219941791009*^9, 
   3.815219946773547*^9}, {3.815220001192276*^9, 3.8152200396522427`*^9}, {
   3.815220096565798*^9, 3.8152201242524223`*^9}, 3.815220189259114*^9, {
   3.815220447319056*^9, 3.815220449725884*^9}, {3.815220731472332*^9, 
   3.815220739131624*^9}, {3.815220788297193*^9, 3.815220822185029*^9}, {
   3.8152214503489027`*^9, 3.815221655129781*^9}, {3.815229221042652*^9, 
   3.815229222087936*^9}, {3.815231431247046*^9, 3.8152314395555563`*^9}, {
   3.815231635222506*^9, 3.815231678690717*^9}, {3.8152317964837227`*^9, 
   3.815231814503349*^9}, {3.81523186597355*^9, 3.8152318670633802`*^9}, {
   3.815231904144039*^9, 3.815231907034689*^9}, {3.8752760177844267`*^9, 
   3.875276129922293*^9}, {3.875276165740684*^9, 3.875276287398387*^9}, {
   3.875276358223115*^9, 3.8752764008573217`*^9}, {3.877428349625286*^9, 
   3.877428351276971*^9}, 3.877428389903854*^9, 3.87743343599932*^9, {
   3.877433478154067*^9, 3.877433478345265*^9}, {3.878888467106777*^9, 
   3.878888502663467*^9}, {3.878888543457387*^9, 3.878888585904026*^9}, {
   3.87888872430903*^9, 3.878888745105029*^9}, {3.87888879110647*^9, 
   3.878888802166177*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"b3316311-cac6-4256-b025-4fba4fd4f01f"],

Cell[TextData[{
 "Yields all dynamically equivalent ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour CA rules."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c370104e-a25f-4fdc-9458-3eab98266668"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllEquivalenceRuleClasses", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"RuleSpaceSize", "[", 
          RowBox[{"k", ",", "r"}], "]"}], "-", "1"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"DynamicalEquivalenceClass", "[", 
         RowBox[{"#", ",", "k", ",", "r"}], "]"}], "]"}], "&"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllExtEquivalenceRuleClasses", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"RuleSpaceSize", "[", 
            RowBox[{"k", ",", "r"}], "]"}], "-", "1"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"ShiftEquivalenceClass", "[", 
          RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sort", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DynamicalEquivalenceClass", "[", 
            RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}], "/@", "#"}], 
         "]"}]}], "&"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.5759704818503647`*^9, {3.746809132033241*^9, 3.746809154811068*^9}, {
   3.746809199418783*^9, 3.7468092323238173`*^9}, {3.7468093200980787`*^9, 
   3.7468093315143027`*^9}, 3.746809816832148*^9, {3.777824420747918*^9, 
   3.777824431689939*^9}, {3.777888900629758*^9, 3.777888900630762*^9}, {
   3.77834238622659*^9, 3.778342449330742*^9}, {3.778343272325086*^9, 
   3.778343292968544*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"c6e94e3d-9a60-432d-975c-6459116a5f60"],

Cell[TextData[{
 "Filters out (from ",
 StyleBox["rnumlist",
  FontSlant->"Italic"],
 ")",
 " the dynamically equivalent ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour CA rule numbers, returning a single member from each class in ",
 StyleBox["rnumlist",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"14c85fd4-5fa0-4ac9-ba46-bdd8494ded21"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RemoveEquivalentRules", "[", 
    RowBox[{"rnumlist_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"RemoveEquivalents", "[", 
    RowBox[{"rnumlist", ",", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"DynamicalEquivalenceClass", "[", 
        RowBox[{"#", ",", "k", ",", "r"}], "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.777824441698421*^9, 3.777888900631714*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"b9a51f7a-5cad-441f-8175-aa0f4282d584"],

Cell[TextData[StyleBox["... No documentation...",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.650279437426537*^9, 3.65027943794244*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"34156aef-e93d-4dcc-acd8-eca52d8461d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberOfRuleClasses", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "allclasses"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lenofclasses", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"AllEquivalenceRuleClasses", "[", 
         RowBox[{"k", ",", "r"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Count", "[", 
          RowBox[{"lenofclasses", ",", "1"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"Count", "[", 
          RowBox[{"lenofclasses", ",", "2"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "4", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", 
         RowBox[{"Count", "[", 
          RowBox[{"lenofclasses", ",", "4"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "allclasses", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Count", "[", 
            RowBox[{"lenofclasses", ",", "1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"Count", "[", 
            RowBox[{"lenofclasses", ",", "2"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           RowBox[{"Count", "[", 
            RowBox[{"lenofclasses", ",", "4"}], "]"}]}], "}"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.746809320105088*^9, {3.8152323794755573`*^9, 3.815232380677909*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"692d4be6-ac07-4554-a4c8-42c649e24a5b"],

Cell[TextData[StyleBox["... No documentation...",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.650279444928503*^9, 3.650279445232452*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a9c78c19-88e2-4470-afe2-d87ca151e1e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomClassOfBinaryRule", "[", 
    RowBox[{"nclasses_Integer", ",", "r_Integer", ",", 
     RowBox[{"type_Symbol", ":", "Uniform"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DynamicalEquivalenceClass", "[", 
      RowBox[{"#", ",", "2", ",", "r"}], "]"}], "&"}], "/@", 
    RowBox[{"BinaryRandomRules", "[", 
     RowBox[{"nclasses", ",", "r", ",", "type"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777824300924208*^9, 3.777824302473064*^9}, 
   3.777824337538027*^9, 3.777888900632675*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"db100add-7501-45f5-9cd6-8b7fe78fef7d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Dynamical behaviour of the elementary cellular automata (ECA)\
\>", "Subsection",ExpressionUUID->"edb15983-743e-45f7-8f80-2627ef226c91"],

Cell[TextData[{
 "Classifies the dynamical behaviour of elementary rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", according to the classification scheme defined by ",
 StyleBox["ctype",
  FontSlant->"Italic"],
 ", namely, Li-Packard (",
 StyleBox["LP",
  FontSlant->"Italic"],
 " or ",
 StyleBox["lp",
  FontSlant->"Italic"],
 ") or Stephen Wolfram's (",
 StyleBox["SW",
  FontSlant->"Italic"],
 " or ",
 StyleBox["sw",
  FontSlant->"Italic"],
 "); the difference in the modes of the same type, say, ",
 StyleBox["LP",
  FontSlant->"Italic"],
 " and ",
 StyleBox["lp",
  FontSlant->"Italic"],
 ", is simply that the one in lower-case returns the class names in a \
shortened way. The classification is indexed by the rule with  the smallest \
rule number of each dynamical class. The ",
 StyleBox["LP",
  FontSlant->"Italic"],
 "-",
 StyleBox["lp",
  FontSlant->"Italic"],
 " ",
 StyleBox["ctypes",
  FontSlant->"Italic"],
 " were introduced in the references:\nWentian",
 StyleBox[" ",
  FontWeight->"Bold"],
 "Li and Norman Packard.  \"The structure of the elementary cellular automata \
rule space\".",
 StyleBox["  ",
  FontWeight->"Bold"],
 StyleBox["Complex Systems",
  FontSlant->"Italic"],
 ", 4:281-297, 1990.\nWentian",
 StyleBox[" ",
  FontWeight->"Bold"],
 "Li. \"Phenomenology of nonlocal cellular automata\". ",
 StyleBox["Journal of Statistical Physics",
  FontSlant->"Italic"],
 ", 68:829-882, 1992."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9342e0d8-e009-4802-8e2e-a8306bd46995"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ECADynamics", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"ctype_", ":", "lp"}]}], "]"}], ":=", "\n", "    ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dynclassrep", "}"}], ",", "\n", "      ", 
     RowBox[{
      RowBox[{"dynclassrep", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DynamicalEquivalenceClass", "[", "rnum", "]"}], "]"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "ctype", ",", "\[IndentingNewLine]", "LP", ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0", ",", "8", ",", "32", ",", "40", ",", "128", ",", "136", ",",
               "160", ",", "168"}], "}"}], ",", " ", "dynclassrep"}], "]"}], 
          ",", " ", "\"\<Null\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "4", ",", "12", ",", "13", ",", "36", ",", "44", ",", "72", 
                ",", "76", ",", "77", ",", "78", ",", "104", ",", "132", ",", 
                "140", ",", "164", ",", "172", ",", "200", ",", "204", ",", 
                "232"}], "}"}], ",", " ", "dynclassrep"}], "]"}], ",", " ", 
            "\"\<Fixed-point\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "10", ",", "24", ",", "34", ",", "42", ",", "46", 
                  ",", "56", ",", "57", ",", "58", ",", "130", ",", "138", 
                  ",", "152", ",", "162", ",", "170", ",", "184"}], "}"}], 
                ",", "dynclassrep"}], "]"}], ",", " ", 
              "\"\<Fixed-point-S\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "5", ",", "19", ",", "23", ",", "25", ",", "28", 
                    ",", "29", ",", "33", ",", "37", ",", "50", ",", "51", 
                    ",", "108", ",", "156"}], "}"}], ",", " ", 
                  "dynclassrep"}], "]"}], ",", " ", "\"\<Period-2\>\"", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "3", ",", "6", ",", "7", ",", "9", ",", "11", ",", "14", 
                    ",", "15", ",", "27", ",", "35", ",", "38", ",", "43", 
                    ",", "74", ",", "134", ",", "142", ",", "178"}], "}"}], 
                    ",", "dynclassrep"}], "]"}], ",", " ", 
                  "\"\<Period-2S\>\"", ",", "\[IndentingNewLine]", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"62", ",", "94"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Period-3\>\"", ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"26", ",", "41", ",", "154"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Period-N\>\"", ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"54", ",", "110"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Complex\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "18", ",", "22", ",", "30", ",", "45", ",", "60", ",", 
                    "73", ",", "90", ",", "105", ",", "106", ",", "126", ",", 
                    "146", ",", "150", ",", "122"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Chaotic\>\""}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
             "]"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", "lp", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0", ",", "8", ",", "32", ",", "40", ",", "128", ",", "136", ",",
               "160", ",", "168"}], "}"}], ",", " ", "dynclassrep"}], "]"}], 
          ",", " ", "\"\<N\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "4", ",", "12", ",", "13", ",", "36", ",", "44", ",", "72", 
                ",", "76", ",", "77", ",", "78", ",", "104", ",", "132", ",", 
                "140", ",", "164", ",", "172", ",", "200", ",", "204", ",", 
                "232"}], "}"}], ",", " ", "dynclassrep"}], "]"}], ",", " ", 
            "\"\<Fp\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "10", ",", "24", ",", "34", ",", "42", ",", "46", 
                  ",", "56", ",", "57", ",", "58", ",", "130", ",", "138", 
                  ",", "152", ",", "162", ",", "170", ",", "184"}], "}"}], 
                ",", "dynclassrep"}], "]"}], ",", " ", "\"\<Fps\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "5", ",", "19", ",", "23", ",", "25", ",", "28", 
                    ",", "29", ",", "33", ",", "37", ",", "50", ",", "51", 
                    ",", "108", ",", "156"}], "}"}], ",", " ", 
                  "dynclassrep"}], "]"}], ",", " ", "\"\<P2\>\"", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "3", ",", "6", ",", "7", ",", "9", ",", "11", ",", "14", 
                    ",", "15", ",", "27", ",", "35", ",", "38", ",", "43", 
                    ",", "74", ",", "134", ",", "142", ",", "178"}], "}"}], 
                    ",", "dynclassrep"}], "]"}], ",", " ", "\"\<P2s\>\"", ",",
                   "\[IndentingNewLine]", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"62", ",", "94"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<P3\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"26", ",", "41", ",", "154"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Pn\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"54", ",", "110"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Cplx\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "18", ",", "22", ",", "30", ",", "45", ",", "60", ",", 
                    "73", ",", "90", ",", "105", ",", "106", ",", "126", ",", 
                    "146", ",", "150", ",", "122"}], "}"}], ",", " ", 
                    "dynclassrep"}], "]"}], ",", " ", "\"\<Ch\>\""}], "]"}]}],
                     "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}]}], "]"}], ",", "\[IndentingNewLine]", "SW", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0", ",", "8", ",", "32", ",", "40", ",", "128", ",", "136", ",",
               "160", ",", "168"}], "}"}], ",", " ", "dynclassrep"}], "]"}], 
          ",", " ", "\"\<Class-I\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
                ",", "14", ",", "15", ",", "19", ",", "23", ",", "24", ",", 
                "25", ",", "26", ",", "27", ",", "28", ",", "29", ",", "33", 
                ",", "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", 
                "41", ",", "42", ",", "43", ",", "44", ",", "46", ",", "50", 
                ",", "51", ",", "56", ",", "57", ",", "58", ",", "62", ",", 
                "72", ",", "74", ",", "76", ",", "77", ",", "78", ",", "94", 
                ",", "104", ",", "108", ",", "130", ",", "132", ",", "134", 
                ",", "138", ",", "140", ",", "142", ",", "152", ",", "154", 
                ",", "156", ",", "162", ",", "164", ",", "170", ",", "172", 
                ",", "178", ",", "184", ",", "200", ",", "204", ",", "232"}], 
               "}"}], ",", "dynclassrep"}], "]"}], ",", " ", 
            "\"\<Class-II\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "18", ",", "22", ",", "30", ",", "45", ",", "60", ",", "73", 
                  ",", "90", ",", "105", ",", "106", ",", "122", ",", "126", 
                  ",", "146", ",", "150"}], "}"}], ",", " ", "dynclassrep"}], 
               "]"}], ",", " ", "\"\<Class-III\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"54", ",", "110"}], "}"}], ",", " ", 
                  "dynclassrep"}], "]"}], ",", " ", "\"\<Class-IV\>\""}], 
               "]"}]}], "]"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "sw", ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0", ",", "8", ",", "32", ",", "40", ",", "128", ",", "136", ",",
               "160", ",", "168"}], "}"}], ",", " ", "dynclassrep"}], "]"}], 
          ",", " ", "\"\<CI\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
                ",", "14", ",", "15", ",", "19", ",", "23", ",", "24", ",", 
                "25", ",", "26", ",", "27", ",", "28", ",", "29", ",", "33", 
                ",", "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", 
                "41", ",", "42", ",", "43", ",", "44", ",", "46", ",", "50", 
                ",", "51", ",", "56", ",", "57", ",", "58", ",", "62", ",", 
                "72", ",", "74", ",", "76", ",", "77", ",", "78", ",", "94", 
                ",", "104", ",", "108", ",", "130", ",", "132", ",", "134", 
                ",", "138", ",", "140", ",", "142", ",", "152", ",", "154", 
                ",", "156", ",", "162", ",", "164", ",", "170", ",", "172", 
                ",", "178", ",", "184", ",", "200", ",", "204", ",", "232"}], 
               "}"}], ",", "dynclassrep"}], "]"}], ",", " ", "\"\<CII\>\"", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "18", ",", "22", ",", "30", ",", "45", ",", "60", ",", "73", 
                  ",", "90", ",", "105", ",", "106", ",", "122", ",", "126", 
                  ",", "146", ",", "150"}], "}"}], ",", " ", "dynclassrep"}], 
               "]"}], ",", " ", "\"\<CIII\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"54", ",", "110"}], "}"}], ",", " ", 
                  "dynclassrep"}], "]"}], ",", " ", "\"\<CIV\>\""}], "]"}]}], 
             "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7778244503342*^9, 3.777888900635828*^9, {3.840740305545892*^9, 
   3.8407403069520807`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"8085e345-c0f5-4828-8c07-8621d639dc5d"],

Cell[TextData[{
 "ECADynamicalClasses[ ] returns the 88 classes of dynamical equivalence of \
the elementary space, with the first rule of each class being its smallest \
rule number. The ECA space with these 88 rules is the so-called the ",
 StyleBox["folded",
  FontSlant->"Italic"],
 " ECA space.\nThe rules can also be presented in groups, following their ",
 "dynamical behaviour ",
 "according to",
 " the ",
 "classification scheme defined by ",
 StyleBox["ctype",
  FontSlant->"Italic"],
 ", and sorted from the one with the smallest number; according to what is \
defined in the argument ",
 StyleBox["spacetype",
  FontSlant->"Italic"],
 ", all rules from the ECA space can be returned (",
 StyleBox["full",
  FontSlant->"Italic"],
 "), or only those from the ",
 StyleBox["folded",
  FontSlant->"Italic"],
 " space."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7cb38c96-e623-4c9c-b3e9-b8339495fda9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ECADynamicalClasses", "[", "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"DynamicalEquivalenceClass", "[", "#", "]"}], "]"}], "&"}], 
       " ", "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "255"}], "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ECADynamicalClasses", "[", 
    RowBox[{"spacetype_", ",", 
     RowBox[{"ctype_", ":", "lp"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"classes", "=", 
        RowBox[{"Switch", "[", 
         RowBox[{"ctype", ",", "\[IndentingNewLine]", "LP", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Null\>\"", ",", " ", "\"\<Fixed-point\>\"", ",", 
            "\"\<Fixed-point-S\>\"", ",", " ", "\"\<Period-2\>\"", ",", " ", 
            "\"\<Period-2S\>\"", ",", "\"\<Period-3\>\"", ",", " ", 
            "\"\<Period-N\>\"", ",", " ", "\"\<Complex\>\"", ",", " ", 
            "\"\<Chaotic\>\""}], "}"}], ",", "\[IndentingNewLine]", "lp", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N\>\"", ",", " ", "\"\<Fp\>\"", ",", "\"\<Fps\>\"", ",", " ", 
            "\"\<P2\>\"", ",", " ", "\"\<P2s\>\"", ",", "\"\<P3\>\"", ",", 
            " ", "\"\<Pn\>\"", ",", " ", "\"\<Cplx\>\"", ",", " ", 
            "\"\<Ch\>\""}], "}"}], ",", "\[IndentingNewLine]", "SW", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Class-I\>\"", ",", "\"\<Class-II\>\"", ",", 
            "\"\<Class-III\>\"", ",", "\"\<Class-IV\>\""}], "}"}], ",", 
          "\[IndentingNewLine]", "sw", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<CI\>\"", ",", "\"\<CII\>\"", ",", "\"\<CIII\>\"", ",", 
            "\"\<CIV\>\""}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"allECADynamicalClasses", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"DynamicalEquivalenceClass", "[", "#", "]"}], "]"}], 
             "&"}], " ", "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "255"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "&"}]}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"spacetype", ",", "\[IndentingNewLine]", "full", ",", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Sort", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "&"}], "/@", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ECADynamics", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "ctype"}], "]"}], ",", 
                    "#"}], "}"}], "&"}], "/@", " ", 
                 "allECADynamicalClasses"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "_"}], "}"}]}], "]"}]}], "]"}], "]"}]}], 
          "}"}], "&"}], " ", "/@", " ", "classes"}], ",", 
       "\[IndentingNewLine]", "folded", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "&"}], "/@", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "&"}], "/@", " ", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ECADynamics", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "ctype"}], "]"}], ",", 
                    "#"}], "}"}], "&"}], "/@", " ", 
                  "allECADynamicalClasses"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "_"}], "}"}]}], "]"}]}], ")"}]}], "]"}]}],
           "}"}], "&"}], " ", "/@", " ", "classes"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4976166923050003`*^9, 3.497616729771*^9}, {
  3.777824458636977*^9, 3.777824467922917*^9}, {3.7778889006385317`*^9, 
  3.777888900640329*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"0abddb95-3e06-48a3-ae3f-80534a09d4b4"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["9. Spectral analysis", "Section",
 CellChangeTimes->{{3.5408975556926627`*^9, 3.540897556090648*^9}, {
  3.722676340330512*^9, 
  3.7226763408029137`*^9}},ExpressionUUID->"d6c2c59c-4ace-4bb6-9fa9-\
2a01382641e0"],

Cell[CellGroupData[{

Cell["\<\
Spectral signatures of the elementary cellular automata (ECA)\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.5434895268076*^9},ExpressionUUID->"333e1192-5881-403f-a798-bca0f4732007"],

Cell[TextData[{
 "Works out the spectral signature of elementary rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", executed for ",
 StyleBox["nsteps",
  FontSlant->"Italic"],
 ", over ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " of length ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", randomly generated. The ",
 StyleBox["normalised",
  FontSlant->"Italic"],
 " parameter option gives the possibility of generating the normalised \
version of the spectrum (in the \[OpenCurlyDoubleQuote]energy\
\[CloseCurlyDoubleQuote] axis). The spectral signature derives from the \
Fourier Transform magnitude of the rule.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": This is basically the function used in the NKS Atlas, except that: (1) I \
simplified Apply[Plus,Transpose[",
 StyleBox["block",
  FontSlant->"Italic"],
 "],{1}] by Total[",
 StyleBox["block",
  FontSlant->"Italic"],
 "]; (2) Ceiling[(len+1)/2] replaced Floor[len/2] so as not to miss the \
central frequency, i.e., the one associated to the central position of the \
lattice; and (3) added the ",
 StyleBox["normalised",
  FontSlant->"Italic"],
 " parameter."
}], "Text",
 CellChangeTimes->{{3.4209816727230835`*^9, 3.4209817984739046`*^9}, {
  3.42098188315567*^9, 3.4209819079413114`*^9}, {3.554741520375*^9, 
  3.554741657015625*^9}, {3.564750840549519*^9, 3.564750903393368*^9}, {
  3.564751014420951*^9, 3.564751088096821*^9}, {3.564752221445977*^9, 
  3.5647522313061857`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f6eac16a-4796-4d23-92f9-9e313cc5df50"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CASpectrum", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"len_Integer", ":", "1024"}], ",", 
     RowBox[{"nsteps_Integer", ":", "200"}], ",", 
     RowBox[{"nICs_Integer", ":", "40"}], ",", 
     RowBox[{"normalised_Symbol", ":", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "spec", "}"}], ",", 
     RowBox[{
      RowBox[{"spec", "=", 
       RowBox[{
        FractionBox["1", "nICs"], 
        RowBox[{"Total", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Fourier", "[", 
               RowBox[{"Last", "[", 
                RowBox[{"CellularAutomaton", "[", 
                 RowBox[{"rnum", ",", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "len"}], "]"}], ",", 
                  "nsteps"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"\[LeftCeiling]", 
                FractionBox[
                 RowBox[{"len", "+", "1"}], "2"], "\[RightCeiling]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", "nICs", "}"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"normalised", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "spec", "]"}], ">", "0"}], ",", 
          RowBox[{"spec", "/", 
           RowBox[{"Max", "[", "spec", "]"}]}], ",", "spec"}], "]"}], ",", 
        "spec"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.564750812111058*^9, {3.570377930828125*^9, 3.57037795509375*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"72a7d08e-7e3a-4aaf-8ae7-fe69ab765feb"],

Cell[TextData[{
 "Plots the spectral signature of elementary rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", executed for ",
 StyleBox["nsteps",
  FontSlant->"Italic"],
 ", over ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " of length ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", randomly generated. The ",
 StyleBox["normalised",
  FontSlant->"Italic"],
 " parameter option gives the possibility of generating the normalised \
version of the spectrum. The parameter ",
 StyleBox["fticks",
  FontSlant->"Italic"],
 " (Integer \[GreaterEqual] 1, or 0 \[LessEqual] Real \[LessEqual] 1) defines \
the way the frequencies are going to plotted: as an integer, the frequencies \
are ticked with their absolute value, divided in ",
 StyleBox["fticks ",
  FontSlant->"Italic"],
 "ranges; as a Real, the frequencies are normalised and plotted in ranges of \
size ",
 StyleBox["fticks",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.564751126420841*^9, 3.564751139895105*^9}, {
  3.564751627721094*^9, 3.564751647908291*^9}, {3.56475179068143*^9, 
  3.5647521271130543`*^9}, {3.564752214378386*^9, 3.5647522149702253`*^9}, {
  3.564752251000608*^9, 3.564752315329355*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d605a45e-6647-4deb-b509-bff15834bced"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DisplayCASpectrum", "[", 
    RowBox[{"rnum_Integer", ",", " ", 
     RowBox[{"len_Integer", ":", "1024"}], ",", " ", 
     RowBox[{"nsteps_Integer", ":", "200"}], ",", " ", 
     RowBox[{"nICs_Integer", ":", "40"}], ",", 
     RowBox[{"normalised_Symbol", ":", "False"}], ",", 
     RowBox[{"fticks_", ":", "0.125"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"spec", "=", 
       RowBox[{"CASpectrum", "[", 
        RowBox[{
        "rnum", ",", "len", ",", "nsteps", ",", "nICs", ",", "normalised"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"spec", ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IntegerQ", "[", "fticks", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "[", "spec", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.0", ",", "1.0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "rnum"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Frequency\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IntegerQ", "[", "fticks", "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"Length", "[", "spec", "]"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "spec", "]"}], "/", "fticks"}]}], "]"}],
             ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0.0", ",", "1.0", ",", "fticks"}], "]"}]}], "]"}], ",", 
          "Automatic"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.564750963788632*^9, 3.564750966604792*^9}, {
  3.564751753864931*^9, 3.564751766107636*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"00a951c6-7f6d-442c-9c81-4c1972dac50a"],

Cell[TextData[{
 "Plots the spectral signature of the rules dynamically equivalent to \
elementary rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", executed for ",
 StyleBox["nsteps",
  FontSlant->"Italic"],
 ", over ",
 StyleBox["nICs",
  FontSlant->"Italic"],
 " of length ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", randomly generated. All spectra are generated from the same random seed \
(default 1234)."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"1425f514-fc72-41bf-93a2-e94798aede52"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DisplayCAClassSpectra", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"len_Integer", ":", "1024"}], ",", 
     RowBox[{"nsteps_Integer", ":", "200"}], ",", 
     RowBox[{"nICs_Integer", ":", "40"}], ",", 
     RowBox[{"rdseed_", ":", "1234"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"SeedRandom", "[", "rdseed", "]"}], ";", 
               RowBox[{"CASpectrum", "[", 
                RowBox[{"#1", ",", "len", ",", "nsteps", ",", "nICs"}], 
                "]"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "#1"}], ",", 
              RowBox[{"Ticks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}], "&"}], 
           ")"}], "/@", "#1"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], " ", "120"}], ",", "120"}], 
           "}"}]}]}], "]"}], "]"}], "&"}], ")"}], "/@", 
    RowBox[{"{", 
     RowBox[{"DynamicalEquivalenceClass", "[", "rnum", "]"}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.554741689171875*^9, 3.7778244755959806`*^9, 
  3.777888900641512*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"889f4486-95a7-491d-8e2f-e8e21079b349"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectral similarity between CA images", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489522839243*^9},ExpressionUUID->"ee451afd-dab3-40e8-b55e-\
fc5e6ec29f84"],

Cell[TextData[{
 "Works out the discrete Fourier transform magnitude (DFTM) of the bitmap \
image stored in ",
 StyleBox["filename",
  FontSlant->"Italic"],
 ", or of the numerical list ",
 StyleBox["img",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{3.4956285490625*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cc0e55f8-fda2-4d84-b8c7-6175d4f9c064"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MagF", "[", "filename_String", "]"}], ":=", 
   RowBox[{"Abs", "[", 
    RowBox[{"Fourier", "[", 
     RowBox[{"ImportIC", "[", "filename", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MagF", "[", "img_List", "]"}], ":=", 
   RowBox[{"Abs", "[", 
    RowBox[{"Fourier", "[", "img", "]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[149]:=",ExpressionUUID->"ca48e49e-e57d-42ea-b495-e12af66ae256"],

Cell[TextData[{
 "Works out the Euclidean distance between the DFTMs of a pair of bitmap \
images stored in files, a pair of images (both bitmap or both already DFTM), \
a pair of binary vectors, or a pair of binary matrices. This spectral \
distance can be calculated from the ",
 StyleBox["Absolute",
  FontSlant->"Italic"],
 " or the ",
 StyleBox["Normalised",
  FontSlant->"Italic"],
 " values of the DFTMs, the absolute value being the default.\nIf the \
function is given a list of binary vectors matrices (that is, a list of 1D or \
2D images), the spectral distance is then calculated between one image of \
reference and all the others of the list, in sequence. For this, the user \
specifies the reference image by its position in the list (",
 StyleBox["begin",
  FontSlant->"Italic"],
 "), the last image to be considered (",
 StyleBox["end",
  FontSlant->"Italic"],
 "), and the stepsize (",
 StyleBox["step",
  FontSlant->"Italic"],
 ", default 1) to be accounted for; if ",
 StyleBox["begin",
  FontSlant->"Italic"],
 " is larger than ",
 StyleBox["end",
  FontSlant->"Italic"],
 ", the list is scanned backwards, from position ",
 StyleBox["end",
  FontSlant->"Italic"],
 " to position ",
 StyleBox["begin",
  FontSlant->"Italic"],
 ". In any case, the last element to be considered in the list can be \
referred to simply by ",
 StyleBox["n",
  FontSlant->"Italic"],
 ".\nExamples of usage: \n",
 StyleBox["SpectralDist[cahistory, 2, n]",
  FontFamily->"Courier New"],
 StyleBox["  returns a list with all spectral distances between the 2nd image \
in the ",
  FontFamily->"Times New Roman"],
 StyleBox["cahistory",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" list, and all the others in sequence, up to the last image. \n",
  FontFamily->"Times New Roman"],
 StyleBox["SpectralDist[cahistory, n, 2]",
  FontFamily->"Courier New"],
 StyleBox["  returns a list with all spectral distances between the \
last-but-one image in the ",
  FontFamily->"Times New Roman"],
 StyleBox["cahistory",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" list, and all the others in (the backward) sequence, up to the \
1st image.\n",
  FontFamily->"Times New Roman"],
 StyleBox["SpectralDist[cahistory, 1, 10, 2]",
  FontFamily->"Courier New"],
 StyleBox["  returns a list with all spectral distances between the 1st image \
in the ",
  FontFamily->"Times New Roman"],
 StyleBox["cahistory",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" list, and all the others, with stepsize 2, in sequence, up to the \
10th image. \n",
  FontFamily->"Times New Roman"],
 StyleBox["SpectralDist[cahistory, 10, 1, 2]",
  FontFamily->"Courier New"],
 StyleBox["  returns a list with all spectral distances between the last \
image in the ",
  FontFamily->"Times New Roman"],
 StyleBox["cahistory",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" list, and all the others, with stepsize 2, in (the backward) \
sequence, up to the 10th image, from the last one.",
  FontFamily->"Times New Roman"]
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2af6e669-9c99-40c6-8422-5ebced09171d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpectralDist", "[", 
     RowBox[{"img1_List", ",", "img2_List", ",", 
      RowBox[{"type_", ":", "Absolute"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "img1", "]"}], "\[NotEqual]", 
       RowBox[{"Dimensions", "[", "img2", "]"}]}], ",", 
      RowBox[{
      "Print", "[", 
       "\"\<The 2 images in the argument must have the same dimension!\>\"", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\[IndentingNewLine]", "Absolute", ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryQ", "[", "img1", "]"}], "\[And]", 
           RowBox[{"BinaryQ", "[", "img2", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"Power", "[", 
              RowBox[{
               RowBox[{"Subtract", "[", 
                RowBox[{
                 RowBox[{"MagF", "[", "img1", "]"}], ",", 
                 RowBox[{"MagF", "[", "img2", "]"}]}], "]"}], ",", "2"}], 
              "]"}], ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"Power", "[", 
              RowBox[{
               RowBox[{"Subtract", "[", 
                RowBox[{"img1", ",", "img2"}], "]"}], ",", "2"}], "]"}], ",", 
             "2"}], "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "Normalised", ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mf1", ",", "mf2"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"BinaryQ", "[", "img1", "]"}], "\[And]", 
             RowBox[{"BinaryQ", "[", "img2", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{"Subtract", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"mf1", "=", 
                    RowBox[{"MagF", "[", "img1", "]"}]}], ")"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"mf1", ",", "2"}], "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"mf2", "=", 
                    RowBox[{"MagF", "[", "img2", "]"}]}], ")"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"mf2", ",", "2"}], "]"}]}]}], "]"}], ",", "2"}], 
                "]"}], ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{"Subtract", "[", 
                  RowBox[{
                   RowBox[{"img1", "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"img1", ",", "2"}], "]"}]}], ",", 
                   RowBox[{"img2", "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"img2", ",", "2"}], "]"}]}]}], "]"}], ",", "2"}], 
                "]"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpectralDist", "[", 
     RowBox[{"filename1_String", ",", "filename2_String", ",", 
      RowBox[{"type_", ":", "Absolute"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"type", ",", "\[IndentingNewLine]", "Absolute", ",", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"Power", "[", 
          RowBox[{
           RowBox[{"Subtract", "[", 
            RowBox[{
             RowBox[{"MagF", "[", "filename1", "]"}], ",", 
             RowBox[{"MagF", "[", "filename2", "]"}]}], "]"}], ",", "2"}], 
          "]"}], ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "Normalised", ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mf1", ",", "mf2"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"Subtract", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"mf1", "=", 
                  RowBox[{"MagF", "[", "filename1", "]"}]}], ")"}], "/", 
                RowBox[{"Total", "[", 
                 RowBox[{"mf1", ",", "2"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"mf2", "=", 
                  RowBox[{"MagF", "[", "filename2", "]"}]}], ")"}], "/", 
                RowBox[{"Total", "[", 
                 RowBox[{"mf2", ",", "2"}], "]"}]}]}], "]"}], ",", "2"}], 
            "]"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SpectralDist", "[", 
    RowBox[{"cahistory_List", ",", 
     RowBox[{"beginarg_", "?", 
      RowBox[{"(", "AtomQ", ")"}]}], ",", 
     RowBox[{"endarg_", "?", 
      RowBox[{"(", "AtomQ", ")"}]}], ",", 
     RowBox[{"step_Integer", ":", "1"}], ",", 
     RowBox[{"type_", ":", "Absolute"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"begin", "=", "beginarg"}], ",", 
       RowBox[{"end", "=", "endarg"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"beginarg", "==", "n"}], ",", " ", 
        RowBox[{"begin", "=", 
         RowBox[{"Length", "[", "cahistory", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"endarg", "==", "n"}], ",", 
        RowBox[{"end", "=", 
         RowBox[{"Length", "[", "cahistory", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"begin", "\[LessEqual]", "end"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Outer", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SpectralDist", "[", 
             RowBox[{"#1", ",", "#2", ",", "type"}], "]"}], "&"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"cahistory", ",", 
             RowBox[{"{", "begin", "}"}]}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"cahistory", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"begin", "+", "1"}], ",", "end", ",", "step"}], 
              "}"}]}], "]"}], ",", "1"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Outer", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SpectralDist", "[", 
             RowBox[{"#1", ",", "#2", ",", "type"}], "]"}], "&"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"cahistory", ",", 
             RowBox[{"{", "begin", "}"}]}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Reverse", "@", "cahistory"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "cahistory", "]"}], "-", "begin", "+", 
                "2"}], ",", 
               RowBox[{
                RowBox[{"Length", "[", "cahistory", "]"}], "-", "end", "+", 
                "1"}], ",", "step"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"7eac1cf7-b8f8-4237-a9fb-5870b27d5e1f"],

Cell[TextData[{
 "According to the specified function call ",
 StyleBox["fCA ",
  FontSlant->"Italic"],
 "(CellularAutomaton, CrossedECA or CASpatialComposition), the corresponding \
function is run until a spectral fixed point (SFxP) is achieved, or until ",
 StyleBox["imax",
  FontSlant->"Italic"],
 " iterations are done. SpectralFixedPoint returns the list ",
 StyleBox["{t, {MagF[ic",
  FontFamily->"Courier New"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "-", "1"}]], TraditionalForm]],
  FontFamily->"Courier New",ExpressionUUID->
  "b902642d-46a4-4a6f-947d-c5012b389761"],
 StyleBox["], MagF[ic",
  FontFamily->"Courier New"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Courier New",ExpressionUUID->
  "074d6386-1888-46c7-8cc1-c2ba7dbdce70"],
 StyleBox["], {ic",
  FontFamily->"Courier New"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Courier New",ExpressionUUID->
  "f8362cc5-f8cb-41b1-a5fd-49289232a34f"],
 StyleBox[", ic",
  FontFamily->"Courier New"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "+", "1"}]], TraditionalForm]],
  FontFamily->"Courier New",ExpressionUUID->
  "7bc25d88-df19-4c7b-b53b-2ab0dc9d9f4b"],
 StyleBox["}}}",
  FontFamily->"Courier New"],
 ", where ",
 StyleBox["t",
  FontSlant->"Italic"],
 " is the iteration at which the SFxP was achieved. SFxP is assumed to be \
achieved when the DFTM of two subsequent images (snapshots of the CA \
functions) become the same.\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": I'm not fully sure this definition really defines convergence in the \
frequency domain...",
 StyleBox["\n",
  FontFamily->"Times New Roman"],
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \n",
 StyleBox["SpectralFixedPoint[CellularAutomaton[163,First@UniformICs[1,150],\
200],50]\nSpectralFixedPoint[CellularAutomaton[{3455689214, \
2,{1,1}},BlackSurroundedByWhites[31,31],50]]\n\
SpectralFixedPoint[CrossedECA[{163,163},BlackSurroundedByWhites[31,31],50]]\n\
SpectralFixedPoint[CellularAutomaton[{CrossedECAtoMoore[163,163], \
2,{1,1}},BlackSurroundedByWhites[31,31],50]]",
  FontFamily->"Courier New"],
 "\n",
 StyleBox["SpectralFixedPoint[",
  FontFamily->"Courier New"],
 "CASpatialComposition",
 StyleBox["[Table[Random[Integer,{30,157}],{25}],First@UniformICs[1,25],200]]",
  FontFamily->"Courier New"],
 "\n",
 StyleBox["Implementation notes",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[": \n\[Bullet] All 3 ",
  FontFamily->"Times New Roman"],
 "SFxP",
 StyleBox[" functions have attribute HoldFirst.\n\[Bullet] Every iteration is \
constructed to return {MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "-", "1"}]], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "ae48cb45-8170-4f42-8ca6-d66f7de24d21"],
 StyleBox["], MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "4142e941-a759-4666-957b-d7326ac8ea79"],
 StyleBox["], {ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "23132726-8a60-455f-bf19-60cb9d5737d3"],
 StyleBox[", ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "+", "1"}]], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "71fac220-7e05-4828-ba24-907227496076"],
 StyleBox["}}, because this allows that the MagF calculation of every CA \
image be made only once for every CA image (starting with {ic, MagF[ic], {ic, \
ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "dff6f1c5-8404-4373-a7a5-a22f834588d3"],
 StyleBox["}}; by the way, the first element of the latter list is dummy, and \
",
  FontFamily->"Times New Roman"],
 StyleBox["ic",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" is used just as a way to guarantee that, at the 0th iteration, \
the comparison between ",
  FontFamily->"Times New Roman"],
 StyleBox["ic",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" and MagF[ic] won't fail for their not having the same dimension, \
as required by the SpectralDist function). ",
  FontFamily->"Times New Roman"],
 " This can be seen through the sequence:\nt=0:  ",
 StyleBox["{      ic        , MagF[ ic ],  {ic ,  ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "803c5549-fee9-4e39-8eab-0ee1027809ca"],
 StyleBox["}}\n",
  FontFamily->"Times New Roman"],
 "t=1:  ",
 StyleBox["{MagF[ ic",
  FontFamily->"Times New Roman"],
 " ",
 StyleBox["], MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "cb59868b-2ea6-4c3a-bcdf-43e5d6ae8c3a"],
 StyleBox["], {ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "65254bf9-94f7-498a-a916-c844cece1066"],
 StyleBox[", ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "e0c83beb-5a7a-4a44-96be-3fe0382af615"],
 StyleBox["}}\n",
  FontFamily->"Times New Roman"],
 "t=2:  ",
 StyleBox["{MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "cadfe774-8b1e-46b0-ac11-e1ad98363eb3"],
 StyleBox["], MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "893cbafe-5080-40fe-9461-46365e1f8506"],
 StyleBox["], {ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "386a3db6-054e-423b-9047-882ccfb2b9d7"],
 StyleBox[", ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "3"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "3b8d2f5b-1838-4151-bdfc-b396bb20a728"],
 StyleBox["}}\n\[Bullet] Convergence to the spectral fixed point occurs when \
SpectralDist[MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "f2605a77-c226-4165-b122-143ba6aa6aaa"],
 StyleBox["], MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "+", "1"}]], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "671a1706-edc2-4507-83dc-725016b88bab"],
 StyleBox["]] becomes \[TildeTilde]0, thus making ",
  FontFamily->"Times New Roman"],
 StyleBox["N",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox["estWhileList",
  FontSlant->"Italic"],
 " to fail",
 StyleBox["; this occurs after ",
  FontFamily->"Times New Roman"],
 StyleBox["t",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" iterations of the ",
  FontFamily->"Times New Roman"],
 StyleBox["N",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox["estWhileList",
  FontSlant->"Italic"],
 " function (or of the CA function), which is the Length[list returned by the \
function] - 1. For instance, notice that in the sequence above, it is at t=2 \
that the comparison between ",
 StyleBox["MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "de65ee88-e8c7-427c-9e49-a82c8dea467e"],
 StyleBox["] and MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "3196c091-88ba-4803-b0db-8a2bf857cf61"],
 StyleBox["] is made, such that, if they are the same, the function halts.\n\
\[Bullet] SpectralDist[MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "t"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "6d0e8f92-6c76-4b81-83b7-f1eca941e5c4"],
 StyleBox["], MagF[ic",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", 
    RowBox[{"t", "+", "1"}]], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "0c3604d1-b7e1-42f3-afa0-18cdc1fbcc47"],
 StyleBox["]] is considered 0, for any distance value ",
  FontFamily->"Times New Roman"],
 "smaller in absolute magnitude than ",
 StyleBox["delta",
  FontSlant->"Italic"],
 " (used by function Chop; in fact the default value for ",
 StyleBox["delta",
  FontSlant->"Italic"],
 " is the default value itself used in Chop)."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e9b1fbc3-f881-49ad-a428-e07bdee6f09d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpectralFixedPoint", "[", 
    RowBox[{
     RowBox[{"fCA_Symbol", "[", "args__", "]"}], ",", 
     RowBox[{"imax_Integer", ":", "100"}], ",", 
     RowBox[{
      RowBox[{"delta_Real", ":"}], "1.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "-", "1"}], ",", 
           RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], " ", "/@", " ", 
        RowBox[{"{", 
         RowBox[{"NestWhileList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"MagF", "[", 
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
              ",", 
              RowBox[{"fCA", "[", 
               RowBox[{"rnum", ",", 
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                "1"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"ic", ",", 
             RowBox[{"MagF", "[", "ic", "]"}], ",", 
             RowBox[{"fCA", "[", 
              RowBox[{"rnum", ",", "ic", ",", "1"}], "]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{
                RowBox[{"SpectralDist", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}], ",", "delta"}], "]"}], 
              "\[NotEqual]", "0"}], ")"}], "&"}], ",", "1", ",", "imax"}], 
          "]"}], "}"}]}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SpectralFixedPoint", ",", " ", "HoldFirst"}], "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"e93246cc-328e-4bf9-ae24-2f5bd7b29fdc"],

Cell[TextData[{
 "Predicate constructed out of ",
 StyleBox["SpectralFixedPoint",
  FontFamily->"Times New Roman"],
 ". It is assumed that the argument reaches a SFxP if it converges before the \
specified ",
 StyleBox["imax",
  FontSlant->"Italic"],
 " value of iterations."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"fbd4bdad-43ee-41c6-a257-721c33e2b304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpectralFixedPointQ", "[", 
    RowBox[{
     RowBox[{"fCA_Symbol", "[", "args__", "]"}], ",", 
     RowBox[{"imax_Integer", ":", "100"}], ",", 
     RowBox[{
      RowBox[{"delta_Real", ":"}], "1.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"imax", ">", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"NestWhileList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"MagF", "[", 
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
               ",", 
               RowBox[{"fCA", "[", 
                RowBox[{"rnum", ",", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 "1"}], "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"ic", ",", 
              RowBox[{"MagF", "[", "ic", "]"}], ",", 
              RowBox[{"fCA", "[", 
               RowBox[{"rnum", ",", "ic", ",", "1"}], "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Chop", "[", 
                RowBox[{
                 RowBox[{"SpectralDist", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "delta"}], "]"}],
                "\[NotEqual]", "0"}], ")"}], "&"}], ",", "1", ",", "imax"}], 
           "]"}], "]"}], "-", "1"}]}], ",", "True", ",", "False"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SpectralFixedPointQ", ",", " ", "HoldFirst"}], "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"83330bf9-e610-4280-b99a-41f008d9fbb6"],

Cell["\<\
Generates the history of values calculated until SFxP is found.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c6438dd1-c704-4b12-b8e1-110fcf42d3b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpectralFixedPointList", "[", 
    RowBox[{
     RowBox[{"fCA_Symbol", "[", "args__", "]"}], ",", 
     RowBox[{"imax_Integer", ":", "100"}], ",", 
     RowBox[{
      RowBox[{"delta_Real", ":"}], "1.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NestWhileList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"MagF", "[", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], ",", 
          RowBox[{"fCA", "[", 
           RowBox[{"rnum", ",", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", "1"}], 
           "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"ic", ",", 
         RowBox[{"MagF", "[", "ic", "]"}], ",", 
         RowBox[{"fCA", "[", 
          RowBox[{"rnum", ",", "ic", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"SpectralDist", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "delta"}], "]"}], "\[NotEqual]", "0"}], ")"}], "&"}],
        ",", "1", ",", "imax"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SpectralFixedPointList", ",", " ", "HoldFirst"}], "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"47787d14-4b98-4465-a502-a80c452cf4af"],

Cell[TextData[{
 "A ",
 StyleBox["prototype",
  FontWeight->"Bold"],
 " is the representative of a family of HNDs, by means of the spectral fixed \
points they lead to. An HND family is a set of HNDs representing the same \
decimal digit, in the present case, HND 0, 1, 2, etc.\nIt is assumed that: \n\
(1) Every HND family has a single prototype; \n(2) Prototypes differ from \
those of the other families; and \n(3) Similarity between prototypes mean \
similarity between the HND families they represent, and vice-versa.\n",
 StyleBox["PS",
  FontWeight->"Bold"],
 ": Notice that the function returns the prototype AND the number of spectral \
fixed points that contributed to its formation (i.e., those different from \
{})."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"09850257-f8ad-4997-b3cd-d8d54e0d4334"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetPrototype", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fCA_Symbol", ",", "args__"}], "}"}], ",", 
     RowBox[{
      RowBox[{"delta_Real", ":"}], "1.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"hndfamily", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"imax", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}]}], ",", "SFxPlist"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SFxPlist", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "<", "imax"}], ",", 
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"SpectralFixedPoint", "[", 
              RowBox[{
               RowBox[{"fCA", "[", 
                RowBox[{"rnum", ",", "#"}], "]"}], ",", "imax", ",", 
               "delta"}], "]"}], "&"}], " ", "/@", " ", "hndfamily"}], 
           ")"}]}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", "\[NotEqual]", 
           RowBox[{"{", "}"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SFxPlist", "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Mean", "[", "SFxPlist", "]"}]}], "]"}], ",", 
        RowBox[{"Length", "[", "SFxPlist", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"4f234466-9371-4f92-91b4-42b591625f07"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["10. De Bruijn graphs", "Section",
 CellChangeTimes->{{3.490377607359688*^9, 3.490377615926688*^9}, {
   3.4961621858290834`*^9, 3.496162187684085*^9}, 3.498406753979294*^9, {
   3.529165548160932*^9, 3.529165555615038*^9}, {3.529165639560487*^9, 
   3.529165640160753*^9}, {3.529165670848898*^9, 3.529165674999868*^9}, {
   3.529165947250918*^9, 3.529165952689978*^9}, {3.530556616512474*^9, 
   3.530556617951312*^9}, {3.540897422916929*^9, 3.540897445010427*^9}, {
   3.722676345303204*^9, 3.722676346023434*^9}, 
   3.918977971705608*^9},ExpressionUUID->"cc808ad9-86b8-4456-9d80-\
b24ec2383c5d"],

Cell[CellGroupData[{

Cell["Graph creation and conversion to an NKSNet", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.5434895268076*^9, {3.573668111194023*^9, 
   3.573668201316296*^9}},ExpressionUUID->"101db439-d9de-4b8c-b361-\
e8a606cbd98c"],

Cell[TextData[{
 "Returns the De Bruijn graph of any rule specified in the argument. \n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": Since it relies on ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s native DeBruijnGraph function, the outcome of \
RuleDeBruijnGraph can be used as argument to any of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s native functions for directed graphs. "
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.5272514687201576`*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.527530422561829*^9, 3.527530605275231*^9}, {3.527530658539493*^9, 
   3.527530673257926*^9}, {3.528040699124916*^9, 3.528040703862265*^9}, 
   3.52910709289077*^9, {3.529107127440781*^9, 3.529107193910263*^9}, {
   3.52910736704247*^9, 3.529107386336336*^9}, 3.5291085948218803`*^9, {
   3.529108982779132*^9, 3.5291090120022182`*^9}, {3.529109155419621*^9, 
   3.529109173289198*^9}, {3.529109284426951*^9, 3.529109304895588*^9}, 
   3.529109355816094*^9, {3.5291099756629143`*^9, 3.529109982902405*^9}, {
   3.529110033855473*^9, 3.529110034805585*^9}, {3.54089746836173*^9, 
   3.540897517987025*^9}, {3.540897601905047*^9, 3.540897737834718*^9}, {
   3.5408980078112392`*^9, 3.5408980160828953`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0fe3d0b1-ffc7-4106-93ff-4b78cfdacd9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleDeBruijnGraph", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "newNet"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"k", ">", "3"}], ",", 
         RowBox[{
         "Print", "[", 
          "\"\<For k>3 it is required to add new colours to the graph \
edges.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"newNet", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"DeBruijnGraph", "[", 
              RowBox[{"k", ",", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Last", "/@", 
             RowBox[{"Reverse", "@", 
              RowBox[{"RuleTable", "[", 
               RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "0", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Red"}], "]"}], ",", "1", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Black"}], "]"}], ",", "2", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Orange"}], "]"}], ",", "_", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Orange"}], "]"}]}], "]"}], "&"}], "/@", "newNet"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexLabels", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"i", "\[Rule]", 
             RowBox[{"IntegerString", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "k", ",", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              SuperscriptBox["k", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{"2", "r"}], "\[RightCeiling]"}]]}], "}"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"VertexSize", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeWeight", "\[Rule]", "newNet"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.810740130120897*^9, 3.8107401829122667`*^9}, 
   3.810740231693942*^9, {3.810740969351156*^9, 3.810741062621589*^9}, 
   3.810741130734925*^9, 3.810741416023263*^9, {3.810741458554085*^9, 
   3.810741458756982*^9}, {3.810741564156149*^9, 3.810741587858794*^9}, {
   3.810741662729969*^9, 3.810741713888339*^9}, {3.810742005576746*^9, 
   3.810742058882202*^9}, {3.81074285039533*^9, 3.810742854722764*^9}, {
   3.810742898998738*^9, 3.810742932985818*^9}, {3.810742969077898*^9, 
   3.810742992230413*^9}, {3.810743635071928*^9, 3.8107436565722857`*^9}, {
   3.810744255752143*^9, 3.810744435879956*^9}, {3.810744492884731*^9, 
   3.8107445191695347`*^9}, {3.810744572665344*^9, 3.810744582673149*^9}, {
   3.8107446209429293`*^9, 3.810744665266077*^9}, {3.8107447012485228`*^9, 
   3.810744714738439*^9}, {3.810744785819202*^9, 3.810744805711209*^9}, {
   3.810744837406788*^9, 3.810744899466292*^9}, {3.810744930694633*^9, 
   3.810744937672221*^9}, {3.8107449977610283`*^9, 3.81074500923528*^9}, {
   3.8107452226105328`*^9, 3.810745223515584*^9}, {3.810745368608005*^9, 
   3.810745378344997*^9}, {3.810746638408897*^9, 3.810746669356599*^9}, {
   3.810746840882091*^9, 3.810746842560174*^9}, {3.810746884125784*^9, 
   3.810746981035415*^9}, {3.810748023043412*^9, 3.810748024302532*^9}, {
   3.810748131932541*^9, 3.810748205824484*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"86e4d5e5-ad5c-4126-8355-15f0598488a6"],

Cell[TextData[{
 "\nConverts the De Bruijn graph of any rule specified in the argument to an \
NKS network.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nNKSNetToMathematicaGraph[RuleDeBruijnGraphToNKSNet[25678968755, 2, 3], \
net, on]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \nThe function simply provides an easy way to plot the built-in De Bruijn \
graph in the more flexible way available when it is presented as an arbitrary \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " graph."
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.5272514687201576`*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.527530422561829*^9, 3.527530605275231*^9}, {3.527530658539493*^9, 
   3.527530673257926*^9}, {3.528040699124916*^9, 3.528040703862265*^9}, 
   3.52910709289077*^9, {3.529107127440781*^9, 3.529107193910263*^9}, {
   3.52910736704247*^9, 3.529107386336336*^9}, 3.5291085948218803`*^9, {
   3.529108982779132*^9, 3.5291090120022182`*^9}, {3.529109155419621*^9, 
   3.529109173289198*^9}, {3.529109284426951*^9, 3.529109304895588*^9}, 
   3.529109355816094*^9, {3.5291099756629143`*^9, 3.529109982902405*^9}, {
   3.529110033855473*^9, 3.529110034805585*^9}, {3.54089746836173*^9, 
   3.540897517987025*^9}, {3.540897601905047*^9, 3.540897737834718*^9}, {
   3.5408980078112392`*^9, 3.5408980160828953`*^9}, {3.571826663333698*^9, 
   3.571826762402482*^9}, {3.5718268133525743`*^9, 3.571827089752087*^9}, {
   3.573668161764946*^9, 3.573668188256903*^9}, {3.573668585269826*^9, 
   3.573668593969942*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"186da29b-a5d0-4d2d-8326-ac0eb2559813"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleDeBruijnGraphToNKSNet", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "edgesAndWeights", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edgesAndWeights", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeList", "[", 
            RowBox[{"DeBruijnGraph", "[", 
             RowBox[{"k", ",", 
              RowBox[{"\[LeftCeiling]", 
               RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}], "]"}], ",", 
           RowBox[{"Last", "/@", 
            RowBox[{"Reverse", "[", 
             RowBox[{"RuleTable", "[", 
              RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}]}], "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Rule]", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ")"}], "&"}],
          "/@", "edgesAndWeights"}], ",", "k"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.571740393655807*^9, 3.57174041066586*^9}, {
   3.5717416895067377`*^9, 3.571741817587717*^9}, 3.571742721413283*^9, {
   3.571743054396329*^9, 3.571743066048946*^9}, 3.746440682778346*^9},
 CellLabel->
  "In[155]:=",ExpressionUUID->"6ab503c8-6b0d-4c6e-bd18-c74203087ed2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cycles", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.5434895268076*^9, {3.573668074491244*^9, 
   3.573668086180615*^9}},ExpressionUUID->"ad315ced-492d-4991-8ce5-\
3106c6cb6893"],

Cell[TextData[{
 "Lists all cycles in the input directed graph defined in ",
 StyleBox["directedGraph",
  FontSlant->"Italic"],
 ". The function uses ",
 StyleBox["PathInDirectedGraph",
  FontSlant->"Italic"],
 ": assuming the directed graph specified by dirGraphEdges has been converted \
into an undirected graph, the function takes a path in the undirected graph \
(in the list style, e.g., {1,2,3,1}), and checks whether there is a \
corresponding path in the directed graph; it returns the path, if any, or \
False, otherwise.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nAllCycles[RuleDeBruijnGraph[1845674, 2, 2]] // Length  =>  179\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) Much of the complication of the implementation comes from the fact \
that ",
 StyleBox["HamiltonianCycles",
  FontSlant->"Italic"],
 " considers the input graph as undirected (as of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 9).\n2) ",
 StyleBox["HamiltonianCycles",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t close the cycle and this has to be carried out \
explicitly. E.g., {2,1,4} becomes {2,1,4,2}.\n3) Since I implemented this \
having in mind the DeBruijn (directed) graphs, which are well-behaved (they \
have exactly ",
 StyleBox["k",
  FontSlant->"Italic"],
 " edges leaving and arriving at each node), I\[CloseCurlyQuote]m not sure it \
will work for an arbitrary input graph (more below).\n4) The algorithm is:\n\
-- Convert the original directed graph into an undirected graph.\n-- For the \
undirected graph, generate all Hamiltonian cycles for all subsets of its \
vertices. These correspond only to the cycles with 3 or more vertices.\n-- \
Select from the set of cycles in the undirected graph (now with the corrected \
vertex names), those that correspond to a cycle in the original directed \
graph.\n-- Generate the cycles with 1 or 2 vertices in the directed graph. \
Since I implemented this having in mind the DeBruijn graphs, I\
\[CloseCurlyQuote]m not sure it will work for an arbitrary input graph."
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.542357702727322*^9, 3.542357711631031*^9}, {3.5423583754559307`*^9, 
   3.542358614034449*^9}, {3.542358957138751*^9, 3.54235900588977*^9}, {
   3.542359244925847*^9, 3.542359273171749*^9}, {3.542359368766914*^9, 
   3.542359440948681*^9}, {3.5423594826500187`*^9, 3.5423595234567*^9}, {
   3.542360859553823*^9, 3.5423610798140993`*^9}, {3.542361119015572*^9, 
   3.542361821526494*^9}, {3.542361853616039*^9, 3.54236203737296*^9}, {
   3.542796066505355*^9, 3.5427961662104*^9}, {3.573639273561883*^9, 
   3.573639273940701*^9}, {3.573642902909677*^9, 3.573642922305438*^9}, {
   3.573646148025755*^9, 3.573646248294616*^9}, {3.573646296351508*^9, 
   3.5736464064504223`*^9}, {3.573646484994156*^9, 3.5736464872871103`*^9}, {
   3.573646913796296*^9, 3.573646990536768*^9}, {3.573666618686401*^9, 
   3.573666709719372*^9}, {3.573666763969055*^9, 3.573666886145998*^9}, {
   3.573666925741251*^9, 3.573666934706005*^9}, {3.573666985725308*^9, 
   3.573667007872177*^9}, 3.573667150920726*^9, {3.573667575284832*^9, 
   3.573667590891592*^9}, 3.573667621032174*^9, {3.573667659088214*^9, 
   3.5736676807966228`*^9}, 3.573668069390413*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"66053d94-a73f-45df-a224-ddab94dc5229"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Needs", "[", "\"\<GraphUtilities`\>\"", "]"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AllCycles", "[", "directedGraph_", "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dirGraphEdges", ",", "numberOfVertices", ",", "ithVertexSet", ",", 
         "ithHamiltonianCycles", ",", "cyclesLargerThan2UndirGraph", ",", 
         "cyclesLargerThan2", ",", "cyclesSize1And2"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dirGraphEdges", "=", 
         RowBox[{"EdgeList", "[", "directedGraph", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numberOfVertices", "=", 
         RowBox[{"Length", "@", 
          RowBox[{"Union", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"List", "@@", "#"}], "&"}], "/@", "dirGraphEdges"}], 
            "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cyclesLargerThan2UndirGraph", "=", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[NotEqual]", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"Append", "[", 
              RowBox[{"#", ",", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Reap", "[", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 SuperscriptBox["2", "numberOfVertices"]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ithVertexSet", "=", 
                  RowBox[{"First", "@", 
                   RowBox[{"Subsets", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "numberOfVertices", "]"}], ",", 
                    "All", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ithHamiltonianCycles", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"HamiltonianCycles", "[", 
                    RowBox[{
                    RowBox[{"Subgraph", "[", 
                    RowBox[{
                    RowBox[{"Graph", "@", "dirGraphEdges"}], ",", 
                    "ithVertexSet"}], "]"}], ",", "All"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ")"}], 
                    "&"}]}], "]"}]}], ")"}], "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"Sow", "[", "ithHamiltonianCycles", "]"}]}], 
                  "]"}]}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cyclesLargerThan2", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PathInDirectedGraph", "[", 
              RowBox[{"#", ",", "dirGraphEdges"}], "]"}], "&"}], "/@", 
            "cyclesLargerThan2UndirGraph"}], ",", 
           RowBox[{"Except", "[", "False", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cyclesSize1And2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sequence", "@@", 
              RowBox[{"(", 
               RowBox[{"List", "/@", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                ")"}]}], ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", "2"}], "]"}]}]}], "}"}], "&"}], "[", 
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{"Intersection", "[", 
             RowBox[{"dirGraphEdges", ",", 
              RowBox[{"Reverse", "/@", "dirGraphEdges"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "==", 
               RowBox[{
                RowBox[{"Reverse", "[", "#", "]"}], "\[LeftDoubleBracket]", 
                "1", "\[RightDoubleBracket]"}]}], ")"}], "&"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{"cyclesSize1And2", ",", "cyclesLargerThan2"}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PathInDirectedGraph", "[", 
      RowBox[{"undirGraphPath_", ",", "dirGraphEdges_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "dirGraphPath", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dirGraphPath", "=", 
         RowBox[{
          RowBox[{"Reap", "[", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "<", 
              RowBox[{"Length", "[", "undirGraphPath", "]"}]}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sow", "[", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "\[DirectedEdge]", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], "]"}],
                "&"}], "[", "undirGraphPath", "]"}]}], "]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Union", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"dirGraphEdges", ",", "#"}], "]"}], "&"}], "/@", 
             "dirGraphPath"}], "]"}], "\[Equal]", 
           RowBox[{"{", "True", "}"}]}], ",", "dirGraphPath", ",", "False"}], 
         "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.542312447253439*^9, 3.5423125470327806`*^9}, {
   3.542312578004737*^9, 3.5423126060462093`*^9}, {3.54231265906919*^9, 
   3.542312660283052*^9}, 3.542312698336647*^9, {3.542312759814215*^9, 
   3.542312789086511*^9}, {3.542312852224411*^9, 3.5423128563697643`*^9}, {
   3.542312916631031*^9, 3.54231295453196*^9}, {3.542313158298163*^9, 
   3.542313188360126*^9}, {3.542313228801299*^9, 3.5423132318031483`*^9}, 
   3.542313598189206*^9, {3.54231365752635*^9, 3.542313669341425*^9}, {
   3.542313778053711*^9, 3.542313785829791*^9}, 3.542355936097146*^9, {
   3.542356024648164*^9, 3.542356028586976*^9}, {3.542358805844891*^9, 
   3.542358850357934*^9}, {3.542358937929881*^9, 3.542358938533462*^9}, 
   3.542359103327236*^9, {3.542795535313607*^9, 3.542795537074883*^9}, {
   3.573571419604658*^9, 3.57357143450883*^9}, 3.573638471913992*^9, {
   3.573639179244388*^9, 3.5736391793249207`*^9}, {3.57364053375885*^9, 
   3.573640552715584*^9}, {3.573640763505327*^9, 3.573640812487919*^9}, {
   3.573640845895237*^9, 3.573640846951463*^9}, {3.573640932580669*^9, 
   3.5736409406177273`*^9}, {3.573640986270263*^9, 3.573640993362405*^9}, {
   3.573641503077987*^9, 3.573641504867291*^9}, 3.573641595347328*^9, {
   3.573641684023188*^9, 3.5736417054949217`*^9}, {3.573641798505772*^9, 
   3.573641805391254*^9}, {3.573642116735415*^9, 3.573642124660006*^9}, {
   3.573642265557753*^9, 3.5736422752739973`*^9}, 3.573642614384088*^9, {
   3.573643014454465*^9, 3.573643019883588*^9}, 3.573643291048774*^9, {
   3.573643734855947*^9, 3.573643779195023*^9}, {3.5736441001588173`*^9, 
   3.573644105628018*^9}, {3.573644166002527*^9, 3.573644172160318*^9}, {
   3.573644206964088*^9, 3.573644216271546*^9}, {3.573644418875537*^9, 
   3.573644450188305*^9}, {3.573644481920889*^9, 3.573644510587169*^9}, {
   3.573644583295331*^9, 3.573644601726323*^9}, 3.573644632197117*^9, {
   3.573644707611713*^9, 3.573644712218139*^9}, {3.573644830759044*^9, 
   3.5736449236653023`*^9}, {3.573645044919559*^9, 3.57364507001855*^9}, {
   3.5736462721672487`*^9, 3.573646273446015*^9}, {3.573646587579767*^9, 
   3.57364659124*^9}, {3.5736466944089937`*^9, 3.573646795694895*^9}, {
   3.573646839465653*^9, 3.573646853367105*^9}, {3.573646889622406*^9, 
   3.573646895808641*^9}, {3.573654683614023*^9, 3.573654692139131*^9}, {
   3.573654832312473*^9, 3.573654849527757*^9}, {3.573654903023855*^9, 
   3.573654906829351*^9}, {3.573654953318973*^9, 3.57365507263695*^9}, {
   3.5736551423747377`*^9, 3.573655150771018*^9}, {3.573655469195318*^9, 
   3.573655474831825*^9}, {3.573655538056808*^9, 3.573655547608506*^9}, {
   3.57365558713783*^9, 3.573655650436184*^9}, {3.57365569759362*^9, 
   3.573655699633687*^9}, {3.573655770660636*^9, 3.573655915108327*^9}, {
   3.573664617146356*^9, 3.573664630355284*^9}, {3.57366622102061*^9, 
   3.5736662670291643`*^9}, {3.573666367257903*^9, 3.5736663812091*^9}, {
   3.5736667122158947`*^9, 3.573666751977158*^9}, {3.573666944551322*^9, 
   3.573666956600393*^9}, {3.762505441173924*^9, 3.762505446692592*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"75eea20f-c17f-4b05-9de6-05e70bcd18b2"],

Cell[TextData[{
 "\nAllows for replacing the vertex names in the input De Bruijn graph by \
their corresponding ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-ary representations.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nReplaceVertexNamesInEdges[{2, 1}, RuleDeBruijnGraph[184, 2, 1]]  =>  {\
\[OpenCurlyDoubleQuote]00\[CloseCurlyDoubleQuote] \[DirectedEdge] \
\[OpenCurlyDoubleQuote]00\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]00\
\[CloseCurlyDoubleQuote] \[DirectedEdge] \[OpenCurlyDoubleQuote]01\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]01\[CloseCurlyDoubleQuote] \
\[DirectedEdge] \[OpenCurlyDoubleQuote]10\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]01\[CloseCurlyDoubleQuote] \[DirectedEdge] \
\[OpenCurlyDoubleQuote]11\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]10\
\[CloseCurlyDoubleQuote] \[DirectedEdge] \[OpenCurlyDoubleQuote]00\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]10\[CloseCurlyDoubleQuote] \
\[DirectedEdge] \[OpenCurlyDoubleQuote]01\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]11\[CloseCurlyDoubleQuote] \[DirectedEdge] \
\[OpenCurlyDoubleQuote]10\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]11\
\[CloseCurlyDoubleQuote] \[DirectedEdge] \[OpenCurlyDoubleQuote]11\
\[CloseCurlyDoubleQuote]}\nReplaceVertexNamesInEdges[{2, 1}, \
RuleDeBruijnGraph[184, 2, 1], no]  =>  {1 \[DirectedEdge] 1, 1 \
\[DirectedEdge] 2, 2 \[DirectedEdge] 3, 2 \[DirectedEdge] 4, 3 \
\[DirectedEdge] 1, 3 \[DirectedEdge] 2, 4 \[DirectedEdge] 3, 4 \
\[DirectedEdge] 4}"
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.542357702727322*^9, 3.542357711631031*^9}, {3.5423583754559307`*^9, 
   3.542358614034449*^9}, {3.542358957138751*^9, 3.54235900588977*^9}, {
   3.542359244925847*^9, 3.542359273171749*^9}, {3.542359368766914*^9, 
   3.542359440948681*^9}, {3.5423594826500187`*^9, 3.5423595234567*^9}, {
   3.542360859553823*^9, 3.5423610798140993`*^9}, {3.542361119015572*^9, 
   3.542361821526494*^9}, {3.542361853616039*^9, 3.54236203737296*^9}, {
   3.542796066505355*^9, 3.5427961662104*^9}, {3.573639273561883*^9, 
   3.573639273940701*^9}, {3.573642902909677*^9, 3.573642922305438*^9}, {
   3.573646148025755*^9, 3.573646248294616*^9}, {3.573646296351508*^9, 
   3.5736464064504223`*^9}, {3.573646484994156*^9, 3.5736464872871103`*^9}, {
   3.573646913796296*^9, 3.573646990536768*^9}, {3.573666618686401*^9, 
   3.573666709719372*^9}, {3.573666763969055*^9, 3.573666886145998*^9}, {
   3.573666925741251*^9, 3.573666934706005*^9}, {3.573666985725308*^9, 
   3.573667007872177*^9}, 3.573667150920726*^9, {3.573667575284832*^9, 
   3.573667590891592*^9}, 3.573667621032174*^9, {3.573667659088214*^9, 
   3.5736676807966228`*^9}, 3.573668069390413*^9, {3.573668259845039*^9, 
   3.573668278204792*^9}, {3.573668312132585*^9, 3.573668382676483*^9}, {
   3.573668653104134*^9, 3.573668750450144*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"191c997f-66b5-4150-a36a-ebdc7d1383f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceVertexNamesInEdges", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "directedGraph_", ",", 
     RowBox[{"nameType_", ":", "bitstring"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EdgeList", "[", "directedGraph", "]"}], "/.", 
    RowBox[{"Switch", "[", 
     RowBox[{"nameType", ",", "\[IndentingNewLine]", "bitstring", ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           SuperscriptBox["k", 
            RowBox[{"\[LeftCeiling]", 
             RowBox[{"2", "r"}], "\[RightCeiling]"}]], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerString", "[", 
             RowBox[{
              RowBox[{"#", "-", "1"}], ",", "k", ",", 
              RowBox[{"\[LeftCeiling]", 
               RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            SuperscriptBox["k", 
             RowBox[{"\[LeftCeiling]", 
              RowBox[{"2", "r"}], "\[RightCeiling]"}]], "]"}]}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", "_", ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           SuperscriptBox["k", 
            RowBox[{"\[LeftCeiling]", 
             RowBox[{"2", "r"}], "\[RightCeiling]"}]], "]"}], ",", 
          RowBox[{"Range", "[", 
           SuperscriptBox["k", 
            RowBox[{"\[LeftCeiling]", 
             RowBox[{"2", "r"}], "\[RightCeiling]"}]], "]"}]}], "}"}]}], 
       "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.54305467322443*^9, 3.543054731761269*^9}, {
   3.543054771028064*^9, 3.543054895541287*^9}, 3.543054929327701*^9, {
   3.54305500266688*^9, 3.543055004211316*^9}, {3.543055118661894*^9, 
   3.5430551805505533`*^9}, {3.573667869987274*^9, 3.573667885858738*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"39ff727f-e5b7-4c4f-9e21-81233574efd0"],

Cell[TextData[{
 "\nYields the weights of the edges in the input De Bruijn graph, as defined \
by the given cycle in the graph.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nCycleToLabel[{1 \[DirectedEdge] 2, 2 \[DirectedEdge] 3, 3 \
\[DirectedEdge] 1}, RuleDeBruijnGraph[184]]  =>  {0, 0, 1}\nCycleToLabel[#, \
RuleDeBruijnGraph[184]] & /@ AllCycles[RuleDeBruijnGraph[184]]  =>  {{0}, \
{1}, {0,1}, {0,0,1}, {1,0,1}, {0,1,0,1}}"
}], "Text",
 CellChangeTimes->{{3.5405545473233433`*^9, 3.540554576558997*^9}, {
   3.542357702727322*^9, 3.542357711631031*^9}, {3.5423583754559307`*^9, 
   3.542358614034449*^9}, {3.542358957138751*^9, 3.54235900588977*^9}, {
   3.542359244925847*^9, 3.542359273171749*^9}, {3.542359368766914*^9, 
   3.542359440948681*^9}, {3.5423594826500187`*^9, 3.5423595234567*^9}, {
   3.542360859553823*^9, 3.5423610798140993`*^9}, {3.542361119015572*^9, 
   3.542361821526494*^9}, {3.542361853616039*^9, 3.54236203737296*^9}, {
   3.542796066505355*^9, 3.5427961662104*^9}, {3.573639273561883*^9, 
   3.573639273940701*^9}, {3.573642902909677*^9, 3.573642922305438*^9}, {
   3.573646148025755*^9, 3.573646248294616*^9}, {3.573646296351508*^9, 
   3.5736464064504223`*^9}, {3.573646484994156*^9, 3.5736464872871103`*^9}, {
   3.573646913796296*^9, 3.573646990536768*^9}, {3.573666618686401*^9, 
   3.573666709719372*^9}, {3.573666763969055*^9, 3.573666886145998*^9}, {
   3.573666925741251*^9, 3.573666934706005*^9}, {3.573666985725308*^9, 
   3.573667007872177*^9}, 3.573667150920726*^9, {3.573667575284832*^9, 
   3.573667590891592*^9}, 3.573667621032174*^9, {3.573667659088214*^9, 
   3.5736676807966228`*^9}, 3.573668069390413*^9, {3.573668259845039*^9, 
   3.573668304879137*^9}, 3.573668341838354*^9, {3.573668387162283*^9, 
   3.5736683969740267`*^9}, {3.573668446973185*^9, 3.573668465439448*^9}, {
   3.573668754961308*^9, 3.573668815584115*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"07ffc22d-ce39-4794-b0b9-cad32414648b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CycleToLabel", "[", 
    RowBox[{"cycle_", ",", "directedGraph_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{
       RowBox[{"WeightedAdjacencyMatrix", "[", "directedGraph", "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}]}], "&"}], "/@",
     "cycle"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.542055781054065*^9, 3.542055889304478*^9}, {
  3.542059077920271*^9, 3.542059100620811*^9}, {3.5736679433961267`*^9, 
  3.5736679466186943`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"930f2c1a-c4bf-4a68-b7c5-7d10a49a3b38"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["11. Limit behaviour", "Section",
 CellChangeTimes->{{3.5408975556926627`*^9, 3.540897556090648*^9}, {
   3.548151287093446*^9, 3.548151293859226*^9}, 3.558189177439179*^9, {
   3.722676348047948*^9, 
   3.7226763486776757`*^9}},ExpressionUUID->"ae5c279b-3f3e-4890-982c-\
71374a80202d"],

Cell[CellGroupData[{

Cell["Limit NKS networks", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489522839243*^9, 3.548151348536838*^9, {3.548160289352146*^9, 
   3.548160313837678*^9}, {3.548160364097927*^9, 
   3.548160375849277*^9}},ExpressionUUID->"f6bd5bce-ece3-4c78-a823-\
9fe8db0dbe0d"],

Cell[TextData[{
 "Adapted from the NKS book, page 957. The functions below handle the ",
 StyleBox["net",
  FontSlant->"Italic"],
 "work automaton representation used in the NKS book; a network with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " nodes is represented as {ST1, ST2, ..., STn}, where STi (for 1 \
\[LessEqual] ",
 StyleBox["i",
  FontSlant->"Italic"],
 " \[LessEqual] ",
 StyleBox["n",
  FontSlant->"Italic"],
 ") refers to the state transitions leaving node ",
 StyleBox["i",
  FontSlant->"Italic"],
 ", which have the general form {0 \[Rule] ",
 StyleBox["j",
  FontSlant->"Italic"],
 ", 1 \[Rule] ",
 StyleBox["m",
  FontSlant->"Italic"],
 "}, meaning that there\[CloseCurlyQuote]s a state transition from node ",
 StyleBox["i",
  FontSlant->"Italic"],
 "  to node ",
 StyleBox["j",
  FontSlant->"Italic"],
 " with symbol 0, and from node ",
 StyleBox["i",
  FontSlant->"Italic"],
 "  to node ",
 StyleBox["m",
  FontSlant->"Italic"],
 " with symbol 1. This type of network (a so-called ",
 StyleBox["process graph",
  FontSlant->"Italic"],
 ") is a form of representation for a finite automaton, with the \
characteristics that all nodes are final and initial states.\n",
 StyleBox["NetCAStep",
  FontWeight->"Bold"],
 ": Generates a (non-deterministic) network that represents all possible \
strings after running the given CA rule, for a single time step, on all \
possible initial configurations represented by the given input network.\n",
 StyleBox["MinNet",
  FontWeight->"Bold"],
 ": Transforms the given input network into a deterministic finite automaton, \
and then minimises it, resulting in a network where all nodes are final \
states and whose initial state is the last node (contrarily to what is \
written in the NKS book, that the initial state would be node 1).\n",
 StyleBox["TrimNet",
  FontWeight->"Bold"],
 ": Transforms the input network (assumedly, a DFA generated by MinNet) into \
an equivalent NKS network automaton representation, by trimming the DFA so \
that there is a path from every vertex to all the others. (The output is \
non-deterministic; is it really so?)\n\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nValid for any one-dimensional CAs."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAWIQPeX3FrcJ+a8c2bL2e4No8cd5DSCaa3IFmO5PZFgM
onUvXN8Eok9d2LMNRN85Nu0wiL609MhJsLpAl5sg+kqvJ8NEIP2VMYYNRC+e
v4YPRJut+SkPot+UaauC6AcvzhqA6ErvTDMQvezooUAQ/W3RpDAQ/fzh1kgQ
XcA6IRZE3w7grAbRE+Tu1YHoJ6ycDSB62zr2FhB9zm16H4iuUZ8+BURfF+PY
AKKjHnrbTQLSh/bOcgXRi+pzvUC03TtHHxC9zNUlfwaQLltVCqZ/K8msANGz
3OJWgmgGhlfHkwtA9L/TYLqBTSgFzDeA0pJiYLrhL4RmWCQLoR2VIeIvNCD8
f3oQfqjou5kgfr0EhFaThdAqqiB6Xrtcw445IPt3NIFouz+2Ct8OvnLcxP9R
EUT/a9DQyVV+6/ip0MoeRAMAd3/caQ==
  "],
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"129119a0-e75a-4d84-988c-1870ce00857c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NetCAStep", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "net_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rtab", "=", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Last", "/@", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"#", "/.", "\[InvisibleSpace]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a_", "\[Rule]", "s_"}], ")"}], "\[RuleDelayed]", 
              RowBox[{
               RowBox[{"rtab", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"i", " ", "k"}], "+", "a", "+", "1"}], 
                "\[RightDoubleBracket]"}], "\[Rule]", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["k", 
                  RowBox[{"\[VeryThinSpace]\[VeryThinSpace]", 
                   RowBox[{"2", "r"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"s", "-", "1"}], ")"}]}], "+", "1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"i", " ", "k"}], "+", "a"}], ",", 
                  SuperscriptBox["k", 
                   RowBox[{"\[VeryThinSpace]\[VeryThinSpace]", 
                    RowBox[{"2", "r"}]}]]}], "]"}]}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", 
              RowBox[{
               SuperscriptBox["k", 
                RowBox[{"\[VeryThinSpace]\[VeryThinSpace]", 
                 RowBox[{"2", "r"}]}]], "-", "1"}]}], "}"}]}], "]"}], "&"}], 
         ",", "net"}], "]"}], ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.520852965783*^9, 3.5208529670220003`*^9}, 
   3.541275121827215*^9, {3.548153581344219*^9, 3.548153614249769*^9}, {
   3.54816845729777*^9, 3.548168523927072*^9}, 3.548168652324394*^9, {
   3.746440662171341*^9, 3.746440676281926*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"6158f11e-6502-4c38-8f50-ccb06262bd63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MinNet", "[", 
    RowBox[{"net_List", ",", 
     RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"DSets", "[", 
         RowBox[{"net", ",", "k"}], "]"}]}], ",", "q", ",", "b"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "[", "d", "]"}], "=!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"AllNet", "[", "k", "]"}], ",", 
       RowBox[{
        RowBox[{"q", "=", 
         RowBox[{"IsSets", "[", 
          RowBox[{"b", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"NetStep", "[", 
                    RowBox[{"net", ",", "#", ",", "a"}], "]"}]}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "0", ",", 
                  RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], "&"}], ",", 
             "d"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", "1"}], "\[Rule]", "#1"}], "&"}], ",", 
            RowBox[{
             RowBox[{"Rest", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"q", ",", "#"}], "]"}], "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], 
                ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"Map", "[", 
                    RowBox[{"First", ",", "q"}], "]"}], 
                    "\[RightDoubleBracket]"}], "&"}], ",", 
                   RowBox[{"Transpose", "[", "b", "]"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "-", "1"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{"_", "\[Rule]", "0"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NetStep", "[", 
     RowBox[{"net_List", ",", "i_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Union", "[", 
     RowBox[{"ReplaceList", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"net", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
         "]"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllNet", "[", 
     RowBox[{"k_Integer", ":", "2"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", "k", "]"}], "-", "1"}], "\[Rule]", "1"}], "]"}],
      "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DSets", "[", 
     RowBox[{"net_List", ",", 
      RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"NetStep", "[", 
                RowBox[{"net", ",", "#", ",", "a"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "0", ",", 
                 RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], "&"}], ",", "#"}],
            "]"}], ",", "1"}], "]"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "net", "]"}], "]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IsSets", "[", "list_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"FixedPoint", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"g", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Last", ",", 
              RowBox[{"Split", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"g", ",", "#"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}],
                     ",", "list", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "list", "]"}], "]"}]}], "}"}], 
                   "]"}], "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"First", "[", "#1", "]"}], "==", 
                  RowBox[{"First", "[", "#2", "]"}]}], "&"}]}], "]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], "&"}], ",", "g"}], "]"}], ",",
          "1"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Length", "[", "list", "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.541275053329323*^9, 3.54127508775389*^9}, {
  3.548153592911639*^9, 3.5481536259740543`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"783b9ee7-e525-42aa-9f0c-94c8b0a9d550"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrimNet", "[", "net_List", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"Intersection", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FixedPoint", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Union", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{"Last", ",", 
                    RowBox[{
                    "net", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "]"}], "&"}], 
              ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"List", ",", 
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "net", "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"net", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], "/.",
       "\[InvisibleSpace]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a_", "\[Rule]", 
           RowBox[{
           "m", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          ")"}], "\[Rule]", 
         RowBox[{"a", "\[Rule]", "i"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "m", "]"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.541275070163269*^9, 3.541275081356883*^9}, 
   3.548153629757489*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"e004f508-ee0a-4767-a259-a58a03957a3b"],

Cell[TextData[{
 "\n",
 StyleBox["VariousNetSteps",
  FontSlant->"Italic"],
 " yields the minimum process graph automaton that represents all possible \
binary configurations that can be found after each of the given number of \
time steps, in the temporal evolution of the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-state, radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", one-dimensional CA rule represented by the rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", from all possible initial conditions represented by ",
 StyleBox["netin",
  FontSlant->"Italic"],
 ". The initial condition {{0\[Rule]1, 1\[Rule]1}} represents all possible \
binary sequences."
}], "Text",
 CellChangeTimes->{
  3.54816033591453*^9, {3.54816823993679*^9, 3.548168309019068*^9}, {
   3.54858569575*^9, 3.548585699703125*^9}, {3.548586485765625*^9, 
   3.548586486421875*^9}, {3.54858663440625*^9, 3.548586637734375*^9}, {
   3.5485866905*^9, 3.548586694078125*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"96b26117-ed64-40d3-8d74-da4bdbaac227"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VariousNetSteps", "[", 
    RowBox[{
     RowBox[{"steps_Integer", ":", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum_", ",", "k_", ",", "r_"}], "}"}], ",", 
     RowBox[{"netin_List", ":", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[Rule]", "1"}], ",", 
         RowBox[{"1", "\[Rule]", "1"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"runTrimNet_Symbol", ":", " ", "on"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"runTrimNet", "===", "on"}], ",", 
       RowBox[{"TrimNet", "[", 
        RowBox[{"MinNet", "[", "#", "]"}], "]"}], ",", 
       RowBox[{"MinNet", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NetCAStep", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#"}], "]"}], 
       "&"}], ",", "netin", ",", "steps"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.548585432296875*^9, 3.548585432296875*^9}, 
   3.548585637546875*^9, {3.548585763890625*^9, 3.54858577234375*^9}, 
   3.548586010953125*^9, 3.54858642071875*^9, {3.54861784690675*^9, 
   3.548617847440061*^9}, {3.54862142596614*^9, 3.548621434749436*^9}, {
   3.699871010632477*^9, 3.6998710215338707`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"a65d61bd-2c94-49e1-9643-e002f6be4252"],

Cell[TextData[{
 "\nThis is my version of NetCAStep, where any time step is associated with \
the same input network {{0\[Rule]1}, {1\[Rule]1}}, and the starting net for \
any time step is the DeBruijn graph of the corresponding size, defined by \
argument ",
 StyleBox["timesteps",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\n1) In fact, myNetCAStep is already an iterated version of NetCAStep, in \
that the last argument is already the number of time steps.\n2) By \
definition, myNetCAStep is not as general as NetCAStep (as it doesn\
\[CloseCurlyQuote]t take an arbitrary input network), and not as compact \
(since it always generate the DeBruijn graph at the corresponding time step).\
\n3) It is yet to be seen which of the two versions is the most efficient. I \
suspect there might be input conditions where they would differ. One test \
could be to obtain TrimNet@MinNet for 2 time steps for ECA rules 86 and 149, \
which is very hard for NetCAStep; although it is also hard for myNetCAStep, I \
don\[CloseCurlyQuote]t know yet ",
 StyleBox["how",
  FontWeight->"Bold"],
 " hard."
}], "Text",
 CellChangeTimes->{
  3.54816033591453*^9, {3.54816823993679*^9, 3.548168309019068*^9}, {
   3.54858569575*^9, 3.548585699703125*^9}, {3.548586485765625*^9, 
   3.548586486421875*^9}, {3.54858663440625*^9, 3.548586637734375*^9}, {
   3.5485866905*^9, 3.548586694078125*^9}, {3.571827564125771*^9, 
   3.5718276798428493`*^9}, {3.5718277479217587`*^9, 3.571828029966174*^9}, {
   3.5718280636512938`*^9, 3.571828459184473*^9}, 3.6994540436797037`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6826cfb2-42bf-445d-b859-d54c98ff1c16"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"myNetCAStep", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "timesteps_Integer"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"RuleDeBruijnGraphToNKSNet", "[", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"CompositeRule", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rnum", ",", "r"}], "}"}], ",", 
          RowBox[{"{", "timesteps", "}"}]}], "]"}], ",", "k"}], "]"}]}], ",", 
     "k", ",", 
     RowBox[{"r", " ", "timesteps"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.571827135650073*^9, 3.571827135993305*^9}, 
   3.571827550941732*^9, {3.575915832990259*^9, 3.575915865792813*^9}, {
   3.577133680648952*^9, 3.577133682589702*^9}, {3.69987102585535*^9, 
   3.699871041761269*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"b49443b5-3a1c-47b6-8bca-aecfcc61b32e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Conversion of NKS networks to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " graph objects"
}], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489522839243*^9, 3.548151348536838*^9, 3.548151392731102*^9, {
   3.548151431191182*^9, 3.548151505910047*^9}, {3.548152578113755*^9, 
   3.548152633040258*^9}, {3.548160391896924*^9, 
   3.548160398696676*^9}},ExpressionUUID->"7f06bb0d-bfc3-42de-a48f-\
e77db0ca5b98"],

Cell[TextData[{
 "Takes a list of nodes and edges that defines a ",
 StyleBox["net",
  FontSlant->"Italic"],
 "work automaton in the NKS book (which has the form of a list of state \
transitions), and generates its corresponding representation as a ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "graph object. The advantage of this conversion is that the graph can be \
directly manipulated with all the native graph operators. In the particular \
case when the network refers to a DFA (where the last element in the net list \
corresponds to the initial state of the DFA), the function \
\[OpenCurlyQuote]inverts\[CloseCurlyQuote] the network nodes, so that node #1 \
becomes the initial state, and then differentiates the initial state of the \
DFA with the symbol \[GrayCircle], while the others are represented with the \
symbol \[EmptyCircle]. Argument ",
 StyleBox["nodeNumbers",
  FontSlant->"Italic"],
 " toggles the display of the vertex labels; by default, ",
 StyleBox["nodeNumbers ",
  FontSlant->"Italic"],
 "=off.\n\nThe option ",
 StyleBox["graphType=subgraphs",
  FontSlant->"Italic"],
 " allows to generate subgraphs of the input network, grouped into ",
 StyleBox["nodeGroupSize",
  FontSlant->"Italic"],
 " nodes, where ",
 StyleBox["nodeGroupSize",
  FontSlant->"Italic"],
 " has to allow an exact partition of the amount of nodes in the original \
net. This allows to plot the subgraphs while preserving their internal \
structure, i.e., the original node names of the input net.\n\n",
 StyleBox["NKSNetToMathematicaGraph",
  FontSlant->"Italic"],
 " does the same as the (commented out) ",
 StyleBox["oldNKSNetToMathematicaGraph",
  FontSlant->"Italic"],
 " function below does; since at that time (version 8.0) the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function Graph was unable to handle multigraphs (i.e., those where \
multiple edges link two nodes), I had to implement a workaround, which is \
embedded in oldNKSNetToMathematicaGraph. This is done by creating a new \
(dummy) node, whenever multiple links would be needed: the new node receives \
the link normally from the original node and links back to it with the empty \
string (\[Epsilon]), coloured in green. New nodes are created as many as \
required, numbered from 1 up, while the node numbers of the existing nodes \
are renumbered, by increasing the original numbers by the quantity of new \
nodes created.\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nNKSNetToMathematicaGraph[{{0\[Rule]1,1\[Rule]1}}, net, off]\n\
NKSNetToMathematicaGraph[{{0\[Rule]1,1\[Rule]2}, , {0\[Rule]2,1\[Rule]4}}, \
net, on]\nNKSNetToMathematicaGraph[NetCAStep[{184,2,1}, \
{{0\[Rule]1,1\[Rule]1}}], net, off]\nNKSNetToMathematicaGraph[{{0\[Rule]3}, \
{0\[Rule]1,1\[Rule]1}, {0\[Rule]3,1\[Rule]2}}, , on]\n\
NKSNetToMathematicaGraph[{{0\[Rule]3}, {0\[Rule]1,1\[Rule]1}, {0\[Rule]3,1\
\[Rule]2}}, , on, {subgraphs, 1}]\nNKSNetToMathematicaGraph[{{0\[Rule]3}, {0\
\[Rule]1,1\[Rule]1}, {0\[Rule]3,1\[Rule]2}}, DFA]\n\
NKSNetToMathematicaGraph[VariousNetSteps[3, {184, 2, 1}, \
{{0\[Rule]1,1\[Rule]1}}]]\n\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) Currently valid only for binary, one-dimensional CAs, with ",
 StyleBox["k",
  FontSlant->"Italic"],
 " \[LessEqual] 3. For larger values of ",
 StyleBox["k",
  FontSlant->"Italic"],
 " it is required to add new colours to the graph edges.\n2) Variable ",
 StyleBox["numberOfNewNodes",
  FontSlant->"Italic"],
 " refers to the new nodes that have to be added to the graph because of the \
\[Epsilon] transitions.\n3) Variable ",
 StyleBox["multiSTs",
  FontSlant->"Italic"],
 " refers to the set of state transitions pairs that leave the same node ",
 StyleBox["i",
  FontSlant->"Italic"],
 " and arrive at the same node j,  i.e., of the form: {{bit1\[Rule]node_j}, \
{bit2\[Rule]node_j}}.\n4) In order to plot the subgraphs (with the ",
 StyleBox["graphType",
  FontSlant->"Italic"],
 " option), each group of nodes is picked out from the original net and a new \
net is created, filling the vacant nodes with {}-nodes.\n5) A node with no \
state transition out of it can be specified in the input net by {}, or by \
simply omitting it; e.g.: {{0\[Rule]1,1\[Rule]2}, {}, {0\[Rule]2,1\[Rule]4}} \
or {{0\[Rule]1,1\[Rule]2}, , {0\[Rule]2,1\[Rule]4}} or \
{{0\[Rule]1,1\[Rule]2}, Null, {0\[Rule]2,1\[Rule]4}}. Note: Out of the these \
3 cases, NetCAStep presently only handles the first one."
}], "Text",
 CellChangeTimes->{{3.546968614704134*^9, 3.546968814133985*^9}, {
   3.546968916517905*^9, 3.546969471077551*^9}, {3.547637598419899*^9, 
   3.54763762519057*^9}, {3.5476376998452067`*^9, 3.547637720506849*^9}, {
   3.547637863823081*^9, 3.547637991066338*^9}, {3.5476380282473*^9, 
   3.547638365354826*^9}, {3.547638402347324*^9, 3.547638459848651*^9}, {
   3.547638492639459*^9, 3.547638493213833*^9}, {3.547638526907015*^9, 
   3.547638572168349*^9}, {3.548150926950512*^9, 3.5481509368380117`*^9}, {
   3.548150969316506*^9, 3.548150975028982*^9}, {3.548151019604102*^9, 
   3.548151098871868*^9}, {3.548153693207559*^9, 3.548153738335263*^9}, {
   3.548170267624088*^9, 3.548170362230725*^9}, {3.548171687622864*^9, 
   3.548171770233326*^9}, {3.5698385805554457`*^9, 3.569838602535443*^9}, {
   3.57036473440625*^9, 3.570364794546875*^9}, {3.57037659440625*^9, 
   3.5703766336875*^9}, {3.570445230252351*^9, 3.570445267785345*^9}, {
   3.570447070848815*^9, 3.570447193787978*^9}, {3.57044722826958*^9, 
   3.570447268238509*^9}, {3.570447303855426*^9, 3.570447440917593*^9}, {
   3.570447475767901*^9, 3.570447501830701*^9}, {3.571073028587906*^9, 
   3.571073069467589*^9}, {3.571073130484792*^9, 3.571073482337077*^9}, {
   3.571073548242024*^9, 3.5710735744803658`*^9}, {3.571073618448505*^9, 
   3.571073619624766*^9}, {3.571073770358244*^9, 3.571073960506695*^9}, {
   3.571074330740141*^9, 3.571074561652479*^9}, {3.571077783776571*^9, 
   3.57107800954487*^9}, {3.5710780800988398`*^9, 3.57107818227062*^9}, {
   3.5710850108811274`*^9, 3.571085013766293*^9}, {3.571085164318407*^9, 
   3.571085532714552*^9}, {3.571085568417694*^9, 3.57108558527276*^9}, {
   3.576064414625515*^9, 3.576064455323307*^9}, {3.5760645224283338`*^9, 
   3.5760647344625797`*^9}, {3.576064769410425*^9, 3.576064793257438*^9}, 
   3.576065134012149*^9, {3.576065199721282*^9, 3.576065265085732*^9}, 
   3.699453811887713*^9, {3.69945386432205*^9, 3.69945387867712*^9}, {
   3.81074750565952*^9, 3.8107475234591284`*^9}, {3.810747605345607*^9, 
   3.810747639063671*^9}, {3.875279852193872*^9, 3.8752798525878143`*^9}, {
   3.901976525001668*^9, 3.901976621644685*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"28ed8a87-e471-4cbd-b35b-70057dc638ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NKSNetToMathematicaGraph", "[", 
     RowBox[{"inNKSnet_", ",", 
      RowBox[{"netType_Symbol", ":", "net"}], ",", 
      RowBox[{"nodeNumbers_Symbol", ":", "off"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"graphType_Symbol", ":", "subgraphs"}], ",", 
        RowBox[{"nodeGroupSize_Integer", ":", "1"}]}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NKSnet", "=", 
        RowBox[{"inNKSnet", "/.", 
         RowBox[{"Null", "\[Rule]", 
          RowBox[{"{", "}"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NKSNetToMathematicaGraph", "[", 
         RowBox[{"#", ",", "netType", ",", "nodeNumbers"}], "]"}], "&"}], "/@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "#1", "}"}]}], "]"}], ",", "#2", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "#3", "}"}]}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Length", "[", "NKSnet", "]"}], "-", "1"}], ",", 
             "nodeGroupSize"}], "]"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"NKSnet", ",", "nodeGroupSize"}], "]"}], ",", 
           RowBox[{"Reverse", "@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"Length", "[", "NKSnet", "]"}], "-", "1"}], ",", 
              "nodeGroupSize"}], "]"}]}]}], "}"}]}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NKSNetToMathematicaGraph", "[", 
     RowBox[{
      RowBox[{"netType_Symbol", ":", "DFA"}], ",", "inNKSnet_"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NKSnet", "=", 
         RowBox[{"inNKSnet", "/.", 
          RowBox[{"Null", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], ",", "auxnet", ",", "vertexLabels"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"auxnet", " ", "=", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"sts", "=", "#1"}], ",", 
                 RowBox[{"node", "=", 
                  RowBox[{
                  "#2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"node", "\[DirectedEdge]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}], "/@", 
                "sts"}]}], "]"}], "&"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"netType", "===", "DFA"}], ",", 
              RowBox[{"InvertNKSNet", "[", "NKSnet", "]"}], ",", "NKSnet"}], 
             "]"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
       RowBox[{"vertexLabels", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "\[Rule]", "#"}], ")"}], "&"}], "[", 
          RowBox[{"Union", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"List", ",", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "]"}], "&"}], "/@", "auxnet"}], "]"}], "]"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "===", "0"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Red"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "Black"}], "]"}]}], "]"}], "&"}], "/@", "auxnet"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexLabels", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"nodeNumbers", "===", "on"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Rule]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", "Bold"}], "]"}]}], ")"}], "&"}], "/@", 
             "vertexLabels"}], ",", "Automatic"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexShape", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"netType", "===", "DFA"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"i", "\[Rule]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "==", "1"}], ",", "\[GrayCircle]", ",", 
                 "\[EmptyCircle]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "NKSnet", "]"}]}], "}"}]}], "]"}], ",",
             "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeWeight", "\[Rule]", "auxnet"}]}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InvertNKSNet", "[", "NKSnet_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Reverse", "@", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodes", "=", 
        RowBox[{"Range", "@", 
         RowBox[{"Length", "[", "NKSnet", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[Rule]", 
             RowBox[{"ReplaceAll", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"nodes", ",", 
                   RowBox[{"Reverse", "@", "nodes"}]}], "}"}]}], "]"}]}], 
              "]"}]}], ")"}], "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
       "NKSnet"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oldNKSNetToMathematicaGraph", "[", 
      RowBox[{"inNKSnet_", ",", 
       RowBox[{"netType_Symbol", ":", "net"}], ",", 
       RowBox[{"nodeNumbers_Symbol", ":", "off"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NKSnet", "=", 
          RowBox[{"inNKSnet", "/.", 
           RowBox[{"Null", "\[Rule]", 
            RowBox[{"{", "}"}]}]}]}], ",", "numberOfNewNodes", ",", 
         "graphNumberOfNodes", ",", "NKSnetWithLargerNodeNumbers", ",", 
         "standardSTs", ",", "multiSTs", ",", "newNet", ",", "vertexLabels"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"numberOfNewNodes", "=", 
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Last", "/@", "#"}], ")"}], "&"}], "/@", "NKSnet"}], 
           ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "x", "]"}], ">", "1"}], "\[And]", 
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"Union", "[", "x", "]"}]}], "\[Equal]", "1"}]}], 
             ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"graphNumberOfNodes", "=", 
         RowBox[{
          RowBox[{"Length", "[", "NKSnet", "]"}], "+", "numberOfNewNodes"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"NKSnetWithLargerNodeNumbers", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", "numberOfNewNodes"}], ",", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"STs", "=", "#1"}], "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "numberOfNewNodes"}]}], 
                   ")"}], "&"}], "/@", "STs"}]}], "]"}]}], "}"}], "&"}], ",", 
           "NKSnet"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{"numberOfNewNodes", ",", "\[IndentingNewLine]", 
            RowBox[{"Length", "[", "NKSnet", "]"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"standardSTs", ",", "multiSTs"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", "0", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"standardSTs", ",", "multiSTs"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"{", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", "_",
             ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"standardSTs", ",", "multiSTs"}], "}"}], "=", "#"}]}], 
           "]"}], "&"}], "[", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"NKSnetWithLargerNodeNumbers", ",", 
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"toNodes", "=", 
                RowBox[{"Last", "/@", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "toNodes", "]"}], ">", "1"}], "\[And]", 
               RowBox[{
                RowBox[{"Length", "@", 
                 RowBox[{"Union", "[", "toNodes", "]"}]}], "==", "1"}]}]}], 
             "]"}], "&"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"newNet", "=", 
         RowBox[{"Sort", "@", "\[IndentingNewLine]", 
          RowBox[{"Switch", "[", 
           RowBox[{"numberOfNewNodes", ",", "\[IndentingNewLine]", 
            RowBox[{"Length", "[", "NKSnet", "]"}], ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", 
                   RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", "#2"}], 
                   "\[Rule]", 
                   RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{
                   RowBox[{"#2", "\[DirectedEdge]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", "\[Epsilon]"}]}], 
                 "}"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"multiSTs", ",", 
                 RowBox[{"Range", "[", "numberOfNewNodes", "]"}]}], "}"}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", "0", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sequence", "@@", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"sts", "=", "#"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "sts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}], "/@", 
                  RowBox[{
                  "sts", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "]"}]}], "&"}], "/@", 
             "standardSTs"}], ",", "\[IndentingNewLine]", "_", ",", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Sequence", "@@", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", "#2"}], 
                    "\[Rule]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"#2", "\[DirectedEdge]", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", "\[Epsilon]"}]}], 
                   "}"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"multiSTs", ",", 
                   RowBox[{"Range", "[", "numberOfNewNodes", "]"}]}], "}"}]}],
                 "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Module", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"sts", "=", "#"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "sts", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[DirectedEdge]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[Rule]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}], "/@", 
                    RowBox[{
                    "sts", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], "&"}], "/@", 
               "standardSTs"}]}], "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newNet", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"netType", "===", "DFA"}], ",", 
           RowBox[{"oldInvertNKSNet", "[", 
            RowBox[{"newNet", ",", "graphNumberOfNodes"}], "]"}], ",", 
           "newNet"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vertexLabels", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", "#"}], ")"}], "&"}], "[", 
           RowBox[{"Union", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"List", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], "&"}], "/@", "newNet"}],
              "]"}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Switch", "[", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "0", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "Red"}], "]"}], ",", "1", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "Black"}], "]"}], ",", "\[Epsilon]", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "Green"}], "]"}], ",", "2", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "Orange"}], "]"}], ",", "_", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "Magenta"}], "]"}]}], "]"}], "&"}], "/@", "newNet"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"VertexLabels", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"nodeNumbers", "===", "on"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "\[Rule]", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "Bold"}], "]"}]}], ")"}], 
               "&"}], "/@", "vertexLabels"}], ",", "Automatic"}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"VertexShape", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"netType", "===", "DFA"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"i", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], ",", "\[GrayCircle]", ",", 
                  "\[EmptyCircle]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "graphNumberOfNodes"}], "}"}]}], "]"}], ",",
              "Automatic"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeWeight", "\[Rule]", "newNet"}]}], "]"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"oldInvertNKSNet", "[", 
      RowBox[{"newNet_", ",", "graphNumberOfNodes_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "@", "graphNumberOfNodes"}], ",", 
               RowBox[{"Reverse", "@", 
                RowBox[{"Range", "@", "graphNumberOfNodes"}]}]}], "}"}]}], 
            "]"}]}], "]"}], "\[Rule]", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ")"}],
        "&"}], "/@", "newNet"}]}], ";"}], "\[IndentingNewLine]", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.546964939060585*^9, 3.546964947507582*^9}, {
   3.546965140952452*^9, 3.546965159290557*^9}, {3.5469652302360783`*^9, 
   3.546965231441996*^9}, {3.546965547526803*^9, 3.5469655628301477`*^9}, {
   3.5469656065167828`*^9, 3.546965730373522*^9}, {3.546965808859957*^9, 
   3.546965812450268*^9}, {3.54696584734382*^9, 3.546965851735983*^9}, {
   3.546966851128477*^9, 3.546966855471754*^9}, {3.546966920165288*^9, 
   3.546966923503818*^9}, {3.547548412421605*^9, 3.547548470958539*^9}, {
   3.547548511210742*^9, 3.547548543156979*^9}, {3.547548579093107*^9, 
   3.547548621477689*^9}, {3.547548664081184*^9, 3.547548667184105*^9}, {
   3.547548983658579*^9, 3.547548990723798*^9}, {3.547549092922522*^9, 
   3.5475491070839653`*^9}, {3.547549423034936*^9, 3.547549477853664*^9}, {
   3.547549604118778*^9, 3.54754969681607*^9}, {3.5475497403432493`*^9, 
   3.547549745357235*^9}, {3.547549887700202*^9, 3.547549969956172*^9}, {
   3.5475501935835123`*^9, 3.547550194758254*^9}, {3.547550720698799*^9, 
   3.547550825222754*^9}, {3.547550903790573*^9, 3.547550915541377*^9}, {
   3.547551086862245*^9, 3.54755112410654*^9}, {3.547551600509801*^9, 
   3.5475516335741587`*^9}, {3.547551712747428*^9, 3.547551746097883*^9}, {
   3.547552197698881*^9, 3.547552275110332*^9}, {3.5475523474034*^9, 
   3.547552367933957*^9}, {3.547552543990067*^9, 3.547552567160446*^9}, {
   3.5475526340433283`*^9, 3.54755267949942*^9}, {3.54755271699836*^9, 
   3.547552743113172*^9}, {3.547553118665545*^9, 3.547553128656751*^9}, {
   3.547564750346309*^9, 3.547564785698245*^9}, 3.547564937489229*^9, {
   3.5475649956991053`*^9, 3.547565003358083*^9}, {3.547565225799999*^9, 
   3.547565229184317*^9}, 3.547565266814555*^9, 3.547567215323182*^9, {
   3.547567351411489*^9, 3.547567389575975*^9}, {3.547567497939417*^9, 
   3.5475675047083282`*^9}, {3.547567595109435*^9, 3.547567600024269*^9}, {
   3.5475678230800657`*^9, 3.547567836045256*^9}, {3.5475678821898746`*^9, 
   3.547567884204979*^9}, {3.547567924721183*^9, 3.547567981362214*^9}, {
   3.547568715814851*^9, 3.547568831124004*^9}, 3.547568870846951*^9, {
   3.5475689646117787`*^9, 3.54756898381048*^9}, {3.547569014697379*^9, 
   3.547569024287158*^9}, {3.547569054772333*^9, 3.5475690733666697`*^9}, {
   3.54762966697103*^9, 3.547629693113729*^9}, 3.547630827853406*^9, {
   3.547630870041541*^9, 3.547630920704695*^9}, {3.547630969917628*^9, 
   3.547630975246558*^9}, {3.547631007258982*^9, 3.547631009082269*^9}, {
   3.547631070414771*^9, 3.547631138503022*^9}, {3.5476311946384497`*^9, 
   3.547631226567327*^9}, 3.547631291188315*^9, {3.547631662052235*^9, 
   3.547631681566942*^9}, {3.547631748929276*^9, 3.547631776122273*^9}, {
   3.547631995981839*^9, 3.547632002423332*^9}, {3.547633701426581*^9, 
   3.5476337093593206`*^9}, {3.547633746600788*^9, 3.547633819430718*^9}, {
   3.547633880060047*^9, 3.547633885940603*^9}, {3.54763402700313*^9, 
   3.54763404338301*^9}, {3.547634281031373*^9, 3.547634304754451*^9}, {
   3.547634458989887*^9, 3.547634469796055*^9}, {3.547634594072051*^9, 
   3.547634607791822*^9}, {3.547634976618935*^9, 3.547635004634816*^9}, {
   3.54763538370132*^9, 3.547635388418*^9}, 3.5476355500813956`*^9, {
   3.547637671057077*^9, 3.547637691382443*^9}, {3.5481691702327642`*^9, 
   3.548169175454177*^9}, {3.548169207248225*^9, 3.548169300005803*^9}, 
   3.5703654689375*^9, {3.570365502671875*^9, 3.57036553065625*^9}, {
   3.57036570284375*^9, 3.57036571059375*^9}, {3.570365816765625*^9, 
   3.570365844078125*^9}, {3.570370404296875*^9, 3.570370450171875*^9}, {
   3.57037050890625*^9, 3.5703705093125*^9}, {3.57037066465625*^9, 
   3.57037067075*^9}, {3.570371007640625*^9, 3.570371015703125*^9}, {
   3.570371059265625*^9, 3.570371132484375*^9}, {3.570371276046875*^9, 
   3.570371291203125*^9}, {3.570375998109375*^9, 3.57037601709375*^9}, 
   3.57037610371875*^9, {3.570379477578125*^9, 3.57037948253125*^9}, {
   3.57037955646875*^9, 3.57037962065625*^9}, {3.570379669140625*^9, 
   3.570379695109375*^9}, {3.570383030375*^9, 3.5703830346875*^9}, {
   3.570383091421875*^9, 3.570383095109375*^9}, {3.5704428289195547`*^9, 
   3.570442830307337*^9}, {3.5704436265569897`*^9, 3.570443627854028*^9}, {
   3.570443770468404*^9, 3.570443781555453*^9}, {3.570443849920337*^9, 
   3.5704438537839108`*^9}, {3.570443941270021*^9, 3.5704439430966377`*^9}, {
   3.570444151016805*^9, 3.570444152539839*^9}, {3.570444850763441*^9, 
   3.5704448520531588`*^9}, {3.570454050959464*^9, 3.570454119310046*^9}, {
   3.570454837282867*^9, 3.570454915171567*^9}, {3.570454977847944*^9, 
   3.5704549902299747`*^9}, {3.570455036394087*^9, 3.570455057244503*^9}, {
   3.570455091809943*^9, 3.570455101765415*^9}, 3.570456039304682*^9, {
   3.570456220809297*^9, 3.57045625088769*^9}, {3.570456336421178*^9, 
   3.570456366277383*^9}, {3.570456422067092*^9, 3.570456424445983*^9}, {
   3.570456759536547*^9, 3.570456764951897*^9}, {3.57045710777908*^9, 
   3.570457154978281*^9}, 3.570457185666494*^9, 3.570457793288155*^9, {
   3.57045782840016*^9, 3.570457832731518*^9}, {3.57045795830896*^9, 
   3.5704579649622307`*^9}, {3.570457998706593*^9, 3.570458005032027*^9}, {
   3.570463504475501*^9, 3.5704635167285137`*^9}, 3.57046360260268*^9, 
   3.570463743593274*^9, {3.570463875395542*^9, 3.570463950661493*^9}, {
   3.570463985433039*^9, 3.570463991785175*^9}, {3.570464316937808*^9, 
   3.570464338730977*^9}, 3.570464384862013*^9, {3.570464428534409*^9, 
   3.57046445653391*^9}, {3.570464488039356*^9, 3.5704644892069607`*^9}, {
   3.570464524841339*^9, 3.570464549979331*^9}, {3.570464613497198*^9, 
   3.570464639690119*^9}, {3.5704653550126133`*^9, 3.570465358798523*^9}, {
   3.570465556068095*^9, 3.570465559968096*^9}, 3.570465789175741*^9, {
   3.570465841363937*^9, 3.570465846268832*^9}, {3.570465979999617*^9, 
   3.570466100215311*^9}, {3.570466288716607*^9, 3.5704662905639668`*^9}, {
   3.5704668840163813`*^9, 3.570466885168857*^9}, {3.571072953212981*^9, 
   3.571072956517016*^9}, {3.5710731118109283`*^9, 3.571073115727397*^9}, {
   3.571073720433256*^9, 3.571073724093075*^9}, {3.571076715407337*^9, 
   3.571076755406409*^9}, {3.571076800779817*^9, 3.571076801776775*^9}, {
   3.571077514996141*^9, 3.57107752557495*^9}, 3.571077655396289*^9, {
   3.571078022150783*^9, 3.5710780288316097`*^9}, {3.5710780677319*^9, 
   3.571078073692369*^9}, {3.571084860517919*^9, 3.571084910668655*^9}, {
   3.576063908612948*^9, 3.576063913806576*^9}, {3.576063973831875*^9, 
   3.576063998209475*^9}, {3.576064037830975*^9, 3.576064039111788*^9}, {
   3.576064098560339*^9, 3.576064159695188*^9}, {3.810743879435849*^9, 
   3.81074389007606*^9}, 3.810744000881558*^9, {3.810747445053135*^9, 
   3.810747493057561*^9}, {3.875260094439378*^9, 3.875260111138309*^9}, {
   3.87526018783258*^9, 3.875260192278013*^9}, {3.875260314771469*^9, 
   3.875260349855598*^9}, {3.8752603859961023`*^9, 3.875260386231618*^9}, {
   3.875260534132724*^9, 3.8752605415940228`*^9}, {3.901976419322179*^9, 
   3.9019764972377253`*^9}, {3.901976631282978*^9, 3.901976635190885*^9}, 
   3.9019769132014637`*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"f74508d4-2377-4327-bd15-faecf1698a1a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
12. Cyclic configurations: preimages, cycles and other features\
\>", "Section",
 CellChangeTimes->{{3.490377607359688*^9, 3.490377615926688*^9}, {
   3.4961621858290834`*^9, 3.496162187684085*^9}, 3.498406753979294*^9, {
   3.529165548160932*^9, 3.529165555615038*^9}, {3.529165639560487*^9, 
   3.529165640160753*^9}, {3.529165670848898*^9, 3.529165674999868*^9}, {
   3.529165947250918*^9, 3.529165952689978*^9}, {3.530556616512474*^9, 
   3.530556617951312*^9}, {3.7226763542470493`*^9, 
   3.722676355056639*^9}},ExpressionUUID->"9c47fcce-3fd7-4b05-8689-\
c8b25934f518"],

Cell[CellGroupData[{

Cell["Neighbourhood extraction", "Subsection",
 CellChangeTimes->{{3.525090247814*^9, 3.52509031753*^9}, {3.525111934762*^9, 
   3.525111958756*^9}, {3.5256317789640007`*^9, 3.525631784725*^9}, 
   3.525633733135*^9, {3.525633787442*^9, 3.525633804764*^9}, {
   3.525633844078*^9, 3.525633976487*^9}, {3.525812028786763*^9, 
   3.525812132138025*^9}, {3.526319250419594*^9, 3.526319258704414*^9}, {
   3.52632443200406*^9, 3.526324447695825*^9}, {3.526325667895941*^9, 
   3.526325669439406*^9}, {3.5263258195480967`*^9, 3.526325820952787*^9}, {
   3.526918048035894*^9, 3.526918050012686*^9}, {3.5269185705252733`*^9, 
   3.5269185853961077`*^9}, {3.526918640822937*^9, 3.526918965915317*^9}, {
   3.526919066482208*^9, 3.526919102358965*^9}, 3.526919140658497*^9, {
   3.527249701205185*^9, 3.527249705995162*^9}, 3.529165514703816*^9, {
   3.5291655979193177`*^9, 3.529165622550497*^9}, 
   3.529165687092479*^9},ExpressionUUID->"9fea9932-45ab-45d5-83f6-\
3c179bbc2cb6"],

Cell[TextData[{
 "Extracts all radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " neighbourhood configurations present in ",
 StyleBox["config",
  FontSlant->"Italic"],
 ". For asymmetrical neighbourhood, it\[CloseCurlyQuote]s assumed the \
reference cell is the one at the position \[LeftFloor]r\[RightFloor]+1 of the \
neighbourhood.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nExtractAllNeighbourhoods[{a, b, c, d, e}, 1]   ===>  {{e, a, b}, {a, b, \
c}, {b, c, d}, {c, d, e}, {d, e, a}}\nExtractAllNeighbourhoods[{a, b, c, d, \
e}, 0.5]  ==>   {{a, b}, {b, c}, {c, d}, {d, e}, {e, a}}"
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.5272514687201576`*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.527530422561829*^9, 3.527530605275231*^9}, {3.527530658539493*^9, 
   3.527530673257926*^9}, {3.528040699124916*^9, 3.528040703862265*^9}, 
   3.52910709289077*^9, {3.529107127440781*^9, 3.529107193910263*^9}, {
   3.52910736704247*^9, 3.529107386336336*^9}, 3.5291085948218803`*^9, {
   3.529108982779132*^9, 3.5291090120022182`*^9}, {3.529109155419621*^9, 
   3.529109173289198*^9}, {3.529109284426951*^9, 3.529109304895588*^9}, 
   3.529109355816094*^9, {3.5291099756629143`*^9, 3.529109982902405*^9}, {
   3.529110033855473*^9, 3.529110034805585*^9}, 3.8739835355935087`*^9, 
   3.873983627285016*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"5f57b024-2f9b-4627-945b-047352ce3e5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAllNeighbourhoods", "[", 
    RowBox[{"config_List", ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "extendedConfig", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"extendedConfig", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"config", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "config", ",", 
         RowBox[{"Take", "[", 
          RowBox[{"config", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"extendedConfig", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"#", "+", 
             RowBox[{"\[LeftCeiling]", 
              RowBox[{"2", "r"}], "\[RightCeiling]"}]}]}], "}"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"Length", "[", "extendedConfig", "]"}], "-", 
         RowBox[{"\[LeftCeiling]", 
          RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.529099119011828*^9, {3.529099520497191*^9, 3.5290995294443274`*^9}, 
   3.529099577375859*^9, {3.529099610576396*^9, 3.529099661080415*^9}, {
   3.52909970571958*^9, 3.529099717344805*^9}, {3.529099788364652*^9, 
   3.529099813061447*^9}, {3.529099862783408*^9, 3.529099927461851*^9}, {
   3.52910004212936*^9, 3.529100054939792*^9}, 3.529100135216682*^9, {
   3.529100251707266*^9, 3.529100253901401*^9}, {3.529100391617851*^9, 
   3.529100411996148*^9}, {3.529103686321274*^9, 3.529103689087997*^9}, {
   3.52910588391831*^9, 3.5291058845087347`*^9}, {3.529105940092909*^9, 
   3.529106088406139*^9}, {3.529106122546547*^9, 3.529106148905701*^9}, {
   3.529106271048705*^9, 3.529106327634217*^9}, {3.529107738957905*^9, 
   3.529107747353865*^9}, {3.52910781263452*^9, 3.529107812818118*^9}, {
   3.529107858736194*^9, 3.529107861455946*^9}, {3.5291079372648277`*^9, 
   3.529107946624798*^9}, {3.529108020313459*^9, 3.5291080289335833`*^9}, {
   3.52910806699445*^9, 3.5291080690411787`*^9}, {3.529108109519265*^9, 
   3.52910811551014*^9}, {3.529108174408255*^9, 3.529108185735231*^9}, {
   3.529108322677192*^9, 3.529108328285178*^9}, {3.5291083792974043`*^9, 
   3.5291083794892263`*^9}, {3.529108508039138*^9, 3.529108519437646*^9}, {
   3.529108735221598*^9, 3.529108769195693*^9}, {3.529108880781704*^9, 
   3.52910888848387*^9}, 3.529109600293105*^9, {3.669661651415059*^9, 
   3.669661652068634*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"27ca9a40-3a9c-4e56-b703-9fc35193bf35"],

Cell[TextData[{
 "Same as before, but now assuming, for asymmetrical neighbourhood, that the \
reference cell is the one at the position \[LeftCeiling]r\[RightCeiling]+1 of \
the neighbourhood.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nExtractAllNeighbourhoods[{a, b, c, d, e}, 1]   ===>  {{e, a, b}, {a, b, \
c}, {b, c, d}, {c, d, e}, {d, e, a}}\nExtractAllNeighbourhoods[{a, b, c, d, \
e}, 0.5]  ==>   {{e, a}, {a, b}, {b, c}, {c, d}, {d, e}}"
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.5272514687201576`*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.527530422561829*^9, 3.527530605275231*^9}, {3.527530658539493*^9, 
   3.527530673257926*^9}, {3.528040699124916*^9, 3.528040703862265*^9}, 
   3.52910709289077*^9, {3.529107127440781*^9, 3.529107193910263*^9}, {
   3.52910736704247*^9, 3.529107386336336*^9}, 3.5291085948218803`*^9, {
   3.529108982779132*^9, 3.5291090120022182`*^9}, {3.529109155419621*^9, 
   3.529109173289198*^9}, {3.529109284426951*^9, 3.529109304895588*^9}, {
   3.529109361239108*^9, 3.529109362711066*^9}, {3.529109469532461*^9, 
   3.529109476826477*^9}, 3.873983638200908*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e6438cf5-eae3-4a02-960f-6baa8a3e7a9f"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ExtractAllNeighbourhoods", "[", 
     RowBox[{"config_", ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "extendedConfig", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"extendedConfig", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"config", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "config", ",", 
          RowBox[{"Take", "[", 
           RowBox[{"config", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], "}"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"extendedConfig", ",", 
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"#", "+", 
              RowBox[{"\[LeftCeiling]", 
               RowBox[{"2", "r"}], "\[RightCeiling]"}]}]}], "}"}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"Length", "[", "extendedConfig", "]"}], "-", 
          RowBox[{"\[LeftCeiling]", 
           RowBox[{"2", "r"}], "\[RightCeiling]"}]}], "]"}]}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{
  3.529099119011828*^9, {3.529099520497191*^9, 3.5290995294443274`*^9}, 
   3.529099577375859*^9, {3.529099610576396*^9, 3.529099661080415*^9}, {
   3.52909970571958*^9, 3.529099717344805*^9}, {3.529099788364652*^9, 
   3.529099813061447*^9}, {3.529099862783408*^9, 3.529099927461851*^9}, {
   3.52910004212936*^9, 3.529100054939792*^9}, 3.529100135216682*^9, {
   3.529100251707266*^9, 3.529100253901401*^9}, {3.529100391617851*^9, 
   3.529100411996148*^9}, {3.529103686321274*^9, 3.529103689087997*^9}, {
   3.52910588391831*^9, 3.5291058845087347`*^9}, {3.529105940092909*^9, 
   3.529106088406139*^9}, {3.529106122546547*^9, 3.529106148905701*^9}, {
   3.529106271048705*^9, 3.529106327634217*^9}, {3.529107738957905*^9, 
   3.529107747353865*^9}, {3.52910781263452*^9, 3.529107812818118*^9}, {
   3.529107858736194*^9, 3.529107861455946*^9}, {3.5291079372648277`*^9, 
   3.529107946624798*^9}, {3.529108020313459*^9, 3.5291080289335833`*^9}, {
   3.52910806699445*^9, 3.5291080690411787`*^9}, {3.529108109519265*^9, 
   3.52910811551014*^9}, {3.529108174408255*^9, 3.529108185735231*^9}, {
   3.529108322677192*^9, 3.529108328285178*^9}, {3.5291083792974043`*^9, 
   3.5291083794892263`*^9}, {3.529108508039138*^9, 3.529108519437646*^9}, {
   3.529109367962815*^9, 3.52910937394486*^9}, {3.529109420805365*^9, 
   3.529109425798949*^9}, {3.529109494989944*^9, 3.529109504340229*^9}, 
   3.529109595619878*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"c6bedc92-0713-40f5-aa58-ba90fff3d788"]
}, Closed]],

Cell[CellGroupData[{

Cell["State transitions between two configurations", "Subsection",
 CellChangeTimes->{{3.525090247814*^9, 3.52509031753*^9}, {3.525111934762*^9, 
   3.525111958756*^9}, {3.5256317789640007`*^9, 3.525631784725*^9}, 
   3.525633733135*^9, {3.525633787442*^9, 3.525633804764*^9}, {
   3.525633844078*^9, 3.525633976487*^9}, {3.525812028786763*^9, 
   3.525812132138025*^9}, {3.526319250419594*^9, 3.526319258704414*^9}, {
   3.52632443200406*^9, 3.526324447695825*^9}, {3.526325667895941*^9, 
   3.526325669439406*^9}, {3.5263258195480967`*^9, 3.526325820952787*^9}, {
   3.526918048035894*^9, 3.526918050012686*^9}, {3.5269185705252733`*^9, 
   3.5269185853961077`*^9}, {3.526918640822937*^9, 3.526918965915317*^9}, {
   3.526919066482208*^9, 3.526919102358965*^9}, 3.526919140658497*^9, {
   3.527249701205185*^9, 3.527249705995162*^9}, 3.529165514703816*^9, {
   3.5291655979193177`*^9, 3.529165622550497*^9}, {3.529165687092479*^9, 
   3.52916571257163*^9}},ExpressionUUID->"04f5ba6f-e52e-4324-9864-\
4d0e79a4c876"],

Cell[TextData[{
 "Yields the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-state, radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " state transitions that would allow ",
 StyleBox["fromConfig",
  FontSlant->"Italic"],
 " to become ",
 StyleBox["toConfig",
  FontSlant->"Italic"],
 ", in periodic boundary conditions. The function returns each neighbourhood \
configuration associated to their corresponding output state, so that \
possible conflicts may be readily visualised. A conflict here means the same \
neighbourhood being associated to distinct output states.\nFor asymmetrical \
neighbourhood, it\[CloseCurlyQuote]s assumed the reference cell is the one at \
the position \[LeftFloor]r\[RightFloor]+1 of the neighbourhood \
(alternatively, I could have taken \[LeftCeiling]r\[RightCeiling]+1).\nThe ",
 StyleBox["viewmode",
  FontSlant->"Italic"],
 " specifies the way the output is given. By default, TabView is used in \
order to show every state transition and their corresponding output states; \
the decimal number of the neighbourhood is used to index the tabs of TabView. \
When a neighbourhood is missing, the corresponding tab appears with a hyphen. \
Whenever there\[CloseCurlyQuote]s a conflict, the tab index is displayed in \
red. There\[CloseCurlyQuote]s presently a limit of 20 tabs being displayed.\n\
When visual ",
 StyleBox["viewmode",
  FontSlant->"Italic"],
 " is not used, the function returns the state transitions lists in a format \
that is more appropriate for further processing. \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": When in TabView, a click on the neighbourhood number displays the \
corresponding state transition; analogously, a click on a hyphen displays the \
corresponding neighbourhood.\n\
TransitionsBetweenConfigs[\[LineSeparator]CellularAutomaton[{110,2,1},\
RandomInteger[{0,1},{10}],1]\[LeftDoubleBracket]1\[RightDoubleBracket], \
\[LineSeparator]CellularAutomaton[{30,2,1},RandomInteger[{0,1},{10}],1]\
\[LeftDoubleBracket]2\[RightDoubleBracket],\n2,1, visual]\n\
TransitionsBetweenConfigs[\[LineSeparator]CellularAutomaton[{\
296495991170313318611212858708703828752,2,3},RandomInteger[{0,1},{100}],1]\
\[LeftDoubleBracket]1\[RightDoubleBracket], \
\[LineSeparator]CellularAutomaton[{296495991170313318611212858708703828752,2,\
3},RandomInteger[{0,1},{100}],1]\[LeftDoubleBracket]2\[RightDoubleBracket],\
\[LineSeparator]2,3, visual]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) Notice that the function only yields the ",
 StyleBox["required",
  FontWeight->"Bold"],
 " state transitions; the other state transitions that would allow the \
definition of a corresponding rule are arbitrary.\n2) The following kind of \
run is a good test for testing the function. \nIn: \
RnumFromRuleTable[Reverse@TransitionsBetweenConfigs[#\[LeftDoubleBracket]1\
\[RightDoubleBracket],#\[LeftDoubleBracket]2\[RightDoubleBracket],3]&[\
CellularAutomaton[{468975310,2,3},RandomInteger[{0,1},{100000}],1]]]\nOut: \
468975310"
}], "Text",
 CellChangeTimes->{{3.527250229521985*^9, 3.527250397380249*^9}, {
   3.527251057592098*^9, 3.527251165648808*^9}, {3.527251228770398*^9, 
   3.5272514687201576`*^9}, {3.527251527926106*^9, 3.527251624921399*^9}, {
   3.527530422561829*^9, 3.527530605275231*^9}, {3.527530658539493*^9, 
   3.527530673257926*^9}, {3.528040699124916*^9, 3.528040703862265*^9}, {
   3.5290910246380987`*^9, 3.529091122427481*^9}, {3.5290931576167397`*^9, 
   3.529093215293974*^9}, {3.529106446764595*^9, 3.529106455919712*^9}, {
   3.529106518233657*^9, 3.529106561207867*^9}, {3.529106599584733*^9, 
   3.529106601207784*^9}, {3.529106846102323*^9, 3.529106886493711*^9}, {
   3.529106926457531*^9, 3.529106953406367*^9}, {3.529107018400257*^9, 
   3.529107052026556*^9}, {3.529109545913392*^9, 3.529109557847669*^9}, {
   3.529109843486772*^9, 3.529109844337741*^9}, {3.529109877875764*^9, 
   3.529109896746146*^9}, {3.5291101749030128`*^9, 3.5291101899474792`*^9}, {
   3.5291104588120418`*^9, 3.529110480300028*^9}, {3.529110524457138*^9, 
   3.529110569292738*^9}, {3.52911064823364*^9, 3.52911076730206*^9}, {
   3.529146773278429*^9, 3.529146773278541*^9}, {3.529153236105888*^9, 
   3.529153240368802*^9}, {3.529154058155353*^9, 3.5291545353896513`*^9}, {
   3.5291699406687117`*^9, 3.529170002095639*^9}, {3.5291705401633997`*^9, 
   3.52917070585284*^9}, {3.669632236032206*^9, 3.669632243867078*^9}, {
   3.669633225131893*^9, 3.669633451482729*^9}, {3.6696355282673416`*^9, 
   3.669635692042293*^9}, {3.815220874180101*^9, 3.815220884755699*^9}, 
   3.8739836497008867`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a16779d7-3c14-4ffe-90e9-4054f770381a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TransitionsBetweenConfigs", "[", 
    RowBox[{"fromConfig_", ",", "toConfig_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"viewmode_Symbol", ":", "visual"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"allNeighbourhoods", "=", 
        RowBox[{"AllNeighbourhoods", "[", 
         RowBox[{"k", ",", "r"}], "]"}]}], ",", "absentTuples", ",", 
       "transitionsBetweenConfigs", ",", "auxTransitionsBetweenConfigs"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"auxTransitionsBetweenConfigs", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Union", "@", 
          RowBox[{"MapThread", "[", 
           RowBox[{"List", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ExtractAllNeighbourhoods", "[", 
               RowBox[{"fromConfig", ",", "r"}], "]"}], ",", "toConfig"}], 
             "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"transitionsBetweenConfigs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "@", "#"}], "&"}], "/@", 
          "auxTransitionsBetweenConfigs"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "viewmode", ",", "\[IndentingNewLine]", "visual", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TabView", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"absentTuples", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{"allNeighbourhoods", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "&"}], "/@", "transitionsBetweenConfigs"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"absentTuples", ",", "#"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<-\>\"", "\[Rule]", "#"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "<",
                     "2"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "k"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "k"}], "]"}], ",", "Red", ",", "Bold", ",", "13"}], "]"}],
                     "]"}]}], "]"}], "\[IndentingNewLine]", "\[Rule]", 
                   RowBox[{"First", "@", "#"}]}], ")"}], "&"}], "[", 
                RowBox[{"Cases", "[", 
                 RowBox[{"transitionsBetweenConfigs", ",", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "_"}], "}"}]}], "]"}], "]"}]}], "]"}], 
             "&"}], "/@", "allNeighbourhoods"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Limited\>\"", ",", "20"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "_", ",", "auxTransitionsBetweenConfigs"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.529152556119572*^9, 3.529152561453511*^9}, {
   3.529152649141055*^9, 3.52915265794061*^9}, {3.529152703960568*^9, 
   3.5291527514430847`*^9}, {3.5291529406305118`*^9, 3.529152947629297*^9}, {
   3.529153285868684*^9, 3.529153300348017*^9}, {3.529153346099451*^9, 
   3.529153462199293*^9}, {3.529153531752646*^9, 3.529153552119944*^9}, {
   3.529153705118474*^9, 3.529153739944355*^9}, 3.5291537922776*^9, {
   3.529153845945662*^9, 3.529153881570986*^9}, {3.5291539286240883`*^9, 
   3.529153999171868*^9}, {3.529165868777406*^9, 3.529165912840992*^9}, 
   3.5291664373591557`*^9, {3.529166514995883*^9, 3.52916658728707*^9}, {
   3.529166648142643*^9, 3.529166751983099*^9}, {3.529166798229922*^9, 
   3.529166802437268*^9}, {3.52916711701182*^9, 3.529167131650168*^9}, 
   3.529167201108687*^9, 3.529167250426801*^9, 3.529167292291153*^9, {
   3.529167379003683*^9, 3.529167403672241*^9}, {3.529167763303752*^9, 
   3.529167774094637*^9}, {3.529167838367916*^9, 3.529167882854276*^9}, {
   3.52916795226298*^9, 3.529167959550108*^9}, {3.529167990251248*^9, 
   3.529167998722799*^9}, {3.529168030003002*^9, 3.529168063177072*^9}, {
   3.529168117739069*^9, 3.529168147883588*^9}, {3.529168324482164*^9, 
   3.5291683286806593`*^9}, {3.529168643855865*^9, 3.5291686557747803`*^9}, {
   3.529168697096039*^9, 3.529168718806677*^9}, {3.529169118792625*^9, 
   3.529169125245932*^9}, {3.529169165893256*^9, 3.529169180479827*^9}, {
   3.529169251177449*^9, 3.529169275455023*^9}, {3.529169529219498*^9, 
   3.529169540327688*^9}, {3.529169576742732*^9, 3.529169587525882*^9}, {
   3.529169627814815*^9, 3.529169634301584*^9}, 3.5291696741597147`*^9, {
   3.52916973584513*^9, 3.5291697365718193`*^9}, {3.529169785276697*^9, 
   3.5291697957621*^9}, {3.529170096127338*^9, 3.529170096690346*^9}, {
   3.5291703296827717`*^9, 3.5291703386172256`*^9}, {3.529170375287166*^9, 
   3.5291704138099422`*^9}, 3.5297480175039997`*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"ae26f878-9394-42f4-9e33-91d1a9a7e7de"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cycle determination", "Subsection",
 CellChangeTimes->{{3.525090247814*^9, 3.52509031753*^9}, {3.525111934762*^9, 
   3.525111958756*^9}, {3.5256317789640007`*^9, 3.525631784725*^9}, 
   3.525633733135*^9, {3.525633787442*^9, 3.525633804764*^9}, {
   3.525633844078*^9, 3.525633976487*^9}, {3.525812028786763*^9, 
   3.525812132138025*^9}, {3.526319250419594*^9, 3.526319258704414*^9}, {
   3.52632443200406*^9, 3.526324447695825*^9}, {3.526325667895941*^9, 
   3.526325669439406*^9}, {3.5263258195480967`*^9, 3.526325820952787*^9}, {
   3.526918048035894*^9, 3.526918050012686*^9}, {3.5269185705252733`*^9, 
   3.5269185853961077`*^9}, {3.526918640822937*^9, 3.526918965915317*^9}, {
   3.526919066482208*^9, 3.526919102358965*^9}, 3.526919140658497*^9, {
   3.527249701205185*^9, 3.527249705995162*^9}, 3.529165514703816*^9, {
   3.5291655979193177`*^9, 3.529165622550497*^9}, {3.529165687092479*^9, 
   3.52916571257163*^9}, {3.530556579550684*^9, 3.530556580574168*^9}, {
   3.530556631086751*^9, 
   3.53055663505392*^9}},ExpressionUUID->"c1ab780f-9fee-4d59-8121-\
5d1dc562850f"],

Cell[TextData[{
 "For the given IC, and the (deterministic) CA expressed by ",
 StyleBox["ruleform",
  FontSlant->"Italic"],
 " (as required for the CellularAutomaton function), the function finds the \
first existing cycle (if any) from iteration ",
 StyleBox["initIter",
  FontSlant->"Italic"],
 " to ",
 StyleBox["finalIter, ",
  FontSlant->"Italic"],
 "and returns the iterations where the cycle occurs, as well as its period; \
more precisely, it returns {{",
 StyleBox["iteration start of the 1st occurrence of the cycle, iteration \
start of the 2nd occurrence of the cycle, etc",
  FontSlant->"Italic"],
 "}, ",
 StyleBox["period",
  FontSlant->"Italic"],
 "}. When no cycle is present for the given conditions, {0, {}} is returned.\n\
By default, only exact periodic regimes are considered; however, with ",
 StyleBox["shiftOpt = ",
  FontSlant->"Italic"],
 StyleBox["withshifts,",
  FontWeight->"Bold"],
 " the repeating configuration is allowed to be rotated in the lattice \
(because of the periodic boundary condition). In addition to standard ",
 StyleBox["CellularAutomaton",
  FontSlant->"Italic"],
 "-based runs, ",
 StyleBox["CASpatialComposition",
  FontSlant->"Italic"],
 " can also be used, by setting option ",
 StyleBox["caType = ",
  FontSlant->"Italic"],
 StyleBox["hyb.",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nCases[{#, FindCACycles[{#, 2, 1}, RandomInteger[{0, 1}, 1000], 0, 5]} & \
/@ Range[0, 255], {_, {{0, 1, 2, 3, 4, 5}, 1}}]\[LineSeparator]{{204, {{0, 1, \
2, 3, 4, 5}, 1}}}\nCases[{#, FindCACycles[{#, 2, 1}, RandomInteger[{0, 1}, \
1000], 0, 5, withshift]} & /@ Range[0, 255], {_, {{0, 1, 2, 3, 4, 5}, 1}}]\
\[LineSeparator]{{170, {{0, 1, 2, 3, 4, 5}, 1}}, {204, {{0, 1, 2, 3, 4, 5}, \
1}}, {240, {{0, 1, 2, 3, 4, 5}, 1}}}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\n1) Notice that the iteration 0 corresponds to the initial configuration.\
\n2) The algorithm employed is based upon the most frequent configuration \
appearing in the temporal evolution of the given CA, and its first appearance \
in it.\n3) In principle, the function should also work for non-periodic \
boundary conditions.\n4) For hybrid CAs the ",
 StyleBox["withshift",
  FontSlant->"Italic"],
 " option doesn\[CloseCurlyQuote]t make sense in general, because shifted \
configurations may appear associated to different cells, thus different \
rules. See, for instance: \
FindCACycles[ECA2CA[#]&/@{{150,1,1},{60,1,1},{150,1,1},{225,1,1},{165,1,1},{\
165,1,1},{15,1,1},{240,1,1}},{1,1,0,1,1,0,0,0},0,100,withshift,hyb]. So, the ",
 StyleBox["withshift",
  FontSlant->"Italic"],
 " option for hybrid CAs becomes just an indication of where the most \
frequent shifted configuration appears, not the indication of an actual \
shifted period; the usefulness of this information is questionable."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQnfN8tdhCn1eOOc+/u4HoD8sveYHoIwpv0kC0Zox3
Loi+/XNbO4j+dCm0B0I79oJoQ44jP0H0stkfwPQCqe9/FgHpNTJq7IuBtBdP
28RjQDrCcsMkEL0yc6nqP18gbVdvDqIfbvtvA6L/rn8UAaKXCzklg2gh51lp
IDru88xOBr9XjnYLI3pB9K4927p/+b9ydPu5rQdEL3nTMxFEv5JXmAGigyRy
NoJo/o/rd4HoVV+uHgTRXhXZV0D0ujylNb+nA/kizy6C6BqdRXdBdD3r3kcg
en2nQf4fIN2RPq0DRHOu2DkBTHcdXgaiOVbnrwPRWd/ebwXRJ/xyO24dAPqb
Tb8bRAMAFPDABA==
  "],
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f184175a-4ed2-4075-96ac-f1f7a21500ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindCACycles", "[", 
    RowBox[{"ruleform_", ",", "ic_List", ",", 
     RowBox[{"initIter_Integer", ":", "0"}], ",", "finalIter_Integer", ",", 
     RowBox[{"shiftOpt_Symbol", ":", "noshift"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"finalIter", "<", "initIter"}], ",", 
     "\"\<Final iteration has to be larger or equal to initial \
iteration!\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"temporalEvolution", ",", "positionsOfFirstRepeatingConfig"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temporalEvolution", "=", "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{"shiftOpt", ",", "\[IndentingNewLine]", "withshift", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "@", 
              RowBox[{"Sort", "[", 
               RowBox[{"CyclicClass", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
            RowBox[{"CellularAutomaton", "[", 
             RowBox[{"ruleform", ",", "ic", ",", "finalIter", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"initIter", ",", "finalIter"}], "}"}], "}"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", "_", ",", 
           RowBox[{"CellularAutomaton", "[", 
            RowBox[{"ruleform", ",", "ic", ",", "finalIter", ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"initIter", ",", "finalIter"}], "}"}], "}"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"positionsOfFirstRepeatingConfig", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"temporalEvolution", ",", 
            RowBox[{"First", "@", 
             RowBox[{"First", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Cases", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "__", "}"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Last", "/@", "#"}], "]"}]}], "}"}]}], "]"}], 
                "&"}], "[", 
               RowBox[{"Tally", "[", "temporalEvolution", "]"}], "]"}], 
              "]"}]}]}], "]"}], "+", "initIter"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[LessEqual]", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "-", "1"}], ",", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "&"}], "[", 
         RowBox[{"Flatten", "@", "positionsOfFirstRepeatingConfig"}], 
         "]"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.529751869558*^9, 3.529751903653*^9}, 
   3.529751977841*^9, {3.529752095801*^9, 3.5297521435179996`*^9}, 
   3.529752220236*^9, {3.5297522564890003`*^9, 3.529752261341*^9}, {
   3.5297522995039997`*^9, 3.5297523007320004`*^9}, {3.5297523315109997`*^9, 
   3.5297523499639997`*^9}, {3.529752574573*^9, 3.529752760949*^9}, {
   3.529752835668*^9, 3.529752874822*^9}, {3.529752908613*^9, 
   3.529752942814*^9}, {3.529761850122001*^9, 3.529761851402*^9}, {
   3.529762431042*^9, 3.529762450377*^9}, {3.529762523098*^9, 
   3.529762545341*^9}, {3.529762607688*^9, 3.52976268646*^9}, {
   3.5297628324700003`*^9, 3.529762897078*^9}, {3.529762929929*^9, 
   3.529762948706001*^9}, {3.529762989817*^9, 3.529763004356*^9}, {
   3.5297630402130003`*^9, 3.529763074433*^9}, {3.529763105835*^9, 
   3.5297631218310003`*^9}, {3.529763183157*^9, 3.529763186752*^9}, {
   3.529763222425*^9, 3.529763224927*^9}, {3.5298327542200007`*^9, 
   3.529832755019*^9}, {3.529832818109*^9, 3.529832827233*^9}, 
   3.529832982368*^9, {3.529833896157*^9, 3.529833901099*^9}, 
   3.5298340307679996`*^9, {3.529834087998*^9, 3.529834088129*^9}, {
   3.529834190665*^9, 3.529834291988*^9}, 3.529834636657*^9, {
   3.5298350927460003`*^9, 3.5298351231879997`*^9}, {3.529835245623*^9, 
   3.529835251846*^9}, {3.529835287069*^9, 3.529835330461*^9}, {
   3.529835364231*^9, 3.529835436217*^9}, 3.5298355792790003`*^9, {
   3.529835667182*^9, 3.529835676698*^9}, {3.52983575379*^9, 
   3.5298357911*^9}, {3.529835849344*^9, 3.529835905632*^9}, {
   3.529836006307*^9, 3.529836022947*^9}, {3.529836074205*^9, 
   3.529836105042*^9}, {3.5298361513780003`*^9, 3.529836204072*^9}, {
   3.529836259759*^9, 3.529836259871001*^9}, {3.529928379853*^9, 
   3.52992844475*^9}, {3.529928508117*^9, 3.529928584851*^9}, 
   3.529928619968*^9, {3.529928664659*^9, 3.5299286655150003`*^9}, {
   3.529928762617*^9, 3.529928833494*^9}, {3.529932677419*^9, 
   3.529932686796*^9}, {3.529932817872*^9, 3.529932818457*^9}, {
   3.529932901186*^9, 3.529932912718*^9}, {3.529933028517*^9, 
   3.529933057061*^9}, {3.529933092556*^9, 3.529933111599*^9}, {
   3.529933146485*^9, 3.52993315208*^9}, {3.529933393495*^9, 
   3.529933448988*^9}, {3.529933632124*^9, 3.529933671122*^9}, {
   3.529934075673001*^9, 3.529934189615*^9}, {3.529946204929*^9, 
   3.529946213896*^9}, {3.529946274941*^9, 3.529946279329*^9}, 
   3.5299463163789997`*^9, {3.529946359341*^9, 3.529946364804*^9}, {
   3.5299464671809998`*^9, 3.529946477193*^9}, {3.52994654038*^9, 
   3.5299466694519997`*^9}, {3.529946816433*^9, 3.529946845861*^9}, {
   3.529946917682*^9, 3.529946936213999*^9}, {3.529946998115*^9, 
   3.52994699849*^9}, {3.529955819842*^9, 3.52995584329*^9}, {
   3.529955895796*^9, 3.529955900844*^9}, {3.529956031921*^9, 
   3.529956060688*^9}, {3.529956217689*^9, 3.5299563262650003`*^9}, {
   3.529956374389*^9, 3.529956480758*^9}, {3.530554740873667*^9, 
   3.530554815456211*^9}, {3.531587376255616*^9, 3.531587402083407*^9}, 
   3.531587500559193*^9, {3.531592222300993*^9, 3.531592337554306*^9}, {
   3.531592419592493*^9, 3.531592511868615*^9}, {3.531592546668785*^9, 
   3.531592575738744*^9}, 3.531593022462315*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"913f4cec-9177-425a-8da9-ca4d4c767db2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindCACycles", "[", 
    RowBox[{"ruleform_", ",", "ic_List", ",", 
     RowBox[{"initIter_Integer", ":", "0"}], ",", "finalIter_Integer", ",", 
     RowBox[{"shiftOpt_Symbol", ":", "noshift"}], ",", 
     RowBox[{"caType_Symbol", ":", "std"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"finalIter", "<", "initIter"}], ",", 
     "\"\<Final iteration has to be larger or equal to initial \
iteration!\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"temporalEvolution", ",", "positionsOfFirstRepeatingConfig"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temporalEvolution", "=", "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{"shiftOpt", ",", "\[IndentingNewLine]", "withshift", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "@", 
              RowBox[{"Sort", "[", 
               RowBox[{"CyclicClass", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
            "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{"caType", ",", "\[IndentingNewLine]", "hyb", ",", 
              RowBox[{"CASpatialComposition", "[", 
               RowBox[{"ruleform", ",", "ic", ",", 
                RowBox[{"finalIter", "-", "initIter"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "_", ",", 
              RowBox[{"CellularAutomaton", "[", 
               RowBox[{"ruleform", ",", "ic", ",", "finalIter", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"initIter", ",", "finalIter"}], "}"}], "}"}]}], 
               "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "_", ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"caType", ",", "\[IndentingNewLine]", "hyb", ",", 
             RowBox[{"CASpatialComposition", "[", 
              RowBox[{"ruleform", ",", "ic", ",", 
               RowBox[{"finalIter", "-", "initIter"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "_", ",", 
             RowBox[{"CellularAutomaton", "[", 
              RowBox[{"ruleform", ",", "ic", ",", "finalIter", ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"initIter", ",", "finalIter"}], "}"}], "}"}]}], 
              "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"positionsOfFirstRepeatingConfig", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"temporalEvolution", ",", 
            RowBox[{"First", "@", 
             RowBox[{"First", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Cases", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "__", "}"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Last", "/@", "#"}], "]"}]}], "}"}]}], "]"}], 
                "&"}], "[", 
               RowBox[{"Tally", "[", "temporalEvolution", "]"}], "]"}], 
              "]"}]}]}], "]"}], "+", "initIter"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[LessEqual]", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "-", "1"}], ",", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "&"}], "[", 
         RowBox[{"Flatten", "@", "positionsOfFirstRepeatingConfig"}], 
         "]"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569340460588318*^9, 3.569340492191527*^9}, {
   3.569342506797739*^9, 3.5693425223299294`*^9}, 3.569343187201129*^9, {
   3.569343231337909*^9, 3.569343246541726*^9}, {3.569343394113511*^9, 
   3.569343456007027*^9}, 3.590768942495242*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"049719c7-f767-46d8-b485-fe6721a5fb1c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cyclic preimage patterns and their equivalence classes", "Subsection",
 CellChangeTimes->{{3.484322286528*^9, 3.484322287594*^9}, {3.484322432468*^9,
    3.484322433241*^9}, {3.4843252152980003`*^9, 3.4843252197*^9}, {
   3.484333706469*^9, 3.484333764755*^9}, {3.484333911086*^9, 
   3.48433391491*^9}, {3.4843917017*^9, 3.484391721183*^9}, {
   3.484392025226*^9, 3.484392034825*^9}, {3.484398061347*^9, 
   3.484398166129*^9}, {3.495050584217*^9, 3.495050597657*^9}, {
   3.4976959687925386`*^9, 3.497695999720538*^9}, 3.4984067193012943`*^9, 
   3.498408035701294*^9},ExpressionUUID->"58330267-8054-40db-b9b9-\
8993f8095a54"],

Cell[TextData[{
 StyleBox["The function displays (what I define as) the ",
  FontFamily->"Arial"],
 StyleBox["cyclic ",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["preimage",
  FontFamily->"Arial"],
 StyleBox[" pattern",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[" of the ",
  FontFamily->"Arial"],
 StyleBox["k",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["-colour, radius-",
  FontFamily->"Arial"],
 StyleBox["r ",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["rule number ",
  FontFamily->"Arial"],
 StyleBox["rnum",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[", which is a representation of the number of preimages of the \
rule, in periodic boundary condition, for all lattice sizes from ",
  FontFamily->"Arial"],
 StyleBox["nmax ",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["down to ",
  FontFamily->"Arial"],
 StyleBox["nmin",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[". By default, ",
  FontFamily->"Arial"],
 StyleBox["nmin",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["=1 and ",
  FontFamily->"Arial"],
 StyleBox["nmax",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[" takes on the empirical maximum value (",
  FontFamily->"Arial"],
 StyleBox["empimax",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[") defined in the NKS book; but ",
  FontFamily->"Arial"],
 StyleBox["nmax",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[" may also take on the theoretical required value (",
  FontFamily->"Arial"],
 StyleBox["theomax",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox["), which is larger than the latter, or any specific integer. \
Naturally, the largest lattice size has to be smaller than the smallest size. \
\nFor example, the cyclic preimage pattern for elementary rule 2, as worked \
out through the empirical ",
  FontFamily->"Arial"],
 StyleBox["nmax",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[" = 4, is ({2, 2, 2, 2, 8}, {1, 1, 1, 5}, {4}, {2}), where the four \
multisets refer, respectively, to the lattice sizes ",
  FontFamily->"Arial"],
 StyleBox["n",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[" equals to 4, 3, 2 and 1, and every number in a multiset \
corresponds to the number of preimages of a given configuration of size ",
  FontFamily->"Arial"],
 StyleBox["n",
  FontFamily->"Arial",
  FontSlant->"Italic"],
 StyleBox[". Hence, {2, 2, 2, 2, 8} represents that, out of the 2+2+2+2+8=16 \
possible 4-bit-long ICs, 4 of them are not reversible because each one has 2 \
preimages, 1 is not reversible because it has 8 preimages, and the remaining \
8 ICs (not explicitly appearing in the multiset) are not reversible because \
they are GoE configurations; similarly, {1, 1, 1, 5} represents that, out of \
the 1+1+1+5=8 possible 3-bit-long ICs, 3 of them are reversible because each \
one has a single preimage, 1 is non-reversible because it has 5 preimages, \
and the remaining 4 ICs (not explicitly appearing in the multiset) are not \
reversible because they are GoE configurations; and so on.",
  FontFamily->"Arial"],
 "\n\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nCyclicPreimagePattern[2]  ==>  {{2, 2, 2, 2, 8}, {1, 1, 1, 5}, {4}, {2}}\
\nCyclicPreimagePattern[2, 2, 1, 4]  ==>  {{2, 2, 2, 2, 8}, {1, 1, 1, 5}, \
{4}, {2}}\nCyclicPreimagePattern[2, 2, 1, 4, 4]  ==>   {{2, 2, 2, 2, 8}}\n\
CyclicPreimagePattern[2, 2, 1, empimax, 3]  ==> {{2, 2, 2, 2, 8}, {1, 1, 1, \
5}}\n\n",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": Notice that the length of the list displayed as output is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nmax"], TraditionalForm]],ExpressionUUID->
  "a82c1e28-2292-4e1e-a718-d7bfefe9c29c"],
 ". So, since for the elementary rules, ",
 StyleBox["empimax",
  FontSlant->"Italic"],
 " = 4 and ",
 StyleBox["theomax",
  FontSlant->"Italic"],
 " = 15, displaying the output for the theoretical ",
 StyleBox["nmax",
  FontSlant->"Italic"],
 " may be already long enough, even for the ECAs.\n\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\nThere are 2 implementations below: \n#1 relies on the preimage count by \
means of DB graphs, its implementation explicitly incorporating the core of \
CycPreimageCountFromConfig. It is general, and doesn\.b4t consume memory at \
all, as it cycles through the configurations iteratively. \
It\[CloseCurlyQuote]s nearly as fast as #2, as the DBruijn matrices are \
worked out only once for a run, and because it only processes a configuration \
if it is the representative of its cyclic class.\n#2 (commented out) is a",
 StyleBox["dapted from the NKS book, page 1017 (it\[CloseCurlyQuote]s ",
  FontFamily->"Arial"],
 "sort of brute force/exhaustive). It\[CloseCurlyQuote]s also general but a \
bit faster than #1; but it\.b4s very costly in terms of memory, because it \
relies on loading all the configurations in memory at once (this precludes \
its use for large values of ",
 StyleBox["nmax, ",
  FontSlant->"Italic"],
 "say 23 and above). I\[CloseCurlyQuote]m preserving #2 for a while, but it\
\[CloseCurlyQuote]s likely to be deleted in the near future. In the meantime \
in order to use fasterCyclicPreimagePattern it suffices to rename to \
CyclicPreimagePattern."
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.490377713920688*^9, 3.490377788966688*^9}, 
   3.497194510825489*^9, {3.4971945671674895`*^9, 3.4971945679724894`*^9}, 
   3.4971946130534887`*^9, 3.497196480422489*^9, {3.498406719429294*^9, 
   3.498406719864294*^9}, {3.498406903064294*^9, 3.498406903109294*^9}, 
   3.498563212983*^9, {3.54435583959375*^9, 3.5443560380625*^9}, {
   3.544356088359375*^9, 3.54435665396875*^9}, {3.544358171515625*^9, 
   3.544358386015625*^9}, {3.544813521823063*^9, 3.544813532694814*^9}, {
   3.5448717142791862`*^9, 3.544871729359169*^9}, {3.544871773176228*^9, 
   3.544872012689975*^9}, {3.544872142752848*^9, 3.5448724591352587`*^9}, {
   3.544872501346937*^9, 3.544872761221022*^9}, {3.544873738901218*^9, 
   3.544873813279379*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"60f957e9-7815-4db9-8fab-aeec71a4552e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CyclicPreimagePattern", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}], ",", " ", 
     RowBox[{"nmax_", ":", "empimax"}], ",", 
     RowBox[{"nmin_Integer", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maxlen", "=", 
        RowBox[{"Switch", " ", "[", 
         RowBox[{"nmax", ",", "empimax", ",", 
          SuperscriptBox["k", 
           RowBox[{"2", "r"}]], ",", "theomax", ",", " ", 
          RowBox[{
           RowBox[{
            SuperscriptBox["k", 
             RowBox[{"2", "r"}]], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", 
               RowBox[{"2", "r"}]], "-", "1"}], ")"}]}], "+", 
           RowBox[{"2", "r"}], "+", "1"}], ",", 
          RowBox[{"n_", "/;", 
           RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", "nmax"}], "]"}]}], ",",
        "aux", ",", "DBmsCte", ",", "cfg", ",", "cfcCycClass"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DBmsCte", "=", 
       RowBox[{"DD", "[", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NumberQ", "[", "maxlen", "]"}], "\[And]", 
         RowBox[{"maxlen", "\[GreaterEqual]", "nmin"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"Sow", "[", 
              RowBox[{"Sort", "@", 
               RowBox[{
                RowBox[{"Reap", "[", "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"i", "=", "0"}], ",", 
                   RowBox[{"i", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["k", "len"], "-", "1"}]}], ",", 
                   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"cfg", "=", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "k", ",", "len"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"cfcCycClass", "=", 
                    RowBox[{"CyclicClass", "[", "cfg", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cfg", "===", 
                    RowBox[{"First", "@", "cfcCycClass"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"aux", "=", 
                    RowBox[{"Tr", "[", 
                    RowBox[{"Dot", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DBmsCte", "\[LeftDoubleBracket]", 
                    RowBox[{"#", "+", "1"}], "\[RightDoubleBracket]"}], "&"}],
                     "/@", "cfg"}], ")"}]}], "]"}]}], ")"}], ">", "0"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{"aux", ",", 
                    RowBox[{"{", 
                    RowBox[{"Length", "[", "cfcCycClass", "]"}], "}"}]}], 
                    "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], "]"}], "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"len", ",", "maxlen", ",", "nmin", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
        "\"\<The largest lattice length you typed is smaller than the \
smallest size!\>\""}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.544353500546875*^9, 3.54435352896875*^9}, {
   3.54435366840625*^9, 3.544353696984375*^9}, {3.54435388046875*^9, 
   3.54435388403125*^9}, {3.544353915671875*^9, 3.544353920125*^9}, {
   3.544354400671875*^9, 3.54435442*^9}, 3.544354582828125*^9, {
   3.544354771921875*^9, 3.544354777*^9}, {3.544354849734375*^9, 
   3.544354877140625*^9}, {3.5443549171875*^9, 3.544354931765625*^9}, {
   3.544355151703125*^9, 3.544355152609375*^9}, {3.544356887296875*^9, 
   3.544356957359375*^9}, {3.544357170390625*^9, 3.54435720525*^9}, {
   3.54435725509375*^9, 3.544357262875*^9}, {3.544357333515625*^9, 
   3.54435740271875*^9}, {3.544357491390625*^9, 3.544357529546875*^9}, {
   3.54435759315625*^9, 3.544357611203125*^9}, 3.54435779771875*^9, {
   3.544357831421875*^9, 3.544357833875*^9}, 3.544865078860034*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"e27c77d6-b324-48c5-a653-c05a70f22a86"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"fasterCyclicPreimagePattern", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", " ", 
      RowBox[{"r_", ":", "1"}], ",", " ", 
      RowBox[{"nmax_", ":", "empimax"}], ",", 
      RowBox[{"nmin_Integer", ":", "1"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"maxlen", "=", 
        RowBox[{"Switch", " ", "[", 
         RowBox[{"nmax", ",", "empimax", ",", 
          SuperscriptBox["k", 
           RowBox[{"2", "r"}]], ",", "theomax", ",", " ", 
          RowBox[{
           RowBox[{
            SuperscriptBox["k", 
             RowBox[{"2", "r"}]], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["k", 
               RowBox[{"2", "r"}]], "-", "1"}], ")"}]}], "+", 
           RowBox[{"2", "r"}], "+", "1"}], ",", 
          RowBox[{"n_", "/;", 
           RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", "nmax"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NumberQ", "[", "maxlen", "]"}], "\[And]", 
         RowBox[{"maxlen", "\[GreaterEqual]", "nmin"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"Sow", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "&"}], "/@", 
               RowBox[{"Tally", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"CellularAutomaton", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"rnum", ",", "k", ",", 
                    RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "k", ",", "len"}], "]"}]}], "]"}], ",", 
                  " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", 
                    RowBox[{
                    SuperscriptBox["k", "len"], "-", "1"}]}], "}"}]}], "]"}], 
                "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"len", ",", "maxlen", ",", "nmin", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
        "\"\<The largest lattice length you typed is smaller than the \
smallest size!\>\""}], "]"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.483973547122345*^9, 3.483973649500621*^9}, {
   3.4839737667231216`*^9, 3.483973803755557*^9}, {3.483973882476826*^9, 
   3.4839738836487384`*^9}, {3.483973917946711*^9, 3.483973927197007*^9}, 
   3.483973993136617*^9, {3.483974079264373*^9, 3.483974093108566*^9}, {
   3.483974130500387*^9, 3.4839741309535265`*^9}, {3.483974166017149*^9, 
   3.483974208205999*^9}, {3.483974256520045*^9, 3.483974292521197*^9}, {
   3.483977019026001*^9, 3.483977076074337*^9}, {3.483977391098371*^9, 
   3.4839773990361247`*^9}, {3.483977495898599*^9, 3.483977500476871*^9}, 
   3.48414496306*^9, {3.4841469222349997`*^9, 3.484146965901*^9}, {
   3.484146998842*^9, 3.484147050220001*^9}, {3.4841471307209997`*^9, 
   3.484147157874*^9}, {3.484147188095001*^9, 3.484147377181*^9}, {
   3.484147419252*^9, 3.484147463435*^9}, {3.484147493679*^9, 
   3.484147516309*^9}, {3.484147561355*^9, 3.484147587831001*^9}, {
   3.4841476202650003`*^9, 3.484147625707*^9}, {3.484147666925*^9, 
   3.484147668516*^9}, {3.484147762238*^9, 3.484147763334*^9}, {
   3.484147835344*^9, 3.484147887509*^9}, 3.490377790678688*^9, {
   3.496773035805*^9, 3.496773039684*^9}, {3.497189281578489*^9, 
   3.4971892818184886`*^9}, {3.497189312586489*^9, 3.497189327028488*^9}, 
   3.498406903125293*^9, {3.498560198593*^9, 3.498560199703*^9}, 
   3.544351855015625*^9, {3.544864931253055*^9, 3.5448649317556543`*^9}, {
   3.5448676552178097`*^9, 3.544867655262042*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"9e666cc8-a19c-45ad-8a26-cabf32e85286"],

Cell[TextData[{
 "NGoEs[] returns the number of Garden-of-Eden configurations for the \
requested rule (see the parameter details in the documentation of \
CyclicPreimagePattern[]).\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\[LineSeparator]NGoEs[3, 2, 1, 10, 10]\[LineSeparator]{\[EmptySet], 747}"
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.484217457348*^9, 3.484217561836*^9}, {
   3.4842175992060003`*^9, 3.484217957487*^9}, {3.484217995968*^9, 
   3.484218061719*^9}, {3.490377798234688*^9, 3.490377827977688*^9}, {
   3.490377925342688*^9, 3.490377926933688*^9}, {3.490378090046688*^9, 
   3.490378091815688*^9}, {3.495049663786*^9, 3.495049664329*^9}, {
   3.497194635789489*^9, 3.4971946387974896`*^9}, {3.4971964584224896`*^9, 
   3.4971964591334887`*^9}, {3.4976960631935387`*^9, 
   3.4976961006565385`*^9}, {3.497696148923539*^9, 3.497696160816539*^9}, {
   3.498406720154294*^9, 3.498406720423294*^9}, 3.498406903139293*^9, {
   3.4984079206322937`*^9, 3.498407920646294*^9}, {3.498410271575294*^9, 
   3.498410320846294*^9}, {3.498410433822294*^9, 3.498410470221294*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6ceb0e70-7ab9-4ed3-9db2-95c17a790b28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NGoEs", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[EmptySet]", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Total", "[", "#", "]"}], "-", 
         RowBox[{"Length", "[", "#", "]"}]}], ")"}], "&"}], "[", 
      RowBox[{"First", "@", 
       RowBox[{"CyclicPreimagePattern", "[", 
        RowBox[{"rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin"}], 
        "]"}]}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4984100246322937`*^9, 3.498410117302294*^9}, {
  3.4984101548162937`*^9, 3.498410164280294*^9}, {3.498563224347*^9, 
  3.498563234184*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"d07d1c20-703d-43ee-910e-f89e2ed7edf7"],

Cell[TextData[{
 "Function for classifying the rules provided, according to their cyclic \
preimage pattern; each class is, therefore, an equivalence class. The classes \
are returned in two possible lexicographical ordering schemes: absolute or \
direct, which is selected according to the argument ",
 StyleBox["ordtype ",
  FontSlant->"Italic"],
 "(more details in P.P.B. de Oliveira and R. Freitas. \
\[OpenCurlyDoubleQuote]Relative partial reversibility of elementary cellular \
automata\[CloseCurlyDoubleQuote]. In J. Kari, N. Fat\[EAcute]s & T. Worsh, \
editors. ",
 StyleBox["Proceedings of Automata 2010: 16th International Workshop on \
Cellular Automata and Discrete Complex Systems",
  FontSlant->"Italic"],
 ", LORIA-INRIA, Nancy, France, pp.195-208, 2010.). The rule specification is \
described in the documentation of the function SortPars[], and for details of \
the other parameters see CyclicPreimagePattern[].\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nOrdCycPreimagePattClasses[All, 2, 1, 15, 1, dir]\n\
OrdCycPreimagePattClasses[All, 2, 1, 15, 1, abs]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": SortBy[] is governed only by the number of preimages effective appearing \
in the cyclic preimage pattern at issue, and not in the superset of all \
possibilities given by \
Table[Count[#\[LeftDoubleBracket]2\[RightDoubleBracket], i], {i,1,2^nmax}]& \
for ",
 StyleBox["ordtype",
  FontSlant->"Italic"],
 "=",
 StyleBox["abs",
  FontSlant->"Italic"],
 ", or Table[Count[#\[LeftDoubleBracket]2, i\[RightDoubleBracket], j], \
{i,1,nmax-nmin+1}, {j,1,2^nmax}]& for ",
 StyleBox["ordtype",
  FontSlant->"Italic"],
 "=",
 StyleBox["dir",
  FontSlant->"Italic"],
 ". This speeds up execution considerably, because otherwise it would be \
exponentially dependent on the lattice size."
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.484217457348*^9, 3.484217561836*^9}, {
   3.4842175992060003`*^9, 3.484217957487*^9}, {3.484217995968*^9, 
   3.484218061719*^9}, {3.490377798234688*^9, 3.490377827977688*^9}, {
   3.490377925342688*^9, 3.490377926933688*^9}, {3.490378090046688*^9, 
   3.490378091815688*^9}, {3.495049663786*^9, 3.495049664329*^9}, {
   3.497194635789489*^9, 3.4971946387974896`*^9}, {3.4971964584224896`*^9, 
   3.4971964591334887`*^9}, {3.4976960631935387`*^9, 
   3.4976961006565385`*^9}, {3.497696148923539*^9, 3.497696160816539*^9}, {
   3.498406720154294*^9, 3.498406720423294*^9}, 3.498406903139293*^9, {
   3.4984079206322937`*^9, 3.498407920646294*^9}, {3.815220853896822*^9, 
   3.815220857980352*^9}, {3.815220893136373*^9, 3.815220896623687*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c7090577-a8ab-4a1f-beb4-94ba38e76d9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrdCycPreimagePattClasses", "[", 
    RowBox[{
     RowBox[{"rulespec_", ":", "All"}], ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer", ",", 
     RowBox[{"ordtype_Symbol", ":", "abs"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "unsortedresult", ",", "cycPreimagePatt", ",", "cycPreimagePatts", ",", 
       "existingpreimagenumbers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "ordtype", ",", "\[IndentingNewLine]", "abs", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unsortedresult", "=", 
         RowBox[{"SortPars", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sort", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"CyclicPreimagePattern", "[", 
                RowBox[{"#", ",", "k", ",", "r", ",", "nmax", ",", "nmin"}], 
                "]"}]}]}], "&"}], "}"}], ",", "k", ",", " ", "r", ",", 
           "rulespec", ",", "unsorted"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"existingpreimagenumbers", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Last", "@", 
            RowBox[{"Transpose", "@", "unsortedresult"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"First", "@", 
         RowBox[{"Transpose", "@", 
          RowBox[{"SortBy", "[", 
           RowBox[{"unsortedresult", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"cycPreimagePatt", "=", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                ";", 
               RowBox[{
                RowBox[{
                 RowBox[{"Count", "[", 
                  RowBox[{"cycPreimagePatt", ",", "#"}], "]"}], "&"}], "/@", 
                "existingpreimagenumbers"}]}], ")"}], "&"}]}], "]"}]}]}]}], 
       ",", "\[IndentingNewLine]", "dir", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unsortedresult", "=", 
         RowBox[{"SortPars", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"CyclicPreimagePattern", "[", 
              RowBox[{"#", ",", "k", ",", "r", ",", "nmax", ",", "nmin"}], 
              "]"}], "&"}], "}"}], ",", " ", "k", ",", "r", ",", "rulespec", 
           ",", "unsorted"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"existingpreimagenumbers", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Last", "@", 
            RowBox[{"Transpose", "@", "unsortedresult"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"First", "@", 
         RowBox[{"Transpose", "@", 
          RowBox[{"SortBy", "[", 
           RowBox[{"unsortedresult", ",", 
            RowBox[{
             RowBox[{"Outer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Count", "[", 
                 RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"nmax", "-", "nmin", "+", "1"}]}], "}"}]}], "]"}], 
               ",", "existingpreimagenumbers", ",", "1"}], "]"}], "&"}]}], 
           "]"}]}]}]}], ",", "\[IndentingNewLine]", "_", ",", 
       "\"\<Unknown ordering type of the classes!\>\""}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.484152303513*^9, 3.484152314452*^9}, {3.48415239015*^9, 
   3.48415256501*^9}, 3.484154093915*^9, {3.4841541500690002`*^9, 
   3.484154190104*^9}, 3.484154545252*^9, {3.484154638763*^9, 
   3.484154695543*^9}, 3.484154918765001*^9, 3.484155720681*^9, 
   3.484155750775*^9, {3.484155802252*^9, 3.484155806122*^9}, {
   3.484155843362*^9, 3.484155845007*^9}, {3.48415588949*^9, 
   3.48415589049*^9}, {3.484163317127*^9, 3.484163366309*^9}, {
   3.48416345015*^9, 3.48416349152*^9}, {3.4841644668190002`*^9, 
   3.484164468174*^9}, {3.484164631804*^9, 3.484164640987*^9}, {
   3.48416467881*^9, 3.484164684255*^9}, {3.484164988709*^9, 
   3.484165012238*^9}, {3.484165066741*^9, 3.484165068777*^9}, {
   3.484166861869*^9, 3.484166969922*^9}, {3.484167024482001*^9, 
   3.484167041209*^9}, {3.484167113623*^9, 3.484167125284*^9}, {
   3.484167630179*^9, 3.48416765621*^9}, {3.484167782161001*^9, 
   3.484167784122*^9}, {3.484167819659*^9, 3.484167825622*^9}, {
   3.484167878107002*^9, 3.484167941165*^9}, {3.4841680230299997`*^9, 
   3.484168042064*^9}, 3.484168076544*^9, {3.484168155924*^9, 
   3.484168197199*^9}, {3.484168246022001*^9, 3.484168246581001*^9}, {
   3.484168278617*^9, 3.484168319133*^9}, 3.484168404627*^9, 
   3.484169135137*^9, {3.484169219099*^9, 3.484169222311*^9}, 
   3.484169908208*^9, {3.484169945772001*^9, 3.484169965334*^9}, 
   3.484170208642*^9, {3.484170270035*^9, 3.484170300174*^9}, {
   3.484170350085*^9, 3.4841703790150003`*^9}, {3.484170474988*^9, 
   3.484170481358*^9}, {3.484170546124*^9, 3.484170615706001*^9}, {
   3.484170905930001*^9, 3.484170926605*^9}, 3.484171134715*^9, 
   3.484171937215*^9, {3.4841720251540003`*^9, 3.484172029901*^9}, {
   3.484172144606*^9, 3.484172151613*^9}, {3.484172842046*^9, 
   3.48417284819*^9}, {3.484172944742*^9, 3.484172997924*^9}, 
   3.4841730571*^9, {3.484173191354*^9, 3.484173196168*^9}, {
   3.484173309025*^9, 3.48417333999*^9}, 3.484173426291*^9, {
   3.484173467254*^9, 3.484173472708*^9}, {3.484173519809*^9, 
   3.4841735698*^9}, {3.484173632469*^9, 3.484173634501*^9}, {
   3.484173867527*^9, 3.484173899682*^9}, {3.484173952524*^9, 
   3.484173957767*^9}, {3.484174036595001*^9, 3.484174042735001*^9}, 
   3.48417465912*^9, {3.484174852299*^9, 3.484174864264*^9}, 
   3.484175189973*^9, {3.484175253933*^9, 3.484175254074*^9}, {
   3.484175285818*^9, 3.484175299165*^9}, {3.4842173792799997`*^9, 
   3.484217380592*^9}, {3.490377837871688*^9, 3.490377839543688*^9}, 
   3.490377928037689*^9, {3.490377975841688*^9, 3.490377988039688*^9}, {
   3.497189341139489*^9, 3.4971893498984885`*^9}, 3.4971901853714886`*^9, {
   3.498406903150294*^9, 3.498406903154294*^9}, {3.498407920447294*^9, 
   3.498407949633294*^9}, 3.498563135395*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"9a2f2002-2c18-4bac-a87b-e75b0338f3eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Cyclic preimage count for a given configuration, or for all configurations of \
a given length\
\>", "Subsection",
 CellChangeTimes->{{3.484322286528*^9, 3.484322287594*^9}, {3.484322432468*^9,
    3.484322433241*^9}, {3.4843252152980003`*^9, 3.4843252197*^9}, {
   3.484333706469*^9, 3.484333764755*^9}, {3.484333911086*^9, 
   3.48433391491*^9}, {3.4843917017*^9, 3.484391721183*^9}, {
   3.484392025226*^9, 3.484392034825*^9}, {3.484398061347*^9, 
   3.484398166129*^9}, {3.495050584217*^9, 3.495050597657*^9}, {
   3.4976959687925386`*^9, 3.497695999720538*^9}, 3.4984067193012943`*^9, 
   3.498408035701294*^9, {3.498410804005294*^9, 3.498410830325294*^9}, {
   3.498496079952*^9, 3.498496131558*^9}, {3.498842278267*^9, 
   3.498842284185*^9}, {3.544813475831546*^9, 3.544813476351469*^9}, {
   3.544865021622059*^9, 3.544865033445154*^9}, 
   3.544873724963625*^9},ExpressionUUID->"723d12f9-172f-47cd-8a54-\
f3c7618c4543"],

Cell[TextData[{
 StyleBox["CycPreimageCountFromConfig",
  FontSlant->"Italic"],
 " and ",
 StyleBox["CycPreimageCountFromLength",
  FontSlant->"Italic"],
 " work out, respectively, the preimage count for a given configuration, or \
for all configurations of a given length. The fundamental algorithm relies on \
the DeBruijn graph for the rule at issue, from which the DeBruijn matrices \
are worked out. A nice and clear description of the algorithm can be found in \
Ed Powley's (2010) PhD thesis, around page 49.\n\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nCycPreimageCountFromConfig[{0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1}, \
110]\[LineSeparator]2\nCycPreimageCountFromLength[3, 2, 1, 10, GoE]\
\[LineSeparator]{10, 121[1], 60[2], 40[3], 5[4], 20[5], 10[8], 10[13], \
10[21], 1[123], 747[\[EmptySet]]}\nCycPreimageCountFromLength[3, 2, 1, 10, \
noGoE]\[LineSeparator]{10, 121[1], 60[2], 40[3], 5[4], 20[5], 10[8], 10[13], \
10[21], 1[123]}"
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.490377713920688*^9, 3.490377788966688*^9}, 
   3.497194510825489*^9, {3.4971945671674895`*^9, 3.4971945679724894`*^9}, 
   3.4971946130534887`*^9, 3.497196480422489*^9, {3.498406719429294*^9, 
   3.498406719864294*^9}, {3.498406903064294*^9, 3.498406903109294*^9}, {
   3.498495797099*^9, 3.498495819432*^9}, {3.498754632827*^9, 
   3.4987547823120008`*^9}, {3.498754834963*^9, 3.498754906799*^9}, {
   3.498754959625*^9, 3.498755038282*^9}, 3.4987551881*^9, {3.498755273583*^9,
    3.498755310359*^9}, {3.498755342605*^9, 3.498755344302*^9}, {
   3.49884231015*^9, 3.498842400384*^9}, {3.544356679890625*^9, 
   3.5443567503125*^9}, {3.544813319845363*^9, 3.544813400769553*^9}, {
   3.544813620520276*^9, 3.544813641948168*^9}, 3.54487168444801*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"05604fbf-276e-4c9c-b829-aa8ba2993701"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CycPreimageCountFromConfig", "[", 
    RowBox[{"cfg_List", ",", "rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"DBmatrices_List", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"DBms", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DBmatrices", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "DBmatrices", ",", 
         RowBox[{"DD", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Tr", "[", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"DBms", "\[LeftDoubleBracket]", 
           RowBox[{"#", "+", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         "cfg"}], ")"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.497008503421875*^9, 3.497008530484375*^9}, 
   3.4971757238436737`*^9, {3.4983850674488935`*^9, 3.4983850904728937`*^9}, {
   3.498397568631295*^9, 3.498397667960294*^9}, {3.498397780744294*^9, 
   3.498397781647294*^9}, {3.498397872208294*^9, 3.498397875616294*^9}, 
   3.498494808576*^9, {3.498560626652*^9, 3.498560827562001*^9}, {
   3.498561124685*^9, 3.4985611361619997`*^9}, {3.54478600636558*^9, 
   3.544786011396634*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"4155c7a5-fd28-423d-b9bf-319488f97ceb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DD", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"edgeValues", "=", 
        RowBox[{"WeightedAdjacencyMatrix", "[", 
         RowBox[{"RuleDeBruijnGraph", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}], ",", "D0", 
       ",", "D1D2etc"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"D1D2etc", "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", "=", "#"}], "}"}], ",", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ReplacePart", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", "\[Rule]", "1"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"ArrayRules", "@", "edgeValues"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Last", "[", "#", "]"}], "\[Equal]", "i"}], ")"}], 
                 "&"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               SuperscriptBox["k", 
                RowBox[{"\[LeftCeiling]", 
                 RowBox[{"2", "r"}], "\[RightCeiling]"}]], ",", 
               SuperscriptBox["k", 
                RowBox[{"\[LeftCeiling]", 
                 RowBox[{"2", "r"}], "\[RightCeiling]"}]]}], "}"}]}], "]"}]}],
           "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"k", "-", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"D0", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#1", "-", "#2"}], ")"}], "&"}], ",", 
         RowBox[{"AdjacencyMatrix", "[", 
          RowBox[{"RuleDeBruijnGraph", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", 
              SuperscriptBox["k", 
               RowBox[{"\[LeftFloor]", 
                RowBox[{
                 RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]], "-", 
             "1"}], ",", "k", ",", "r"}], "]"}], "]"}], ",", "D1D2etc"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"D0", ",", 
        RowBox[{"Sequence", "@@", "D1D2etc"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.54477932414215*^9, 3.544779337945024*^9}, 
   3.5447794051068783`*^9, {3.544779505325281*^9, 3.544779516590569*^9}, {
   3.544779549958231*^9, 3.544779563227291*^9}, {3.544780078897922*^9, 
   3.54478010474389*^9}, {3.54478013968277*^9, 3.544780257127192*^9}, {
   3.544780297526721*^9, 3.544780327453023*^9}, 3.544780545458555*^9, {
   3.544780672222467*^9, 3.544780695597747*^9}, 3.544780749387928*^9, 
   3.544780819457504*^9, {3.544781120556372*^9, 3.544781120818141*^9}, {
   3.544781390614361*^9, 3.544781448372603*^9}, {3.544781532872396*^9, 
   3.544781547165234*^9}, 3.544785802440078*^9, {3.544786542806876*^9, 
   3.54478654481194*^9}, {3.544787362846586*^9, 3.544787364117425*^9}, {
   3.54478777907391*^9, 3.544787809539321*^9}, {3.544788113736357*^9, 
   3.544788189324101*^9}, 3.544788223398251*^9, {3.544788260669742*^9, 
   3.544788306098837*^9}, {3.544788349998097*^9, 3.5447883794344893`*^9}, {
   3.544788571662365*^9, 3.544788590421692*^9}, 3.5447888378096247`*^9, {
   3.544788868236473*^9, 3.544788868715918*^9}, {3.544789052020754*^9, 
   3.544789055580606*^9}, 3.5447896133731194`*^9, {3.5447896441381073`*^9, 
   3.544789648794244*^9}, 3.544801976820536*^9, {3.544802015095215*^9, 
   3.544802044686277*^9}, 3.54480210605639*^9, {3.54480216251582*^9, 
   3.544802163647401*^9}, {3.544802341734369*^9, 3.544802358042436*^9}, {
   3.544802546954014*^9, 3.544802547515769*^9}, {3.5448026482768803`*^9, 
   3.544802668178019*^9}, {3.544802738777957*^9, 3.5448027969852037`*^9}, {
   3.54480284983992*^9, 3.544802854952045*^9}, {3.544802888007986*^9, 
   3.544802905393395*^9}, 3.544802974476733*^9, {3.544803019488648*^9, 
   3.544803019969046*^9}, 3.54481182736762*^9, 3.544813174313203*^9, {
   3.544813706737155*^9, 3.544813796626086*^9}, 3.5903311666397457`*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"964a2e05-9837-4ab1-8e7a-8026a17d3bf5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CycPreimageCountFromLength", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", "len_Integer", ",", 
      RowBox[{"GoEselection_Symbol", ":", "noGoE"}], ",", 
      RowBox[{"DBmatrices_List", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"DBms", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DBmatrices", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "DBmatrices", ",", 
          RowBox[{"DD", "[", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"len", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{"GoEselection", ",", "\[IndentingNewLine]", "GoE", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "&"}], "/@", "#"}], ",", 
                    "\[EmptySet]"}], "]"}], ",", "#", ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"\[EmptySet]", ",", "0"}], "}"}]}], "]"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", "noGoE", ",", 
                RowBox[{"Cases", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Except", "[", 
                   RowBox[{"{", 
                    RowBox[{"\[EmptySet]", ",", "_"}], "}"}], "]"}]}], "]"}], 
                ",", "\[IndentingNewLine]", "_", ",", 
                "\"\<Unknown GoE selection!\>\""}], "]"}], "&"}], "[", 
             "\[IndentingNewLine]", 
             RowBox[{"SortBy", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "@", 
                 RowBox[{
                  RowBox[{"Reap", "[", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"i", "=", "1"}], ",", 
                    RowBox[{"i", "\[LessEqual]", 
                    SuperscriptBox["k", "len"]}], ",", 
                    RowBox[{"i", "++"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"CycPreimageCountFromConfig", "[", 
                    RowBox[{
                    RowBox[{"IthTuple", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", "len"}], "]"}], 
                    ",", "rnum", ",", "k", ",", "r", ",", "DBms"}], "]"}], 
                    "]"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
                RowBox[{"{", 
                 RowBox[{"0", "\[Rule]", "\[EmptySet]"}], "}"}]}], ",", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "&"}]}], "]"}], "]"}], ")"}]}], ")"}]}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CycPreimageCountFromLength", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}], ",", " ", "nmax_Integer", ",", "nmin_Integer", 
     ",", 
     RowBox[{"GoEselection_Symbol", ":", "noGoE"}], ",", 
     RowBox[{"DBmatrices_List", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"DBms", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DBmatrices", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "DBmatrices", ",", 
         RowBox[{"DD", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"CycPreimageCountFromLength", "[", 
        RowBox[{
        "rnum", ",", "k", ",", "r", ",", "#", ",", "GoEselection", ",", 
         "DBms"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nmax", ",", "nmin", ",", 
        RowBox[{"-", "1"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.498414245702295*^9, 3.498414250502294*^9}, {
   3.498494741993*^9, 3.498494784448*^9}, {3.498494958471*^9, 
   3.498495011585*^9}, {3.498495046102*^9, 3.498495061939*^9}, {
   3.4984950975699997`*^9, 3.498495119197*^9}, {3.4984953090699997`*^9, 
   3.498495309697*^9}, {3.498495488244*^9, 3.498495525223*^9}, {
   3.498495579852*^9, 3.498495586912*^9}, {3.498495622171*^9, 
   3.498495692117*^9}, 3.498495919936*^9, {3.498495996382*^9, 
   3.498496024531*^9}, {3.498496239071*^9, 3.498496256376*^9}, {
   3.498548344751*^9, 3.498548348686*^9}, {3.498549211701*^9, 
   3.498549257294*^9}, {3.498549292454*^9, 3.498549295757*^9}, {
   3.4985493472790003`*^9, 3.4985494119309998`*^9}, {3.498553474551*^9, 
   3.498553537166*^9}, 3.498553623922*^9, {3.498554465568*^9, 
   3.4985544760039997`*^9}, {3.498554603716*^9, 3.498554625226*^9}, {
   3.498554702021*^9, 3.498554702437001*^9}, 3.498555309292*^9, {
   3.498556782876*^9, 3.498556796348*^9}, {3.498560498636*^9, 
   3.4985604997320004`*^9}, {3.498560857409*^9, 3.49856104846*^9}, {
   3.498561079988*^9, 3.498561085674*^9}, {3.498561140362*^9, 
   3.4985611534*^9}, {3.498561937617*^9, 3.498561952925*^9}, {
   3.498563333677*^9, 3.498563358928*^9}, {3.498749487557*^9, 
   3.498749505352*^9}, {3.498750256943*^9, 3.498750286894*^9}, {
   3.4987526617349997`*^9, 3.498752700731*^9}, {3.498754117049*^9, 
   3.49875418627*^9}, {3.498754240821*^9, 3.498754300002*^9}, {
   3.544803866750684*^9, 3.544803869701899*^9}, {3.544803953514901*^9, 
   3.544803957091118*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"7cbd7263-9a32-457a-8291-5ced94525631"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Determination and visualization of preimage count frequencies (PCFs)\
\>", "Subsection",
 CellChangeTimes->{{3.484322286528*^9, 3.484322287594*^9}, {3.484322432468*^9,
    3.484322433241*^9}, {3.4843252152980003`*^9, 3.4843252197*^9}, {
   3.484333706469*^9, 3.484333764755*^9}, {3.484333911086*^9, 
   3.48433391491*^9}, {3.4843917017*^9, 3.484391721183*^9}, {
   3.484392025226*^9, 3.484392034825*^9}, {3.484398061347*^9, 
   3.484398166129*^9}, {3.497186318996489*^9, 3.4971863750364885`*^9}, {
   3.497197694068488*^9, 3.497197712956489*^9}, {3.4976979265685387`*^9, 
   3.4976979282405386`*^9}, {3.497697985152539*^9, 3.4976980353525386`*^9}, 
   3.498406720439294*^9, {3.49875546169*^9, 3.498755462111*^9}, {
   3.4988429797789993`*^9, 
   3.498843010652*^9}},ExpressionUUID->"26359de8-5f89-4b56-b62e-69f28f804e39"],

Cell[TextData[{
 "PCFs works out the cyclic ",
 StyleBox["preimage count frequencies",
  FontWeight->"Bold"],
 " (PCFs), that is, the number of configurations with the same number of \
cyclic-preimages, for the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, radius-",
 StyleBox["r ",
  FontSlant->"Italic"],
 "rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", in periodic boundary condition, for all lattice sizes from ",
 StyleBox["nmax ",
  FontSlant->"Italic"],
 "down to ",
 StyleBox["nmin",
  FontSlant->"Italic"],
 ". When the ",
 StyleBox["GoEselection",
  FontSlant->"Italic"],
 " option is assigned the value ",
 StyleBox["GoE",
  FontSlant->"Italic"],
 " (which stands for Garden-of-Eden), the number of configurations with no \
preimage is also displayed; by default, ",
 StyleBox["GoEselection",
  FontSlant->"Italic"],
 " is set to ",
 StyleBox["noGoE",
  FontSlant->"Italic"],
 ", so that they are not displayed. ",
 StyleBox["The ",
  FontFamily->"Times New Roman"],
 StyleBox["GoE",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" configurations are referred to with the empty set symbol ",
  FontFamily->"Times New Roman"],
 "\[EmptySet]",
 StyleBox[".\nThe options ",
  FontFamily->"Times New Roman"],
 StyleBox["output",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontFamily->"Times New Roman"],
 StyleBox["direction",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox[" can be combined to yield different display layouts.\nEvery \
individual ",
  FontFamily->"Times New Roman"],
 "preimage",
 StyleBox[" count is displayed in the form ",
  FontFamily->"Times New Roman"],
 StyleBox["X[Y]",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[", meaning that ",
  FontFamily->"Times New Roman"],
 StyleBox["X configurations",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[" have",
  FontFamily->"Times New Roman"],
 StyleBox[" Y ",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 "preimage",
 StyleBox["s ",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox["each, or, equivalently,  ",
  FontFamily->"Times New Roman"],
 StyleBox["X configurations [have Y ",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 "preimage",
 StyleBox["s each]",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[".\n",
  FontFamily->"Times New Roman"],
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) When ",
 StyleBox["GoEselection",
  FontSlant->"Italic"],
 " = ",
 StyleBox["GoE",
  FontSlant->"Italic"],
 ", if all configurations have at least one preimage, for a given lattice \
size, then 0[\[EmptySet]] will be displayed in that case.\n2) The construct \
Reap[Do[Sow...]] aims at improving memory consumption when various lattice \
sizes are computed at once."
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.490377713920688*^9, 3.490377788966688*^9}, 
   3.497194510825489*^9, {3.497194547742489*^9, 3.497194588964489*^9}, {
   3.497194663556489*^9, 3.4971946670284886`*^9}, {3.4971947213494887`*^9, 
   3.497194867629489*^9}, {3.497195112190489*^9, 3.4971951216844883`*^9}, {
   3.4971951659344883`*^9, 3.497195287277489*^9}, {3.4971953196064887`*^9, 
   3.497195360751489*^9}, {3.497195398789489*^9, 3.4971956101404886`*^9}, {
   3.497195712164489*^9, 3.497195785637489*^9}, {3.4971958232764883`*^9, 
   3.497195880421489*^9}, {3.4971965135904884`*^9, 3.497196574637489*^9}, {
   3.497196619677489*^9, 3.497196679652489*^9}, {3.497196715990489*^9, 
   3.497196781988489*^9}, {3.4971968209744887`*^9, 3.497196840949489*^9}, {
   3.497197411182489*^9, 3.497197582668489*^9}, {3.4976956244495387`*^9, 
   3.497695725864539*^9}, {3.498406720556294*^9, 3.498406720768294*^9}, {
   3.498407746929294*^9, 3.498407748288294*^9}, 3.498407796299294*^9, {
   3.498563029935*^9, 3.498563037146*^9}, {3.4985631535699997`*^9, 
   3.4985631623450003`*^9}, 3.498755868251*^9, {3.498756006722*^9, 
   3.49875605112*^9}, {3.498843095532*^9, 3.498843162841*^9}, 
   3.544873670553175*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"efa3a42a-aa71-4a46-b8b6-c3d9bbd8c194"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PCFs", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer", ",", 
      RowBox[{"GoEselection_Symbol", ":", "noGoE"}]}], "]"}], ":=", 
    RowBox[{"PCFs", "[", 
     RowBox[{
     "rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin", ",", 
      "GoEselection", ",", 
      RowBox[{"{", 
       RowBox[{"list", ",", "horizontal"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PCFs", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer", ",", 
     RowBox[{"GoEselection_Symbol", ":", "noGoE"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"output_Symbol", ":", "list"}], ",", 
       RowBox[{"direction_Symbol", ":", "horizontal"}]}], "}"}]}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "direction", ",", "\[IndentingNewLine]", "horizontal", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{
        "output", ",", "\[IndentingNewLine]", "list", ",", "#", ",", 
         "\[IndentingNewLine]", "table", ",", 
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableAlignments", "\[Rule]", "Right"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "grid", ",", 
         RowBox[{"Grid", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
           RowBox[{"Dividers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "False"}], "}"}], ",", 
              "All"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "_", 
         ",", "\"\<Unknown output option!\>\""}], "]"}], "&"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "[", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], "&"}], "/@", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
           "}"}], ",", "1"}], "]"}], "&"}], "/@", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{"GoEselection", ",", "\[IndentingNewLine]", "GoE", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[EmptySet]", ",", 
                  RowBox[{
                   SuperscriptBox["2", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]], "-", 
                   RowBox[{"Total", "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}]}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", "noGoE", ",", "#", ",", 
            "\[IndentingNewLine]", "_", ",", 
            "\"\<Unknown GoE selection!\>\""}], "]"}], "&"}], "/@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"Sow", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"Tally", "[", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], "&"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Total", "[", "#", "]"}]}], "]"}], ",", "#"}], 
                  "}"}], "&"}], "[", 
                RowBox[{"First", "@", 
                 RowBox[{"CyclicPreimagePattern", "[", 
                  RowBox[{
                  "rnum", ",", "k", ",", "r", ",", "len", ",", "len"}], 
                  "]"}]}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"len", ",", "nmax", ",", "nmin", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
      "]"}], ",", "\[IndentingNewLine]", "vertical", ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pimagefreqs", "=", 
         RowBox[{"PCFs", "[", 
          RowBox[{
          "rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin", ",", 
           "GoEselection", ",", 
           RowBox[{"{", 
            RowBox[{"list", ",", "horizontal"}], "}"}]}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{
          "output", ",", "\[IndentingNewLine]", "list", ",", "#", ",", 
           "\[IndentingNewLine]", "table", ",", 
           RowBox[{"TableForm", "[", 
            RowBox[{"#", ",", 
             RowBox[{"TableAlignments", "\[Rule]", "Right"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "grid", ",", 
           RowBox[{"Grid", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
             RowBox[{"Dividers", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"True", ",", "False"}], "}"}], ",", "True"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "_", ",", 
           "\"\<Unknown output option!\>\""}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Riffle", "[", 
           RowBox[{"#", ",", "\"\<\>\""}], "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PadRight", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
                "pimagefreqs"}], "]"}], ",", "\"\<\>\""}], "]"}], "&"}], "/@",
            "pimagefreqs"}], "]"}]}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "_", ",", "\"\<Unknown direction option!\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4842390034958773`*^9, 3.484239018924278*^9}, {
   3.484239082494277*^9, 3.484239170977477*^9}, {3.484239252939878*^9, 
   3.484239254390678*^9}, {3.484239328303478*^9, 3.484239464078877*^9}, {
   3.4842398091942773`*^9, 3.484239811471877*^9}, {3.484239859301478*^9, 
   3.484239868271477*^9}, {3.484239926631078*^9, 3.484239956146278*^9}, {
   3.484240062812078*^9, 3.484240072515277*^9}, {3.484240232961277*^9, 
   3.484240271805277*^9}, {3.484240557722078*^9, 3.484240574944477*^9}, {
   3.4842406943870773`*^9, 3.484240696695877*^9}, {3.484240806477078*^9, 
   3.484240840485077*^9}, {3.484241200267877*^9, 3.484241211827478*^9}, {
   3.484241242786477*^9, 3.484241244362077*^9}, 3.4842414811856775`*^9, {
   3.484243267949077*^9, 3.484243268604277*^9}, 3.4842433968050776`*^9, {
   3.484243433355877*^9, 3.484243470873877*^9}, 3.4842435994370775`*^9, {
   3.4842437497672772`*^9, 3.484243755944877*^9}, {3.484246053266877*^9, 
   3.484246095489077*^9}, {3.484248885962077*^9, 3.484248888255277*^9}, {
   3.484248984729277*^9, 3.484249120827277*^9}, {3.484249216470877*^9, 
   3.484249222508077*^9}, {3.4842493668408775`*^9, 3.484249406745677*^9}, 
   3.484249462125677*^9, {3.4842495373176775`*^9, 3.484249639343277*^9}, {
   3.4842496878280773`*^9, 3.484249690129877*^9}, 3.484249773355877*^9, {
   3.484300477149*^9, 3.484300587747002*^9}, {3.484301445739001*^9, 
   3.48430149323*^9}, {3.484301677324*^9, 3.484301698552*^9}, {
   3.484331292381*^9, 3.484331297224*^9}, {3.484331327304*^9, 
   3.484331335253001*^9}, {3.484331459356*^9, 3.48433145941*^9}, 
   3.49504969584*^9, {3.497189356350489*^9, 3.497189356717489*^9}, {
   3.497189787223489*^9, 3.4971898240614886`*^9}, {3.4971898593034887`*^9, 
   3.4971898831914883`*^9}, 3.4971906201204886`*^9, {3.4971909092794886`*^9, 
   3.497190955871489*^9}, {3.497190999103489*^9, 3.4971910352804885`*^9}, {
   3.4971918588314924`*^9, 3.497191896374489*^9}, {3.497192887111489*^9, 
   3.497192889600489*^9}, {3.497192966896489*^9, 3.497192986032489*^9}, 
   3.4971934933924885`*^9, {3.497694314461539*^9, 3.497694357068539*^9}, 
   3.498406903173294*^9, {3.498407796304294*^9, 3.498407796312294*^9}, {
   3.498562955158*^9, 3.498562982186*^9}, 3.498749388064*^9, {
   3.4987558682679996`*^9, 3.498755868457*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"1c460f0d-e391-413f-a40f-4a5e2462c5f9"],

Cell[TextData[{
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nPCFs[3, 2, 1, 1, 1, GoE, {table,horizontal}]\n1\t2[1]\t0[\[EmptySet]]\n\
PCFs[3, 2, 1, 1, 1, noGoE, {table,horizontal}]\n1\t2[1]\nPCFs[3, 2, 1, 15, 1, \
noGoE, {table, horizontal}]\n",
 Cell[BoxData[
  InterpretationBox[GridBox[{
     {"15", 
      RowBox[{"1364", "[", "1", "]"}], 
      RowBox[{"960", "[", "2", "]"}], 
      RowBox[{"600", "[", "3", "]"}], 
      RowBox[{"180", "[", "4", "]"}], 
      RowBox[{"375", "[", "5", "]"}], 
      RowBox[{"195", "[", "6", "]"}], 
      RowBox[{"230", "[", "8", "]"}], 
      RowBox[{"45", "[", "9", "]"}], 
      RowBox[{"90", "[", "10", "]"}], 
      RowBox[{"135", "[", "13", "]"}], 
      RowBox[{"45", "[", "15", "]"}], 
      RowBox[{"45", "[", "16", "]"}], 
      RowBox[{"90", "[", "21", "]"}], 
      RowBox[{"30", "[", "24", "]"}], 
      RowBox[{"15", "[", "25", "]"}], 
      RowBox[{"30", "[", "26", "]"}], 
      RowBox[{"60", "[", "34", "]"}], 
      RowBox[{"15", "[", "39", "]"}], 
      RowBox[{"15", "[", "40", "]"}], 
      RowBox[{"15", "[", "42", "]"}], 
      RowBox[{"30", "[", "55", "]"}], 
      RowBox[{"15", "[", "89", "]"}], 
      RowBox[{"15", "[", "144", "]"}], 
      RowBox[{"15", "[", "233", "]"}], 
      RowBox[{"1", "[", "1364", "]"}]},
     {"14", 
      RowBox[{"841", "[", "1", "]"}], 
      RowBox[{"560", "[", "2", "]"}], 
      RowBox[{"350", "[", "3", "]"}], 
      RowBox[{"91", "[", "4", "]"}], 
      RowBox[{"210", "[", "5", "]"}], 
      RowBox[{"84", "[", "6", "]"}], 
      RowBox[{"126", "[", "8", "]"}], 
      RowBox[{"21", "[", "9", "]"}], 
      RowBox[{"42", "[", "10", "]"}], 
      RowBox[{"84", "[", "13", "]"}], 
      RowBox[{"28", "[", "15", "]"}], 
      RowBox[{"28", "[", "16", "]"}], 
      RowBox[{"56", "[", "21", "]"}], 
      RowBox[{"14", "[", "24", "]"}], 
      RowBox[{"7", "[", "25", "]"}], 
      RowBox[{"14", "[", "26", "]"}], 
      RowBox[{"28", "[", "34", "]"}], 
      RowBox[{"14", "[", "55", "]"}], 
      RowBox[{"14", "[", "89", "]"}], 
      RowBox[{"14", "[", "144", "]"}], 
      RowBox[{
      "1", "[", "843", "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"13", 
      RowBox[{"521", "[", "1", "]"}], 
      RowBox[{"325", "[", "2", "]"}], 
      RowBox[{"195", "[", "3", "]"}], 
      RowBox[{"39", "[", "4", "]"}], 
      RowBox[{"117", "[", "5", "]"}], 
      RowBox[{"39", "[", "6", "]"}], 
      RowBox[{"78", "[", "8", "]"}], 
      RowBox[{"13", "[", "9", "]"}], 
      RowBox[{"26", "[", "10", "]"}], 
      RowBox[{"52", "[", "13", "]"}], 
      RowBox[{"13", "[", "15", "]"}], 
      RowBox[{"13", "[", "16", "]"}], 
      RowBox[{"26", "[", "21", "]"}], 
      RowBox[{"13", "[", "34", "]"}], 
      RowBox[{"13", "[", "55", "]"}], 
      RowBox[{"13", "[", "89", "]"}], 
      RowBox[{
      "1", "[", "521", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"12", 
      RowBox[{"324", "[", "1", "]"}], 
      RowBox[{"180", "[", "2", "]"}], 
      RowBox[{"108", "[", "3", "]"}], 
      RowBox[{"18", "[", "4", "]"}], 
      RowBox[{"72", "[", "5", "]"}], 
      RowBox[{"24", "[", "6", "]"}], 
      RowBox[{"48", "[", "8", "]"}], 
      RowBox[{"6", "[", "9", "]"}], 
      RowBox[{"12", "[", "10", "]"}], 
      RowBox[{"24", "[", "13", "]"}], 
      RowBox[{"12", "[", "21", "]"}], 
      RowBox[{"12", "[", "34", "]"}], 
      RowBox[{"12", "[", "55", "]"}], 
      RowBox[{
      "1", "[", "322", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"11", 
      RowBox[{"199", "[", "1", "]"}], 
      RowBox[{"99", "[", "2", "]"}], 
      RowBox[{"66", "[", "3", "]"}], 
      RowBox[{"11", "[", "4", "]"}], 
      RowBox[{"44", "[", "5", "]"}], 
      RowBox[{"11", "[", "6", "]"}], 
      RowBox[{"22", "[", "8", "]"}], 
      RowBox[{"11", "[", "13", "]"}], 
      RowBox[{"11", "[", "21", "]"}], 
      RowBox[{"11", "[", "34", "]"}], 
      RowBox[{
      "1", "[", "199", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"10", 
      RowBox[{"121", "[", "1", "]"}], 
      RowBox[{"60", "[", "2", "]"}], 
      RowBox[{"40", "[", "3", "]"}], 
      RowBox[{"5", "[", "4", "]"}], 
      RowBox[{"20", "[", "5", "]"}], 
      RowBox[{"10", "[", "8", "]"}], 
      RowBox[{"10", "[", "13", "]"}], 
      RowBox[{"10", "[", "21", "]"}], 
      RowBox[{
      "1", "[", "123", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"9", 
      RowBox[{"76", "[", "1", "]"}], 
      RowBox[{"36", "[", "2", "]"}], 
      RowBox[{"18", "[", "3", "]"}], 
      RowBox[{"9", "[", "5", "]"}], 
      RowBox[{"9", "[", "8", "]"}], 
      RowBox[{"9", "[", "13", "]"}], 
      RowBox[{
      "1", "[", "76", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>"},
     {"8", 
      RowBox[{"49", "[", "1", "]"}], 
      RowBox[{"16", "[", "2", "]"}], 
      RowBox[{"8", "[", "3", "]"}], 
      RowBox[{"8", "[", "5", "]"}], 
      RowBox[{"8", "[", "8", "]"}], 
      RowBox[{
      "1", "[", "47", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>"},
     {"7", 
      RowBox[{"29", "[", "1", "]"}], 
      RowBox[{"7", "[", "2", "]"}], 
      RowBox[{"7", "[", "3", "]"}], 
      RowBox[{"7", "[", "5", "]"}], 
      RowBox[{
      "1", "[", "29", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"6", 
      RowBox[{"16", "[", "1", "]"}], 
      RowBox[{"6", "[", "2", "]"}], 
      RowBox[{"6", "[", "3", "]"}], 
      RowBox[{
      "1", "[", "18", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"5", 
      RowBox[{"11", "[", "1", "]"}], 
      RowBox[{"5", "[", "2", "]"}], 
      RowBox[{
      "1", "[", "11", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"4", 
      RowBox[{"9", "[", "1", "]"}], 
      RowBox[{
      "1", "[", "7", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"3", 
      RowBox[{"4", "[", "1", "]"}], 
      RowBox[{
      "1", "[", "4", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"2", 
      RowBox[{"1", "[", "1", "]"}], 
      RowBox[{
      "1", "[", "3", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"1", 
      RowBox[{
      "2", "[", "1", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   TableForm[{{15, 
      1364[1], 
      960[2], 
      600[3], 
      180[4], 
      375[5], 
      195[6], 
      230[8], 
      45[9], 
      90[10], 
      135[13], 
      45[15], 
      45[16], 
      90[21], 
      30[24], 
      15[25], 
      30[26], 
      60[34], 
      15[39], 
      15[40], 
      15[42], 
      30[55], 
      15[89], 
      15[144], 
      15[233], 
      1[1364]}, {14, 
      841[1], 
      560[2], 
      350[3], 
      91[4], 
      210[5], 
      84[6], 
      126[8], 
      21[9], 
      42[10], 
      84[13], 
      28[15], 
      28[16], 
      56[21], 
      14[24], 
      7[25], 
      14[26], 
      28[34], 
      14[55], 
      14[89], 
      14[144], 
      1[843]}, {13, 
      521[1], 
      325[2], 
      195[3], 
      39[4], 
      117[5], 
      39[6], 
      78[8], 
      13[9], 
      26[10], 
      52[13], 
      13[15], 
      13[16], 
      26[21], 
      13[34], 
      13[55], 
      13[89], 
      1[521]}, {12, 
      324[1], 
      180[2], 
      108[3], 
      18[4], 
      72[5], 
      24[6], 
      48[8], 
      6[9], 
      12[10], 
      24[13], 
      12[21], 
      12[34], 
      12[55], 
      1[322]}, {11, 
      199[1], 
      99[2], 
      66[3], 
      11[4], 
      44[5], 
      11[6], 
      22[8], 
      11[13], 
      11[21], 
      11[34], 
      1[199]}, {10, 
      121[1], 
      60[2], 
      40[3], 
      5[4], 
      20[5], 
      10[8], 
      10[13], 
      10[21], 
      1[123]}, {9, 
      76[1], 
      36[2], 
      18[3], 
      9[5], 
      9[8], 
      9[13], 
      1[76]}, {8, 
      49[1], 
      16[2], 
      8[3], 
      8[5], 
      8[8], 
      1[47]}, {7, 
      29[1], 
      7[2], 
      7[3], 
      7[5], 
      1[29]}, {6, 
      16[1], 
      6[2], 
      6[3], 
      1[18]}, {5, 
      11[1], 
      5[2], 
      1[11]}, {4, 
      9[1], 
      1[7]}, {3, 
      4[1], 
      1[4]}, {2, 
      1[1], 
      1[3]}, {1, 
      2[1]}}, TableAlignments -> Right]]], "Text",
  CellChangeTimes->{{3.484249776351077*^9, 3.484249818673877*^9}, {
    3.484301279455*^9, 3.484301286664*^9}, 3.484301503874*^9, {
    3.4843016815620008`*^9, 3.4843017188190007`*^9}, {3.484301771847*^9, 
    3.484301782809*^9}},ExpressionUUID->
  "c9a455e1-21d0-449b-a3ab-26f92e7643d1"],
 "\nPCFs[3, 2, 1, 15, 1, noGoE, {table, vertical}]\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"15", "\<\"\"\>", "14", "\<\"\"\>", "13", "\<\"\"\>", "12", "\<\"\"\>", 
      "11", "\<\"\"\>", "10", "\<\"\"\>", "9", "\<\"\"\>", "8", "\<\"\"\>", 
      "7", "\<\"\"\>", "6", "\<\"\"\>", "5", "\<\"\"\>", "4", "\<\"\"\>", 
      "3", "\<\"\"\>", "2", "\<\"\"\>", "1"},
     {
      RowBox[{"1364", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"841", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"521", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"324", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"199", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"121", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"76", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"49", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"29", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"16", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"11", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"9", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"4", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"1", "[", "1", "]"}], "\<\"\"\>", 
      RowBox[{"2", "[", "1", "]"}]},
     {
      RowBox[{"960", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"560", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"325", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"180", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"99", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"60", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"36", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"16", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"7", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"6", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"5", "[", "2", "]"}], "\<\"\"\>", 
      RowBox[{"1", "[", "7", "]"}], "\<\"\"\>", 
      RowBox[{"1", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"1", "[", "3", "]"}], "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"600", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"350", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"195", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"108", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"66", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"40", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"18", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"8", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"7", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{"6", "[", "3", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "11", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"180", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"91", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"39", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"18", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"11", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"5", "[", "4", "]"}], "\<\"\"\>", 
      RowBox[{"9", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"8", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"7", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "18", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"375", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"210", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"117", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"72", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"44", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"20", "[", "5", "]"}], "\<\"\"\>", 
      RowBox[{"9", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"8", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "29", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
     {
      RowBox[{"195", "[", "6", "]"}], "\<\"\"\>", 
      RowBox[{"84", "[", "6", "]"}], "\<\"\"\>", 
      RowBox[{"39", "[", "6", "]"}], "\<\"\"\>", 
      RowBox[{"24", "[", "6", "]"}], "\<\"\"\>", 
      RowBox[{"11", "[", "6", "]"}], "\<\"\"\>", 
      RowBox[{"10", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"9", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "47", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"230", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"126", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"78", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"48", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"22", "[", "8", "]"}], "\<\"\"\>", 
      RowBox[{"10", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "76", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"45", "[", "9", "]"}], "\<\"\"\>", 
      RowBox[{"21", "[", "9", "]"}], "\<\"\"\>", 
      RowBox[{"13", "[", "9", "]"}], "\<\"\"\>", 
      RowBox[{"6", "[", "9", "]"}], "\<\"\"\>", 
      RowBox[{"11", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{
      "10", "[", "21", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>"},
     {
      RowBox[{"90", "[", "10", "]"}], "\<\"\"\>", 
      RowBox[{"42", "[", "10", "]"}], "\<\"\"\>", 
      RowBox[{"26", "[", "10", "]"}], "\<\"\"\>", 
      RowBox[{"12", "[", "10", "]"}], "\<\"\"\>", 
      RowBox[{"11", "[", "21", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "123", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>"},
     {
      RowBox[{"135", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{"84", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{"52", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{"24", "[", "13", "]"}], "\<\"\"\>", 
      RowBox[{
      "11", "[", "34", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"45", "[", "15", "]"}], "\<\"\"\>", 
      RowBox[{"28", "[", "15", "]"}], "\<\"\"\>", 
      RowBox[{"13", "[", "15", "]"}], "\<\"\"\>", 
      RowBox[{"12", "[", "21", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "199", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"45", "[", "16", "]"}], "\<\"\"\>", 
      RowBox[{"28", "[", "16", "]"}], "\<\"\"\>", 
      RowBox[{"13", "[", "16", "]"}], "\<\"\"\>", 
      RowBox[{
      "12", "[", "34", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"90", "[", "21", "]"}], "\<\"\"\>", 
      RowBox[{"56", "[", "21", "]"}], "\<\"\"\>", 
      RowBox[{"26", "[", "21", "]"}], "\<\"\"\>", 
      RowBox[{
      "12", "[", "55", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"30", "[", "24", "]"}], "\<\"\"\>", 
      RowBox[{"14", "[", "24", "]"}], "\<\"\"\>", 
      RowBox[{"13", "[", "34", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "322", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"15", "[", "25", "]"}], "\<\"\"\>", 
      RowBox[{"7", "[", "25", "]"}], "\<\"\"\>", 
      RowBox[{
      "13", "[", "55", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"30", "[", "26", "]"}], "\<\"\"\>", 
      RowBox[{"14", "[", "26", "]"}], "\<\"\"\>", 
      RowBox[{
      "13", "[", "89", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"60", "[", "34", "]"}], "\<\"\"\>", 
      RowBox[{"28", "[", "34", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "521", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"15", "[", "39", "]"}], "\<\"\"\>", 
      RowBox[{
      "14", "[", "55", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"15", "[", "40", "]"}], "\<\"\"\>", 
      RowBox[{
      "14", "[", "89", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"15", "[", "42", "]"}], "\<\"\"\>", 
      RowBox[{
      "14", "[", "144", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{"30", "[", "55", "]"}], "\<\"\"\>", 
      RowBox[{
      "1", "[", "843", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{
      "15", "[", "89", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{
      "15", "[", "144", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{
      "15", "[", "233", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
     {
      RowBox[{
      "1", "[", "1364", 
       "]"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\
\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Right}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$, TableAlignments -> Right]]]], "Text",
  CellChangeTimes->{3.48430179963*^9},ExpressionUUID->
  "f2318e54-2ad9-4806-8c32-38f820839e81"]
}], "Text",
 CellChangeTimes->{{3.4842407623290772`*^9, 3.484240762500677*^9}, {
   3.4842408637602773`*^9, 3.484240863853877*^9}, {3.484240942477877*^9, 
   3.4842409430550776`*^9}, {3.484241007217878*^9, 3.484241007405077*^9}, 
   3.484241229245677*^9, {3.484249166644477*^9, 3.4842491709656773`*^9}, {
   3.484249242257677*^9, 3.4842493329264774`*^9}, {3.484249718506277*^9, 
   3.4842497345274777`*^9}, {3.4842497849154778`*^9, 
   3.4842498175506773`*^9}, {3.484301278882*^9, 3.484301285916*^9}, {
   3.484301706625*^9, 3.48430171808*^9}, {3.484301762744*^9, 
   3.484301779515001*^9}, {3.495050703617*^9, 3.495050724342*^9}, {
   3.495050771883*^9, 3.49505079623*^9}, {3.4971948707834888`*^9, 
   3.4971948938144884`*^9}, {3.4984077963232937`*^9, 3.498407796354294*^9}, {
   3.4987558684890003`*^9, 3.498755868592*^9}, {3.498842172447*^9, 
   3.498842203481*^9}, 3.49884283241*^9, 3.498842874619*^9, {
   3.544873690472845*^9, 3.5448736909246607`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cb3a58d2-bba3-4847-b245-5c1f069ca043"]
}, Closed]],

Cell[CellGroupData[{

Cell["Patterns in the preimage count frequencies", "Subsection",
 CellChangeTimes->{{3.4976980582325397`*^9, 3.4976981028245387`*^9}, {
   3.497698189312538*^9, 3.497698189880539*^9}, {3.497715786252*^9, 
   3.497715789299*^9}, 3.498406720799294*^9, {3.498755452308*^9, 
   3.498755452957*^9}, {3.498842966793*^9, 
   3.498843003260999*^9}},ExpressionUUID->"99fa64dc-975c-4d55-b34e-\
b1a4f97294d0"],

Cell[TextData[{
 StyleBox["InPCFs",
  FontFamily->"Courier New"],
 " is the general function that allows picking out the preimage count \
frequencies (PCFs) of the given type specified in the ",
 StyleBox["pattern ",
  FontSlant->"Italic"],
 "argument, for all lattice sizes from ",
 StyleBox["nmax ",
  FontSlant->"Italic"],
 "down to ",
 StyleBox["nmin, ",
  FontSlant->"Italic"],
 "relative to the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, radius-",
 StyleBox["r ",
  FontSlant->"Italic"],
 "rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", in periodic boundary condition; the other function options are the same \
as those for PCFs. The type of preimage count frequency is specified by ",
 StyleBox["any",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 " ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " pattern of the form x_[y_].\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": The second argument is expected to have the form PCFs",
 StyleBox["[rnum,k,r,nmax,nmin,GoEselection]",
  FontFamily->"Courier New"],
 StyleBox[" or the list returned by it.\n",
  FontFamily->"Times New Roman"],
 StyleBox["Example of usage",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[":\n",
  FontFamily->"Times New Roman"],
 "InPCFs[1[_], PCFs[3, 2, 1, 10, 1, noGoE]]\[LineSeparator]{{10, 1[123]}, {9, \
1[76]}, {8, 1[47]}, {7, 1[29]}, {6, 1[18]}, {5, 1[11]}, {4, 1[7]}, {3, 1[4]}, \
{2, 1[3]}, {2, 1[1]}}\nInPCFs[1[x_] /; x > 50, PCFs[3, 2, 1, 15, 1]]\
\[LineSeparator]{{15, 1[1364]}, {14, 1[843]}, {13, 1[521]}, {12, 1[322]}, \
{11, 1[199]}, {10, 1[123]}, {9, 1[76]}}\nInPCFs[x_[y_] /; x == y, PCFs[3, 2, \
1, 15, 1]]\[LineSeparator]{{8, 8[8]}, {2, 1[1]}}"
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.490377713920688*^9, 3.490377788966688*^9}, 
   3.497194510825489*^9, {3.497194547742489*^9, 3.497194588964489*^9}, {
   3.497194663556489*^9, 3.4971946670284886`*^9}, {3.4971947213494887`*^9, 
   3.497194867629489*^9}, {3.497195112190489*^9, 3.4971951216844883`*^9}, {
   3.4971951659344883`*^9, 3.497195287277489*^9}, {3.4971953196064887`*^9, 
   3.497195360751489*^9}, {3.497195398789489*^9, 3.4971956101404886`*^9}, {
   3.497195712164489*^9, 3.497195785637489*^9}, {3.4971958232764883`*^9, 
   3.497195880421489*^9}, {3.4971965135904884`*^9, 3.497196574637489*^9}, {
   3.497196619677489*^9, 3.497196679652489*^9}, {3.497196715990489*^9, 
   3.497196781988489*^9}, {3.4971968209744887`*^9, 3.497196840949489*^9}, {
   3.497196898807489*^9, 3.497196913588488*^9}, {3.497197002925489*^9, 
   3.497197338772489*^9}, {3.4976981169305387`*^9, 3.497698166880539*^9}, {
   3.497698287377539*^9, 3.497698293569538*^9}, {3.497701319354539*^9, 
   3.4977013458645396`*^9}, {3.497701376435539*^9, 3.4977014674645386`*^9}, {
   3.497705047105539*^9, 3.4977051042725387`*^9}, 3.497712984159*^9, 
   3.49771304016*^9, {3.497713097092*^9, 3.49771310178*^9}, {
   3.497713132069*^9, 3.497713181068*^9}, {3.497713231108*^9, 
   3.497713267804*^9}, {3.497715963124*^9, 3.497715964468*^9}, {
   3.4977168985880003`*^9, 3.497716931284*^9}, {3.497717185367*^9, 
   3.4977171890360003`*^9}, {3.4977172812470007`*^9, 3.497717321619*^9}, {
   3.4984067208752937`*^9, 3.498406720910294*^9}, {3.498407757964294*^9, 
   3.498407761615294*^9}, {3.498407796361294*^9, 3.498407796378294*^9}, 
   3.498563189045*^9, {3.498755868624*^9, 3.498755868678*^9}, {
   3.498843200701*^9, 3.498843213428*^9}, 3.545065923009575*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"10ba96d5-c0cc-4158-8b06-00cb4b0db71e"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InPCFs", "[", 
      RowBox[{"pattern_", ",", 
       RowBox[{"PCFs", "[", 
        RowBox[{"rnum_Integer", ",", 
         RowBox[{"k_Integer", ":", "2"}], ",", 
         RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer", 
         ",", 
         RowBox[{"GoEselection_Symbol", ":", "noGoE"}]}], "]"}]}], "]"}], ":=",
      "\[IndentingNewLine]", 
     RowBox[{"InPCFs", "[", 
      RowBox[{"pattern", ",", 
       RowBox[{"PCFs", "[", 
        RowBox[{
        "rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin", ",", 
         "GoEselection"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InPCFs", "[", 
      RowBox[{"pattern_", ",", "pimagefreqs_List"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "auxpimagefreqs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"auxpimagefreqs", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"First", "@", "#"}], "}"}], ",", 
              RowBox[{"Reverse", "[", 
               RowBox[{"Rest", "@", "#"}], "]"}]}], "]"}], "&"}], "/@", 
           "pimagefreqs"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"auxpimagefreqs", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}],
              "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}], "/@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"List", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"auxpimagefreqs", ",", "pattern"}], "]"}], ",", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"Flatten", "@", "auxpimagefreqs"}], ",", "pattern"}], 
              "]"}]}], "}"}]}], "]"}]}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.484302056757*^9, 3.48430211988*^9}, {3.484304467414*^9, 
   3.4843045481940036`*^9}, {3.484304586379*^9, 3.484304700524*^9}, {
   3.484305205368*^9, 3.484305216195*^9}, {3.484305292395*^9, 
   3.48430548781*^9}, {3.484305518657*^9, 3.484305535987*^9}, {
   3.48430564727*^9, 3.4843056658789997`*^9}, {3.484305767381*^9, 
   3.484305767513*^9}, {3.484305801174*^9, 3.484305810861*^9}, {
   3.484305847235*^9, 3.484305854647001*^9}, {3.484305905125*^9, 
   3.4843059832320004`*^9}, {3.484306044006*^9, 3.484306049633*^9}, 
   3.484306082751*^9, {3.484306128849*^9, 3.484306200669*^9}, {
   3.484306287724*^9, 3.484306336867*^9}, {3.484306448599*^9, 
   3.4843065209630003`*^9}, {3.484306622981*^9, 3.484306632033*^9}, {
   3.484306900691*^9, 3.484306938151*^9}, {3.484307901703*^9, 
   3.48430792616*^9}, 3.484307979058*^9, {3.484308047381*^9, 
   3.484308084784*^9}, {3.484310689082*^9, 3.484310710016*^9}, {
   3.4843192163*^9, 3.484319256203*^9}, {3.484319306101*^9, 
   3.484319306609*^9}, {3.484319573497*^9, 3.484319658218*^9}, 
   3.484320563724*^9, {3.484331319437001*^9, 3.484331321845001*^9}, 
   3.484331459479*^9, {3.495050520637*^9, 3.495050521196*^9}, {
   3.495050831204*^9, 3.495050835864*^9}, 3.4953015088486*^9, 
   3.4976985061785383`*^9, 3.497698552986539*^9, 3.497704694500539*^9, {
   3.49770473211754*^9, 3.497704746396541*^9}, {3.497704788194539*^9, 
   3.497704893134539*^9}, 3.4977049326945386`*^9, {3.497712503999*^9, 
   3.497712519672*^9}, {3.49771257556*^9, 3.497712619184*^9}, {
   3.497712983788*^9, 3.497712983802*^9}, {3.497713040055001*^9, 
   3.497713040068*^9}, {3.4984077963812947`*^9, 3.498407796383294*^9}, 
   3.498563068720001*^9, {3.498755868687001*^9, 3.498755868695*^9}, {
   3.498842478774*^9, 3.498842519704*^9}, {3.498842635604*^9, 
   3.498842680297*^9}, {3.49884283243*^9, 3.498842832442*^9}, {
   3.498842874196*^9, 3.498842874249*^9}, {3.4989028267526703`*^9, 
   3.49890283470567*^9}, {3.49890291691267*^9, 3.49890292687867*^9}, {
   3.545066011917138*^9, 3.545066034051219*^9}, {3.545066263122472*^9, 
   3.545066269487988*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"f6d3462a-e489-443e-b1d8-17e8be806382"],

Cell[TextData[{
 StyleBox["SeqFromInPCFs",
  FontFamily->"Courier New"],
 " takes all the patterns generated in ",
 StyleBox["InPCFs",
  FontFamily->"Courier New"],
 " of the given ",
 StyleBox["patterntype",
  FontSlant->"Italic"],
 ", and returns the actual numerical ",
 StyleBox["sequence",
  FontWeight->"Bold"],
 " they define (see the examples below). This refers to all lattice sizes \
from ",
 StyleBox["nmin",
  FontSlant->"Italic"],
 " to ",
 StyleBox["nmax, ",
  FontSlant->"Italic"],
 "relative to the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, radius-",
 StyleBox["r ",
  FontSlant->"Italic"],
 "rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", in periodic boundary condition. The possible ",
 StyleBox["patterntypes",
  FontSlant->"Italic"],
 " refer to the preimage count frequencies, and is specified by the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " pattern x_[y_]. The examples used here are: _[1] for reversible \
configurations (",
 StyleBox["patterntype",
  FontSlant->"Italic"],
 " Rev); 1[_] for configurations with the maximum number of preimages, herein \
referred to as maximally non-reversible configurations (",
 StyleBox["patterntype",
  FontSlant->"Italic"],
 " MaxNonRev); and _[\[EmptySet]] for GoE configurations (",
 StyleBox["patterntype",
  FontSlant->"Italic"],
 " GoE).",
 StyleBox["\n",
  FontFamily->"Times New Roman"],
 StyleBox["Examples of usage",
  FontFamily->"Times New Roman",
  FontWeight->"Bold"],
 StyleBox[":\n-- ",
  FontFamily->"Times New Roman"],
 StyleBox["Maximally non-reversible ICs:\[LineSeparator]",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox["SeqFromInPCFs[MaxNonRev, {3, 2, 1, 15, 1}]\[LineSeparator]{1364, \
843, 521, 322, 199, 123, 76, 47, 29, 18, 11, 7, 4, 3, 1}\n-- ",
  FontFamily->"Times New Roman"],
 StyleBox["Reversible ICs:\[LineSeparator]",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox["SeqFromInPCFs[Rev, {3, 2, 1, 15, 1}]\[LineSeparator]{1364, 841, \
521, 324, 199, 121, 76, 49, 29, 16, 11, 9, 4, 1, 2}\n-- ",
  FontFamily->"Times New Roman"],
 StyleBox["GoE configurations:\[LineSeparator]",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 StyleBox["SeqFromInPCFs[GoE, {3, 2, 1, 15, 1}]\[LineSeparator]{28158, 13757, \
6695, 3243, 1562, 747, 354, 166, 77, 35, 15, 6, 3, 2, 0}",
  FontFamily->"Times New Roman"]
}], "Text",
 CellChangeTimes->{{3.479551735344697*^9, 3.479551767808297*^9}, {
   3.479552450613697*^9, 3.479552546772097*^9}, {3.4795526105760965`*^9, 
   3.4795526617944965`*^9}, {3.479553106979497*^9, 3.479553272847297*^9}, {
   3.479553303782097*^9, 3.479553307385697*^9}, {3.479553373124097*^9, 
   3.479553418036497*^9}, {3.479553578116697*^9, 3.479553606954097*^9}, {
   3.4795536381470966`*^9, 3.479553842656097*^9}, {3.479553873497297*^9, 
   3.479554070121297*^9}, {3.479554127232897*^9, 3.479554157465697*^9}, {
   3.479555120808297*^9, 3.479555138763897*^9}, {3.4795552297984967`*^9, 
   3.479555243900897*^9}, {3.4795552920268965`*^9, 3.479555415127097*^9}, {
   3.479555449658896*^9, 3.479555459408896*^9}, {3.479556002573897*^9, 
   3.4795561133514967`*^9}, 3.479556182506297*^9, {3.479556217107097*^9, 
   3.4795563199206967`*^9}, {3.479556438754897*^9, 3.4795564768344965`*^9}, {
   3.479556509157697*^9, 3.479556546294297*^9}, {3.479556634786096*^9, 
   3.479557066574497*^9}, {3.479569325360304*^9, 3.479569420317504*^9}, {
   3.479569457064104*^9, 3.479569483006904*^9}, {3.479569845559904*^9, 
   3.479569942977104*^9}, {3.479569986994104*^9, 3.4795700120165043`*^9}, {
   3.479570069128104*^9, 3.479570144632104*^9}, {3.479570280906704*^9, 
   3.4795703433223042`*^9}, {3.479570381947904*^9, 3.479570391151904*^9}, {
   3.479570465463704*^9, 3.4795704756973042`*^9}, {3.479570528019704*^9, 
   3.479570624287304*^9}, {3.4795706672497044`*^9, 3.479570690337704*^9}, {
   3.4795707219991045`*^9, 3.4795707704527044`*^9}, {3.479570824397504*^9, 
   3.479570834069504*^9}, {3.479570871025904*^9, 3.4795708787947044`*^9}, {
   3.484148320487*^9, 3.484148365797*^9}, {3.484148423204*^9, 
   3.484148624324*^9}, 3.484148720757*^9, {3.484148779221*^9, 
   3.484148844351*^9}, {3.4841489449630003`*^9, 3.484148974502*^9}, {
   3.484149030008*^9, 3.484149055905*^9}, {3.484149240887*^9, 
   3.4841492883270006`*^9}, {3.490377713920688*^9, 3.490377788966688*^9}, 
   3.497194510825489*^9, {3.497194547742489*^9, 3.497194588964489*^9}, {
   3.497194663556489*^9, 3.4971946670284886`*^9}, {3.4971947213494887`*^9, 
   3.497194867629489*^9}, {3.497195112190489*^9, 3.4971951216844883`*^9}, {
   3.4971951659344883`*^9, 3.497195287277489*^9}, {3.4971953196064887`*^9, 
   3.497195360751489*^9}, {3.497195398789489*^9, 3.4971956101404886`*^9}, {
   3.497195712164489*^9, 3.497195785637489*^9}, {3.4971958232764883`*^9, 
   3.497195880421489*^9}, {3.4971965135904884`*^9, 3.497196574637489*^9}, {
   3.497196619677489*^9, 3.497196679652489*^9}, {3.497196715990489*^9, 
   3.497196781988489*^9}, {3.4971968209744887`*^9, 3.497196840949489*^9}, {
   3.497196898807489*^9, 3.497196913588488*^9}, {3.497197002925489*^9, 
   3.497197338772489*^9}, {3.4976981169305387`*^9, 3.497698166880539*^9}, {
   3.497698287377539*^9, 3.497698293569538*^9}, {3.497701319354539*^9, 
   3.4977013458645396`*^9}, {3.497701376435539*^9, 3.4977014674645386`*^9}, {
   3.497705047105539*^9, 3.4977051042725387`*^9}, 3.497712984159*^9, 
   3.49771304016*^9, {3.497713097092*^9, 3.49771310178*^9}, {
   3.497713132069*^9, 3.497713181068*^9}, {3.497713231108*^9, 
   3.497713267804*^9}, {3.497715828053*^9, 3.497715930652*^9}, {
   3.497715983526*^9, 3.497715994092*^9}, {3.497716259283*^9, 
   3.497716347149*^9}, {3.4977164032209997`*^9, 3.497716483947*^9}, {
   3.497716519408*^9, 3.497716791893*^9}, {3.498406721047294*^9, 
   3.4984067211102943`*^9}, {3.498407765637294*^9, 3.4984077682312946`*^9}, {
   3.498843225154*^9, 3.498843235786*^9}, 3.545065977336907*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e27f4317-1860-4b01-beb1-83cf7bbaa26f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SeqFromInPCFs", "[", 
    RowBox[{"patterntype_", ",", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}], ",", "nmax_Integer", ",", "nmin_Integer"}], 
      "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pattern", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pattern", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"patterntype", ",", "\[IndentingNewLine]", "MaxNonRev", ",", 
         RowBox[{"1", "[", "_", "]"}], ",", "\[IndentingNewLine]", "Rev", ",", 
         RowBox[{"_", "[", "1", "]"}], ",", "\[IndentingNewLine]", "GoE", ",", 
         RowBox[{"_", "[", "\[EmptySet]", "]"}], ",", "\[IndentingNewLine]", 
         "_", ",", 
         "\"\<Unknown type of pattern to be found in the requested \
PCFs!\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"patterntype", ",", "\[IndentingNewLine]", "MaxNonRev", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         RowBox[{"InPCFs", "[", 
          RowBox[{"pattern", ",", 
           RowBox[{"PCFs", "[", 
            RowBox[{"rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "Rev", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "0"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         RowBox[{"InPCFs", "[", 
          RowBox[{"pattern", ",", 
           RowBox[{"PCFs", "[", 
            RowBox[{"rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "GoE", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "0"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         RowBox[{"InPCFs", "[", 
          RowBox[{"pattern", ",", 
           RowBox[{"PCFs", "[", 
            RowBox[{
            "rnum", ",", "k", ",", "r", ",", "nmax", ",", "nmin", ",", 
             "GoE"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "_", ",", 
        "\"\<Unknown type of pattern to be found in the requested \
PCFs!\>\""}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.497700710690539*^9, {3.497700777074539*^9, 3.497700784331539*^9}, {
   3.497700948507539*^9, 3.497700998762539*^9}, {3.497701654195539*^9, 
   3.497701660911539*^9}, {3.497701769651539*^9, 3.497701776163539*^9}, {
   3.4977018256755385`*^9, 3.49770184234054*^9}, {3.497701968539539*^9, 
   3.4977022358855386`*^9}, {3.497702290572539*^9, 3.4977024111825385`*^9}, {
   3.497702450837539*^9, 3.4977024716135387`*^9}, {3.497702538182539*^9, 
   3.4977026108305387`*^9}, {3.4977051678865385`*^9, 3.497705211014539*^9}, {
   3.49771271265*^9, 3.497712714209*^9}, {3.497712817091*^9, 
   3.497712867802*^9}, {3.4977129097060003`*^9, 3.497712932401*^9}, 
   3.497712983814*^9, {3.497713040079*^9, 3.497713040087*^9}, {
   3.497713297201*^9, 3.497713350936*^9}, {3.497713413256*^9, 
   3.497713428168*^9}, {3.497713577*^9, 3.497713708364001*^9}, {
   3.4977138335369997`*^9, 3.49771388229*^9}, {3.497713916914*^9, 
   3.497713947624*^9}, {3.497714127384*^9, 3.497714272841*^9}, {
   3.497714303224*^9, 3.497714354473*^9}, {3.497714394505*^9, 
   3.49771445224*^9}, {3.497714543481*^9, 3.497714545473*^9}, {
   3.497714632633*^9, 3.497714639049*^9}, {3.497714679649*^9, 
   3.497714710953*^9}, 3.49771481744*^9, {3.497715153*^9, 
   3.497715215137*^9}, {3.497715293521*^9, 3.497715326849*^9}, {
   3.497715463665*^9, 3.4977154890959997`*^9}, {3.498407796395294*^9, 
   3.498407796412294*^9}, 3.4985630831619997`*^9, {3.498755868701*^9, 
   3.498755868711*^9}, {3.498842551663*^9, 3.498842603271*^9}, {
   3.49884273699*^9, 3.498842786408*^9}, {3.498842831799*^9, 
   3.498842832003*^9}, {3.498842874293*^9, 3.498842874323*^9}, {
   3.498842912279*^9, 3.498842925797*^9}, {3.545065968542489*^9, 
   3.545065969868768*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"01485804-632e-4fdc-8913-78adfb6f047b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["13. Preimages of noncyclic configurations", "Section",
 CellChangeTimes->{{3.490377607359688*^9, 3.490377615926688*^9}, {
   3.4961621858290834`*^9, 3.496162203172085*^9}, 3.498406753989294*^9, {
   3.722676358904593*^9, 
   3.7226763597929378`*^9}},ExpressionUUID->"592c764a-6b6c-4ce1-81cd-\
4198d8e62510"],

Cell[TextData[{
 StyleBox["Previous",
  FontSlant->"Italic"],
 StyleBox["Preimages",
  FontSlant->"Italic"],
 " generates the immediate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["1", "st"]}], TraditionalForm]],ExpressionUUID->
  "7f57faa4-2bf1-4fe6-a5c4-c4fed2c83b18"],
 "-order) preimages, in non-cyclic configurations, for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, one-dimensional cellular automaton ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " rule. Preimage",
 StyleBox["s",
  FontSlant->"Italic"],
 " generates the preimages for any order (the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{"nd", " "}]], TraditionalForm]],ExpressionUUID->
  "29193fed-d268-4686-9332-bb9a7a95d898"],
 "order preimage means the preimage of the preimage, etc).\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) All functions can handle arbitrary asymmetrical neighbourhood, by \
using FlexRadius.\n2) For a configuration with length ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", its preimage has length 2",
 StyleBox["n",
  FontSlant->"Italic"],
 "-1. Hence, the number of preimages grows too fast with the order, thus \
severely limiting the possibility of generating the basins.\n3) The argument ",
 StyleBox["preimage",
  FontSlant->"Italic"],
 " is overly constrained, as it has been defined to receive the output of ",
 StyleBox["PreviousPreimages",
  FontSlant->"Italic"],
 ", from where only the length of the element \[LeftDoubleBracket]1,1\
\[RightDoubleBracket] is considered.\n4) It is highly desirable to implement \
a function that would directly calculate all preimages from a given input \
configuration. This would provide the inverse of the function ",
 StyleBox["SubsequentAcyclicBlocks",
  FontSlant->"Italic"],
 " below."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQ/YR7Dft8l5eObb3PHEB0bX/+9mtAOkzg9iMQ/a9C
9weINnl1/h+IFlumxnUdSG/KiAPTE4568oHoSUIlYJon76oUiFYKO60Coh8l
pRuBaLf5iiZgfXpqTX+/Ac35rd0NotUOyTXz8rxy9DlR3wGiVzW9LOED0o/N
jEpBtI4zRyWInv7fpAVE3+rS7ADRSjl/ukF02veAaSBa4OXv2SC6pUZjjgiQ
XnTtzSoQfc1k93oQPXnlsjMg2tX9lJookI44VWYMoi9sfpsLotuXVxeJgu3p
KAfRd7d21ILoy/tUMtYJvHLs2qQGpk2W9L4D0W7qfWB64y/RSwlzXjlWbVe+
DqIXmercAdE8cxk/gOi8l7bWiUC6ru+5G4h2Z1pzbzuQdmiRfQSi/apNajjv
vnHctPNDPYh2DGPuBtG7NnuBaQCy6coz
  "],
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d96cc0e6-93a1-4d80-8b00-983d239053a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PreviousPreimages", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"preimage_List", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"preimage", "===", 
          RowBox[{"{", "}"}]}], ",", "r", ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"preimage", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], "/", 
           "2"}], "\[RightFloor]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\[LeftCeiling]", "rr", "\[RightCeiling]"}], "+", "1"}],
              ",", 
             RowBox[{
              RowBox[{"\[LeftCeiling]", "rr", "\[RightCeiling]"}], "+", 
              RowBox[{"2", "rr"}], "+", "1"}]}], "}"}]}], "]"}]}], "}"}], 
       "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"CellularAutomaton", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum", ",", "k", ",", 
             RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#", ",", 
           "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"\[LeftCeiling]", 
            RowBox[{"4", "rr"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}]}], 
       ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.445768236625*^9, 3.44576825403125*^9}, {
   3.445768679015625*^9, 3.44576871921875*^9}, {3.445768753515625*^9, 
   3.4457687541875*^9}, 3.445771589359375*^9, {3.445778216796875*^9, 
   3.445778246359375*^9}, 3.445778341625*^9, {3.445778641359375*^9, 
   3.44577864253125*^9}, {3.445778753046875*^9, 3.44577875578125*^9}, 
   3.498407796113293*^9, {3.571735190228249*^9, 3.571735193488015*^9}, 
   3.746440648068314*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"fab5a271-23ce-4255-92cb-97ea0634e31e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Preimages", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"order_Integer", ":", "1"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PreviousPreimages", "[", 
       RowBox[{"rnum", ",", " ", "k", ",", "r", ",", "#"}], "]"}], "&"}], ",", 
     RowBox[{"{", "}"}], ",", "order"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.498407796123294*^9, 3.498407796127294*^9}, {
  3.571735182609066*^9, 3.571735188159344*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"684f0835-abf5-4714-898d-79d703268f94"],

Cell[TextData[{
 "\nGiven an input block and and an input rule, ",
 StyleBox["SubsequentAcyclicBlocks",
  FontSlant->"Italic"],
 " yields the sequence of blocks that are subsequently obtained by applying \
the input rule to the input block, with acyclic boundary condition, until no \
longer possible.",
 StyleBox["\nExamples of use:",
  FontWeight->"Bold"],
 "\nSubsequentAcyclicBlocks[184, 2, 1, {0, 1, 0, 1, 1, 1, 1}]  =>  {{0, 1, 0, \
1, 1, 1, 1}, {0, 1, 1, 1, 1}, {1, 1, 1}, {1}}\nSubsequentAcyclicBlocks[184, \
2, 2, {0, 1, 0, 1, 1, 1, 1}]  =>  {{0, 1, 0, 1, 1, 1, 1}, {0, 0, 0}}\n\
SubsequentAcyclicBlocks[184, 2, 1, {0, 1, 0, 1, 1, 1}]  =>  {{0, 1, 0, 1, 1, \
1}, {0, 1, 1, 1}, {1, 1}}\nSubsequentAcyclicBlocks[184, 2, 2, {0, 1, 0, 1, 1, \
1}]  =>  {{0, 1, 0, 1, 1, 1}, {0, 0}}\nSubsequentAcyclicBlocks[184, 2, 1.5, \
{0, 1, 0, 1, 1, 1, 1}]  =>  {{0, 1, 0, 1, 1, 1, 1}, {1, 0, 1, 0}, {0}}\n\
SubsequentAcyclicBlocks[184, 2, 1.5, {0, 1, 0, 1, 1, 1}]  =>  {{0, 1, 0, 1, \
1, 1}, {1, 0, 1}}\nSubsequentAcyclicBlocks[3, 2, 0.5, {0, 1, 0, 1, 1}]  =>  \
{{0, 1, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0}, {1, 0}, {0}}\n\
SubsequentAcyclicBlocks[3, 2, 0.5, {0, 1, 0, 1}]  =>  {{0, 1, 0, 1}, {1, 0, \
1}, {0, 1}, {1}}\nSubsequentAcyclicBlocks[3, 2, 0.5, {0, 1, 0}]  =>  {{0, 1, \
0}, {1, 0}, {0}}"
}], "Text",
 CellChangeTimes->{{3.535735604485756*^9, 3.5357356183087463`*^9}, {
   3.535735648520093*^9, 3.535735774258787*^9}, {3.535736949239204*^9, 
   3.535736997875936*^9}, {3.535738290214608*^9, 3.535738361503502*^9}, {
   3.535738399631009*^9, 3.535738791866759*^9}, {3.571824534109571*^9, 
   3.5718245506931877`*^9}, {3.5718254469352703`*^9, 3.571825447215952*^9}, {
   3.571825793914702*^9, 3.571825817920673*^9}, 3.57182591286983*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"080cc158-00cd-4a67-93f8-e3ff2dce62be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SubsequentAcyclicBlocks", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"inputBlock_List", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"NestWhileList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"RuleOutputFromNeighbourhood", "[", 
           RowBox[{"#", ",", "rnum", ",", "k", ",", "r"}], "]"}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\[LeftFloor]", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], ",", "1"}], 
          "]"}]}], "&"}], ",", "inputBlock", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ")"}], "&"}]}], 
      "]"}], ",", 
     RowBox[{"Except", "[", 
      RowBox[{"{", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.498407796123294*^9, 3.498407796127294*^9}, 
   3.57159318615625*^9, 3.57159336625*^9, {3.571593672453125*^9, 
   3.571593673109375*^9}, 3.5715937355625*^9, {3.571679976004093*^9, 
   3.571679996854738*^9}, {3.571680033995329*^9, 3.571680060476359*^9}, 
   3.571680125579092*^9, {3.571680307857374*^9, 3.571680315388707*^9}, 
   3.571680365813818*^9, {3.5716805465846443`*^9, 3.571680547177354*^9}, {
   3.571680608197919*^9, 3.571680627364345*^9}, 3.571680688427499*^9, {
   3.571680776751544*^9, 3.571680783323213*^9}, {3.571733475722907*^9, 
   3.571733550025399*^9}, {3.571733660020926*^9, 3.57173369306498*^9}, {
   3.571734423988065*^9, 3.571734438106151*^9}, {3.571735174266817*^9, 
   3.571735176689747*^9}, 3.571744177064125*^9, {3.571825447241493*^9, 
   3.571825467679595*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"b2c35f53-2909-4d77-8f87-db379d79bd4e"]
}, Closed]],

Cell[CellGroupData[{

Cell["14. Basins of attraction", "Section",
 CellChangeTimes->{{3.391419659320143*^9, 3.391419669184328*^9}, {
  3.3914202600239134`*^9, 3.391420260324345*^9}, {3.4956287392305*^9, 
  3.4956287404785*^9}, {3.4959943819602003`*^9, 3.4959943929681997`*^9}, {
  3.4959944254642*^9, 3.4959944264082*^9}, {3.496162334324083*^9, 
  3.4961623391160827`*^9}, {3.540897561498452*^9, 3.540897561962429*^9}, {
  3.7226763618292503`*^9, 
  3.722676362706469*^9}},ExpressionUUID->"7436b688-1b66-4393-baf9-\
70ceb65f0205"],

Cell[CellGroupData[{

Cell["\<\
Obtaining special configurations (Gardens of Eden, fixed points and limit \
cycles) from individual basins of attraction of their fields\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489489480323*^9, {3.784921221727049*^9, 3.784921269200087*^9}, {
   3.784921901103071*^9, 3.784921927346798*^9}, {3.7853211889284077`*^9, 
   3.785321284169497*^9}, {3.7853376261959476`*^9, 3.78533762652112*^9}, {
   3.811774519881496*^9, 3.811774620918352*^9}, {3.81177624352474*^9, 
   3.8117762654605107`*^9}},ExpressionUUID->"a356d31e-cacd-44f4-8e40-\
5b2726a56cbf"],

Cell[TextData[{
 StyleBox["GoEs",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all Garden of Eden configurations in the given basin of \
attraction.\n",
  FontSize->14],
 StyleBox["FixedPoints",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all fixed points in the given basin of attraction.\n",
  FontSize->14],
 StyleBox["LimitCycles",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all limit cycles in the given basin of attraction.\n",
  FontSize->14],
 StyleBox["GoEs2FixedPoint",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all Garden of Eden configurations in the given basin of \
attraction that lead to the given fixed point.\n",
  FontSize->14],
 StyleBox["GoEs2LimitCycle",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all Garden of Eden configurations in the given basin of \
attraction that lead to the given configuration that belongs to a limit \
cycle.\n",
  FontSize->14],
 StyleBox["Configs2FixedPoint",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all configurations in the given basin of attraction that \
lead to the given fixed point (excluding the GoEs and the fixed point).\n",
  FontSize->14],
 StyleBox["Configs2LimitCycle",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": Finds all configurations in the given basin of attraction that \
lead to the given configuration that belongs to a limit cycle (excluding the \
GoEs and the configurations in the cycle).\n\n",
  FontSize->14],
 StyleBox["Examples of usage",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[":\nConfigs2FixedPoint[BAField[184, 2, 1, 5], {0,1,0,0,1}]\n\
{{1,1,0,0,0}, {1,0,1,0,0}, {0,1,0,0,1}, {0,1,0,1,0}, {1,0,0,0,1}, \
{1,0,0,1,0}, {0,1,1,0,0}, {0,0,1,0,1}, {0,0,0,1,1}, {0,0,1,1,0}}\n\n\
LimitCycles[BAField[184, 2, 1, 5]]\n{{{0,1,1,1,1}\[DirectedEdge]{1,1,1,1,0}, \
{1,1,1,1,0}\[DirectedEdge]{1,1,1,0,1}, {1,1,1,0,1}\[DirectedEdge]{1,1,0,1,1}, \
{1,1,0,1,1}\[DirectedEdge]{1,0,1,1,1}, \
{1,0,1,1,1}\[DirectedEdge]{0,1,1,1,1}}, \n \
{{1,0,1,1,0}\[DirectedEdge]{0,1,1,0,1}, \
{0,1,1,0,1}\[DirectedEdge]{1,1,0,1,0}, {1,1,0,1,0}\[DirectedEdge]{1,0,1,0,1}, \
{1,0,1,0,1}\[DirectedEdge]{0,1,0,1,1}, \
{0,1,0,1,1}\[DirectedEdge]{1,0,1,1,0}}, \n \
{{1,0,0,1,0}\[DirectedEdge]{0,1,0,0,1}, \
{0,1,0,0,1}\[DirectedEdge]{1,0,1,0,0}, {1,0,1,0,0}\[DirectedEdge]{0,1,0,1,0}, \
{0,1,0,1,0}\[DirectedEdge]{0,0,1,0,1}, \
{0,0,1,0,1}\[DirectedEdge]{1,0,0,1,0}}, \n \
{{0,0,0,0,1}\[DirectedEdge]{1,0,0,0,0}, \
{1,0,0,0,0}\[DirectedEdge]{0,1,0,0,0}, {0,1,0,0,0}\[DirectedEdge]{0,0,1,0,0}, \
{0,0,1,0,0}\[DirectedEdge]{0,0,0,1,0}, \
{0,0,0,1,0}\[DirectedEdge]{0,0,0,0,1}}}\n\nConfigs2LimitCycle[BAField[184, 2, \
1, 5], {1,1,1,1,0}]\n{{{1,0,1,1,1}, {1,1,0,1,1}, {0,1,1,1,1}, {1,1,1,0,1}, \
{1,1,1,1,0}}}",
  FontSize->14]
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3914211042879057`*^9, 3.3914212635869665`*^9}, {3.3915356708661165`*^9, 
   3.391535696823441*^9}, {3.4959835310322*^9, 3.4959836168402*^9}, {
   3.4959836470242*^9, 3.4959836614322*^9}, 3.496074758522681*^9, {
   3.496160802413084*^9, 3.496160884501084*^9}, {3.496161049462085*^9, 
   3.496161072916085*^9}, {3.4961612013740845`*^9, 3.496161235669084*^9}, {
   3.4961612789490848`*^9, 3.496161285420085*^9}, {3.496161334237084*^9, 
   3.4961618164920845`*^9}, {3.4961618916370845`*^9, 3.496162080492084*^9}, 
   3.498406721555294*^9, 3.4984069032312937`*^9, 3.498407796285294*^9, {
   3.571565697578125*^9, 3.571565698046875*^9}, {3.571565784578125*^9, 
   3.571565837015625*^9}, 3.752510166974691*^9, {3.784921274535612*^9, 
   3.784921328013501*^9}, {3.784921477697596*^9, 3.784921531103045*^9}, {
   3.784921617266711*^9, 3.784921680447485*^9}, {3.784921722011413*^9, 
   3.784921756524401*^9}, {3.784921879858329*^9, 3.784921887194293*^9}, 
   3.784922246262734*^9, {3.784922278109473*^9, 3.784922292444047*^9}, {
   3.784922464408348*^9, 3.784922466519412*^9}, {3.784922531656814*^9, 
   3.7849227570195837`*^9}, {3.811762191759948*^9, 3.811762191984624*^9}, {
   3.811771922123218*^9, 3.811771951384499*^9}, {3.811772983007913*^9, 
   3.811772984291032*^9}, {3.811774636078945*^9, 3.8117747056882563`*^9}, {
   3.81177621890226*^9, 3.811776236173641*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9c533ad8-e08a-4ffd-9bda-716aade7071d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FixedPoints", "[", "graph_Graph", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "graph", "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "===", 
         RowBox[{"Last", "[", "#", "]"}]}], ")"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LimitCycles", "[", "graph_Graph", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"FindCycle", "[", 
     RowBox[{"graph", ",", "Infinity", ",", "All"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GoEs", "[", "graph_Graph", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"First", "/@", 
       RowBox[{"EdgeList", "[", "graph", "]"}]}], ",", 
      RowBox[{"First", "/@", 
       RowBox[{"(", 
        RowBox[{"Reverse", "/@", 
         RowBox[{"EdgeList", "[", "graph", "]"}]}], ")"}]}]}], "]"}]}], ";"}],
   "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GoEs2FixedPoint", "[", 
     RowBox[{"graph_Graph", ",", "configFP_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"First", "/@", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"GraphDistance", "[", 
            RowBox[{"graph", ",", "#", ",", "configFP"}], "]"}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"GoEs", "[", "graph", "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "\[NotEqual]", "\[Infinity]"}], 
         ")"}], "&"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GoEs2LimitCycle", "[", 
     RowBox[{"graph_Graph", ",", "configInCycle_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"First", "/@", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"GraphDistance", "[", 
            RowBox[{"graph", ",", "#", ",", "configInCycle"}], "]"}]}], "}"}],
          "&"}], "/@", 
        RowBox[{"GoEs", "[", "graph", "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "\[NotEqual]", "\[Infinity]"}], 
         ")"}], "&"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Configs2FixedPoint", "[", 
     RowBox[{"graph_Graph", ",", "configFP_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"WeaklyConnectedComponents", "[", 
        RowBox[{"graph", ",", 
         RowBox[{"{", "configFP", "}"}]}], "]"}]}], ",", 
      RowBox[{"GoEs", "[", "graph", "]"}], ",", 
      RowBox[{"{", "configFP", "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Configs2LimitCycle", "[", 
    RowBox[{"graph_Graph", ",", "configInCycle_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"LimitCycles", "[", "graph", "]"}], "\[Equal]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"WeaklyConnectedComponents", "[", 
         RowBox[{"graph", ",", 
          RowBox[{"{", "configInCycle", "}"}]}], "]"}]}], ",", 
       RowBox[{"GoEs", "[", "graph", "]"}], ",", 
       RowBox[{"First", "/@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"LimitCycles", "[", "graph", "]"}]}]}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.496075186677681*^9, 3.4960752997896776`*^9}, {
   3.496075353949679*^9, 3.496075358509681*^9}, {3.496075410965681*^9, 
   3.496075469595681*^9}, {3.496075519092681*^9, 3.49607553106068*^9}, {
   3.496075625868681*^9, 3.496075636148681*^9}, {3.496077891868681*^9, 
   3.496077955653681*^9}, {3.496078134196681*^9, 3.496078149014681*^9}, {
   3.496078532053678*^9, 3.496078539276681*^9}, {3.496079912356681*^9, 
   3.4960799342046776`*^9}, 3.4960805562376814`*^9, {3.496155580889085*^9, 
   3.496155601448085*^9}, {3.496155900000085*^9, 3.496155900127084*^9}, {
   3.496156267239084*^9, 3.496156267967085*^9}, {3.496156339585085*^9, 
   3.496156359364083*^9}, {3.496156435744082*^9, 3.496156531447084*^9}, {
   3.496156562120085*^9, 3.496156563928084*^9}, {3.496156610152084*^9, 
   3.496156640056084*^9}, {3.496156840728084*^9, 3.496156847752085*^9}, {
   3.496156907032084*^9, 3.496156917872084*^9}, {3.4961572763220844`*^9, 
   3.496157278776085*^9}, 3.496160998615084*^9, 3.496161110551084*^9, 
   3.498406903243294*^9, 3.746440739998159*^9, {3.784921191988315*^9, 
   3.784921206184044*^9}, {3.784922071042666*^9, 3.784922074499126*^9}, {
   3.784922172425727*^9, 3.7849221738072643`*^9}, {3.811760597165994*^9, 
   3.811760598670102*^9}, 3.811762184501674*^9, {3.811767660701249*^9, 
   3.811767672543756*^9}, {3.811771843342861*^9, 3.811771870238269*^9}, 
   3.81177297674109*^9, 3.811773194305706*^9, {3.8117732372357187`*^9, 
   3.811773240995056*^9}, 3.8117737734843607`*^9, 3.811774282637476*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"5af10534-d35f-452a-8e9a-a66ebe4b1649"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Generating basins of attraction and their fields (as graph objects) for \
standard CAs\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798796`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241443`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.393144692832567*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.393147099458648*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489493816263*^9, {3.7828991873068857`*^9, 3.782899202746921*^9}, {
   3.785337660754999*^9, 3.785337663961199*^9}, {3.785337707370708*^9, 
   3.785337712910239*^9}},ExpressionUUID->"532262b4-038f-4a8e-8f2c-\
37b904b88b20"],

Cell[TextData[{
 "Generates the ",
 StyleBox["basin of attraction field",
  FontSlant->"Italic"],
 " (that is, all the basins of attraction) for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, one-dimensional cellular automaton ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " rule, under cyclic/periodic or cyclic/acyclic/aperiodic ",
 StyleBox["boundary ",
  FontSlant->"Italic"],
 "conditions. In the periodic case, which is the default, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the lattice length, while in the noncyclic case, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the order of the preimages. ",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": See the definition of \.b4order\.b4 in the documentation of the function \
Preimage",
 StyleBox["s",
  FontSlant->"Italic"],
 ". ",
 StyleBox["SimpleBAField",
  FontSlant->"Italic"],
 " and ",
 StyleBox["NoGraphBAField",
  FontSlant->"Italic"],
 " are just simplifications of the latter, respectively, by simplifying the \
plot, and by discarding it fully (while preserving the linkage between the \
configurations).\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": The function can handle any valid form of radius."
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.391420935204776*^9}, {
   3.3915345234862657`*^9, 3.391534870845744*^9}, {3.3915350414210196`*^9, 
   3.3915350944973392`*^9}, {3.391535185207774*^9, 3.39153518695028*^9}, {
   3.391535218305367*^9, 3.391535219627267*^9}, {3.3915353186696835`*^9, 
   3.391535398354264*^9}, {3.3915355072308207`*^9, 3.3915355210506926`*^9}, {
   3.4849372331932*^9, 3.4849373053744*^9}, {3.4959800569612*^9, 
   3.4959800999932*^9}, {3.4959819912972*^9, 3.4959819935692*^9}, {
   3.495982024258199*^9, 3.4959821136562*^9}, {3.495982145298199*^9, 
   3.4959821758882*^9}, {3.4959822585302*^9, 3.4959823038722*^9}, {
   3.4959977499762*^9, 3.4959977540642*^9}, {3.4959986661612*^9, 
   3.4959989425522003`*^9}, {3.4959990106372004`*^9, 3.4959990768722*^9}, {
   3.496160922933084*^9, 3.496160923421084*^9}, 3.496161299389085*^9, 
   3.4984067213272943`*^9, 3.498407796177294*^9, {3.679597176246757*^9, 
   3.679597269196431*^9}, {3.6796878545376177`*^9, 3.679687996094263*^9}, {
   3.679688110995464*^9, 3.679688125440738*^9}, {3.7828992069648857`*^9, 
   3.7828992085313606`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"16e77a05-dab9-45e7-b4f9-8ecdd08f2014"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BasinsOfAttraction", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
      RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
      RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"WeaklyConnectedGraphComponents", "@", 
     RowBox[{"BAField", "[", 
      RowBox[{
      "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "graphLayout", 
       ",", "boundary"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BasinsOfAttraction", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
     RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"BasinsOfAttraction", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "graphLayout", ",",
      "boundary"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.811767692523012*^9, 3.811767776314403*^9}, {
   3.90559173421905*^9, 3.905591774235943*^9}, 3.905591825437154*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"e2cd137e-d56d-4c69-9860-083c4885053e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BAField", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
      RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
      RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"boundary", ",", "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cyclic", ",", "periodic"}], "}"}], ",", "x"}], "]"}], "===",
         "True"}]}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[Rule]", 
           RowBox[{"CellularAutomaton", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rnum", ",", "k", ",", 
               RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
            "]"}]}], "&"}], "/@", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], 
          "]"}]}], ",", 
        RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "graphLayout", ",", "radial", ",", "\"\<RadialEmbedding\>\"", ",", 
           "_", ",", "\"\<SpiralEmbedding\>\""}], "]"}]}], ",", " ", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"acyclic", ",", "noncyclic", ",", "aperiodic"}], "}"}], 
          ",", "x"}], "]"}], "===", "True"}]}], ",", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Rule]", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}], "&"}], "/@", 
         RowBox[{"Preimages", "[", 
          RowBox[{"rnum", ",", "k", ",", "r", ",", "lengthORorder"}], "]"}]}],
         ",", 
        RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", " ", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "graphLayout", ",", "radial", ",", "\"\<RadialEmbedding\>\"", ",", 
           "_", ",", "\"\<SpiralEmbedding\>\""}], "]"}]}], ",", " ", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", "_", ",", 
      "\"\<Unknown option of boundary condition!\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BAField", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
     RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"BAField", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "graphLayout", ",",
      "boundary"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.389973606859375*^9, 3.38997373496875*^9}, {
   3.389974060515625*^9, 3.389974122921875*^9}, {3.38997433478125*^9, 
   3.389974390546875*^9}, 3.389974432*^9, {3.389977896671875*^9, 
   3.38997790746875*^9}, {3.390657056626388*^9, 3.390657079095425*^9}, {
   3.3906571101426983`*^9, 3.390657119424063*^9}, {3.390657171549734*^9, 
   3.390657173049753*^9}, {3.390658551770526*^9, 3.390658583864684*^9}, {
   3.390662041602205*^9, 3.3906620502429404`*^9}, {3.390666295625405*^9, 
   3.390666320047593*^9}, {3.390667460843445*^9, 3.390667479093677*^9}, {
   3.390668242400324*^9, 3.390668245072233*^9}, {3.390670831011583*^9, 
   3.390670870324586*^9}, {3.390670937137941*^9, 3.3906709646226683`*^9}, {
   3.3906710143889303`*^9, 3.390671045139324*^9}, {3.390671115608975*^9, 
   3.3906711180933824`*^9}, {3.390671184500482*^9, 3.390671310392719*^9}, {
   3.3906713804717407`*^9, 3.390671383253026*^9}, {3.390988539725233*^9, 
   3.390988565452227*^9}, {3.390990152113734*^9, 3.390990252528123*^9}, {
   3.3909909468865614`*^9, 3.390990947156951*^9}, {3.390991270582013*^9, 
   3.3909912713030496`*^9}, {3.3909970734461217`*^9, 3.390997110739747*^9}, {
   3.390997168542864*^9, 3.390997228428976*^9}, {3.390998161380494*^9, 
   3.390998183221901*^9}, {3.3909983262175183`*^9, 3.3909983264678783`*^9}, 
   3.3909985289089746`*^9, {3.391381227114571*^9, 3.391381292989294*^9}, {
   3.391381652766629*^9, 3.391381658725197*^9}, 3.391534442319554*^9, 
   3.4832000329658003`*^9, 3.484937186206001*^9, 3.4959673624122*^9, {
   3.4959822373792*^9, 3.4959822380352*^9}, 3.4959824639082*^9, {
   3.495997205691201*^9, 3.4959972060752*^9}, {3.4959973390832*^9, 
   3.4959973641382*^9}, {3.4959978016902*^9, 3.4959978032102003`*^9}, {
   3.495998173474199*^9, 3.4959984388052*^9}, {3.4959985013742*^9, 
   3.4959985500372*^9}, {3.4959987321162*^9, 3.4959987386692*^9}, {
   3.4959992681502*^9, 3.4959993022702*^9}, {3.496074108474681*^9, 
   3.496074184477681*^9}, {3.4960742152856803`*^9, 3.4960742716856813`*^9}, {
   3.496074339654681*^9, 3.496074346830681*^9}, 3.4984077961832943`*^9, {
   3.679836915009834*^9, 3.679836925363094*^9}, 3.679836962551869*^9, {
   3.778343054057691*^9, 3.778343060663423*^9}, {3.782898576771315*^9, 
   3.78289857774436*^9}, 3.811766752140682*^9, 3.811775860167558*^9, 
   3.8145396380135508`*^9, 3.873984137707726*^9, {3.873984236447606*^9, 
   3.873984238640475*^9}, {3.905591786013316*^9, 3.905591822317608*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"83d1546d-98d8-4f58-aa94-1eb5137bb4c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimpleBAField", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
      RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"boundary", ",", "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cyclic", ",", "periodic"}], "}"}], ",", "x"}], "]"}], "===",
         "True"}]}], " ", ",", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"CellularAutomaton", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rnum", ",", "k", ",", 
              RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
           "]"}]}], "&"}], "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], "]"}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"acyclic", ",", "noncyclic", ",", "aperiodic"}], "}"}], 
          ",", "x"}], "]"}], "===", "True"}]}], ",", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"CellularAutomaton", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rnum", ",", "k", ",", 
              RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
           "]"}]}], "&"}], "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], "]"}]}],
        "]"}], ",", "\[IndentingNewLine]", "_", ",", 
      "\"\<Unknown option of boundary condition!\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimpleBAField", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"SimpleBAField", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "boundary"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.389973606859375*^9, 3.38997373496875*^9}, {
   3.389974060515625*^9, 3.389974122921875*^9}, {3.38997433478125*^9, 
   3.389974390546875*^9}, 3.389974432*^9, {3.389977896671875*^9, 
   3.38997790746875*^9}, {3.390657056626388*^9, 3.390657079095425*^9}, {
   3.3906571101426983`*^9, 3.390657119424063*^9}, {3.390657171549734*^9, 
   3.390657173049753*^9}, {3.390658551770526*^9, 3.390658583864684*^9}, {
   3.390662041602205*^9, 3.3906620502429404`*^9}, {3.390666295625405*^9, 
   3.390666320047593*^9}, {3.390667460843445*^9, 3.390667479093677*^9}, {
   3.390668242400324*^9, 3.390668245072233*^9}, {3.390670831011583*^9, 
   3.390670870324586*^9}, {3.390670937137941*^9, 3.3906709646226683`*^9}, {
   3.3906710143889303`*^9, 3.390671045139324*^9}, {3.390671115608975*^9, 
   3.3906711180933824`*^9}, {3.390671184500482*^9, 3.390671310392719*^9}, {
   3.3906713804717407`*^9, 3.390671383253026*^9}, {3.390988539725233*^9, 
   3.390988565452227*^9}, {3.390990152113734*^9, 3.390990252528123*^9}, {
   3.3909909468865614`*^9, 3.390990947156951*^9}, {3.390991270582013*^9, 
   3.3909912713030496`*^9}, {3.3909970734461217`*^9, 3.390997110739747*^9}, {
   3.390997168542864*^9, 3.390997228428976*^9}, {3.390998161380494*^9, 
   3.390998183221901*^9}, {3.3909983262175183`*^9, 3.3909983264678783`*^9}, 
   3.3909985289089746`*^9, {3.391381227114571*^9, 3.391381292989294*^9}, {
   3.391381652766629*^9, 3.391381658725197*^9}, 3.391534442319554*^9, 
   3.4832000329658003`*^9, 3.484937186206001*^9, 3.4959673624122*^9, {
   3.4959822373792*^9, 3.4959822380352*^9}, 3.4959824639082*^9, {
   3.495997205691201*^9, 3.4959972060752*^9}, {3.4959973390832*^9, 
   3.4959973641382*^9}, {3.4959978016902*^9, 3.4959978032102003`*^9}, {
   3.495998173474199*^9, 3.4959984388052*^9}, {3.4959985013742*^9, 
   3.4959985500372*^9}, {3.4959987321162*^9, 3.4959987386692*^9}, {
   3.4959992681502*^9, 3.4959993022702*^9}, {3.496074108474681*^9, 
   3.496074184477681*^9}, {3.4960742152856803`*^9, 3.4960742716856813`*^9}, {
   3.496074339654681*^9, 3.496074346830681*^9}, 3.4984077961832943`*^9, 
   3.679596762888637*^9, {3.679596835248844*^9, 3.679596841912293*^9}, 
   3.679597165215685*^9, {3.6798369285863857`*^9, 3.679836933936679*^9}, 
   3.679836964887551*^9, {3.905591837471808*^9, 3.905591869468026*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"c32c40b5-c8f9-4e4a-af88-59631e027b1c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NoGraphBAField", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", 
      RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
      RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"boundary", ",", "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cyclic", ",", "periodic"}], "}"}], ",", "x"}], "]"}], "===",
         "True"}]}], " ", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Rule]", 
         RowBox[{"CellularAutomaton", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum", ",", "k", ",", 
             RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
          "]"}]}], "&"}], "/@", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"acyclic", ",", "noncyclic", ",", "aperiodic"}], "}"}], 
          ",", "x"}], "]"}], "===", "True"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Rule]", 
         RowBox[{"CellularAutomaton", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum", ",", "k", ",", 
             RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
          "]"}]}], "&"}], "/@", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "_", ",", 
      "\"\<Unknown option of boundary condition!\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NoGraphBAField", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"lengthORorder_Integer", ":", "3"}], ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"NoGraphBAField", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "boundary"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.389973606859375*^9, 3.38997373496875*^9}, {
   3.389974060515625*^9, 3.389974122921875*^9}, {3.38997433478125*^9, 
   3.389974390546875*^9}, 3.389974432*^9, {3.389977896671875*^9, 
   3.38997790746875*^9}, {3.390657056626388*^9, 3.390657079095425*^9}, {
   3.3906571101426983`*^9, 3.390657119424063*^9}, {3.390657171549734*^9, 
   3.390657173049753*^9}, {3.390658551770526*^9, 3.390658583864684*^9}, {
   3.390662041602205*^9, 3.3906620502429404`*^9}, {3.390666295625405*^9, 
   3.390666320047593*^9}, {3.390667460843445*^9, 3.390667479093677*^9}, {
   3.390668242400324*^9, 3.390668245072233*^9}, {3.390670831011583*^9, 
   3.390670870324586*^9}, {3.390670937137941*^9, 3.3906709646226683`*^9}, {
   3.3906710143889303`*^9, 3.390671045139324*^9}, {3.390671115608975*^9, 
   3.3906711180933824`*^9}, {3.390671184500482*^9, 3.390671310392719*^9}, {
   3.3906713804717407`*^9, 3.390671383253026*^9}, {3.390988539725233*^9, 
   3.390988565452227*^9}, {3.390990152113734*^9, 3.390990252528123*^9}, {
   3.3909909468865614`*^9, 3.390990947156951*^9}, {3.390991270582013*^9, 
   3.3909912713030496`*^9}, {3.3909970734461217`*^9, 3.390997110739747*^9}, {
   3.390997168542864*^9, 3.390997228428976*^9}, {3.390998161380494*^9, 
   3.390998183221901*^9}, {3.3909983262175183`*^9, 3.3909983264678783`*^9}, 
   3.3909985289089746`*^9, {3.391381227114571*^9, 3.391381292989294*^9}, {
   3.391381652766629*^9, 3.391381658725197*^9}, 3.391534442319554*^9, 
   3.4832000329658003`*^9, 3.484937186206001*^9, 3.4959673624122*^9, {
   3.4959822373792*^9, 3.4959822380352*^9}, 3.4959824639082*^9, {
   3.495997205691201*^9, 3.4959972060752*^9}, {3.4959973390832*^9, 
   3.4959973641382*^9}, {3.4959978016902*^9, 3.4959978032102003`*^9}, {
   3.495998173474199*^9, 3.4959984388052*^9}, {3.4959985013742*^9, 
   3.4959985500372*^9}, {3.4959987321162*^9, 3.4959987386692*^9}, {
   3.4959992681502*^9, 3.4959993022702*^9}, {3.496074108474681*^9, 
   3.496074184477681*^9}, {3.4960742152856803`*^9, 3.4960742716856813`*^9}, {
   3.496074339654681*^9, 3.496074346830681*^9}, 3.4984077961832943`*^9, 
   3.679596755617179*^9, {3.679596885770245*^9, 3.679596890434022*^9}, 
   3.679597169198344*^9, {3.679836937194183*^9, 3.67983696714336*^9}, {
   3.905591893660699*^9, 3.90559192196*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"86ddad53-9487-4a58-9d22-e4d95ba43965"],

Cell[TextData[{
 "Yields the number of attractors in the basin of attraction field for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, one-dimensional cellular automaton ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " rule, under cyclic/periodic or cyclic/acyclic/aperiodic ",
 StyleBox["boundary ",
  FontSlant->"Italic"],
 "conditions. In the periodic case, which is the default, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the lattice length, while in the noncyclic case, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the order of the preimages. ",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": See the definition of \.b4order\.b4 in the documentation of the function \
Preimage",
 StyleBox["s",
  FontSlant->"Italic"],
 ". \n",
 StyleBox["CyclicBAFieldSizes",
  FontSlant->"Italic"],
 " is a variation of the latter, as it only refers to cyclic configurations, \
and handles a set of rules in the same family. \n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n(1) The function can handle any valid form of radius.\n(2) The default \
value 3 for ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " is not working. For instance, BAField[128, 2, 1] should yield the same \
output as BAField[128, 2, 1, 3], but it doesn\[CloseCurlyQuote]t; why?"
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3914211042879057`*^9, 3.3914212635869665`*^9}, {3.3915356708661165`*^9, 
   3.391535696823441*^9}, {3.4959835310322*^9, 3.4959836168402*^9}, {
   3.4959836470242*^9, 3.4959836614322*^9}, 3.496074758522681*^9, {
   3.4961609285810843`*^9, 3.4961609288760843`*^9}, 3.4961613019490843`*^9, 
   3.498406721435294*^9, 3.498407796234294*^9, {3.679836134633417*^9, 
   3.6798361479902*^9}, {3.679836438565564*^9, 3.679836452628663*^9}, {
   3.6798370373797407`*^9, 3.679837148403141*^9}, {3.679837799336672*^9, 
   3.679837968487611*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7645ff47-8f3e-43c2-ac72-cc55d867df0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BAFieldSize", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "lengthORorder_Integer", ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"boundary", ",", "\[IndentingNewLine]", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cyclic", ",", "periodic"}], "}"}], ",", "x"}], "]"}], "===",
        "True"}]}], " ", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"WeaklyConnectedComponents", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"CellularAutomaton", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rnum", ",", "k", ",", 
              RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", "#"}], 
           "]"}]}], "&"}], "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}], ",", "lengthORorder"}], "]"}]}],
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"acyclic", ",", "noncyclic", ",", "aperiodic"}], "}"}], ",",
          "x"}], "]"}], "===", "True"}]}], ",", 
     RowBox[{"Length", "@", 
      RowBox[{"WeaklyConnectedComponents", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[Rule]", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ")"}], "&"}], "/@", 
        RowBox[{"Preimages", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "lengthORorder"}], "]"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", "_", ",", 
     "\"\<Unknown option of boundary condition!\>\""}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BAFieldSize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "lengthORorder_Integer", ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"BAFieldSize", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "boundary"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.496074561853681*^9, 3.496074589174681*^9}, {
   3.49607463088668*^9, 3.496074638790681*^9}, 3.498407796239294*^9, {
   3.679836737055709*^9, 3.679836740990972*^9}, {3.905591935505164*^9, 
   3.905591962821825*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"b672890d-47da-4f74-8862-0b328ecaba6b"],

Cell[TextData[{
 StyleBox["CyclicBAFieldSizes",
  FontSlant->"Italic"],
 " is a variation of the latter that handles a set of rules in the same \
family. This is meant to probe each rule individually, and printing out the \
result, so as to allow for a clear follow-up of the sequence of evaluations. \
But notice that it only refers to cyclic configurations."
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3914211042879057`*^9, 3.3914212635869665`*^9}, {3.3915356708661165`*^9, 
   3.391535696823441*^9}, {3.4959835310322*^9, 3.4959836168402*^9}, {
   3.4959836470242*^9, 3.4959836614322*^9}, 3.496074758522681*^9, {
   3.4961609285810843`*^9, 3.4961609288760843`*^9}, 3.4961613019490843`*^9, 
   3.498406721435294*^9, 3.498407796234294*^9, {3.679836134633417*^9, 
   3.6798361479902*^9}, {3.679836438565564*^9, 3.679836452628663*^9}, {
   3.6798370373797407`*^9, 3.679837148403141*^9}, {3.679837799336672*^9, 
   3.679838139222297*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e8439100-eb9b-47d0-9a12-4a332861cad8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CyclicBAFieldSizes", "[", 
    RowBox[{"rnums_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "len_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tuples", ",", "rnum"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tuples", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "}"}], ",", "len"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rnum", "=", "#"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "@", "rnum"}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", 
            RowBox[{"Length", "@", 
             RowBox[{"WeaklyConnectedComponents", "@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"CellularAutomaton", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"rnum", ",", "k", ",", 
                    RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                    "#"}], "]"}]}], "&"}], "/@", "tuples"}], ")"}]}]}]}], 
           "}"}]}], ")"}], "&"}], "/@", "rnums"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.679837668591556*^9, 3.679837671928915*^9}, {
  3.679837707965489*^9, 3.6798377144613256`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"52f2ea67-73d8-4c91-bfcf-4336c9415a12"],

Cell[TextData[{
 "Plots all basin of attraction fields for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, one-dimensional cellular automaton ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " rule, with the lattice length varing from 1 to ",
 StyleBox["len",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Implementation note1",
  FontWeight->"Bold"],
 ": The function can handle any valid form of radius."
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3915348849360046`*^9, 3.391534967654949*^9}, {3.3915355742471857`*^9, 
   3.3915355881571875`*^9}, {3.4959801121452*^9, 3.4959801248642*^9}, {
   3.4959822023222*^9, 3.4959822223042*^9}, 3.4959823168501997`*^9, {
   3.4959977777052*^9, 3.4959977895362*^9}, {3.496161313013084*^9, 
   3.4961613134690843`*^9}, {3.619363069421875*^9, 3.61936310453125*^9}, {
   3.61936368828125*^9, 3.619363689609375*^9}, {3.679837999723033*^9, 
   3.679838003082985*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0b86c047-8c82-4889-a2c9-efa3bf3ff45b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllBAFields", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}], ",", "lengthORorder_Integer", ",", 
      RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
      RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ithbasin", "=", "1"}], ",", 
      RowBox[{"ithbasin", "\[LessEqual]", "lengthORorder"}], ",", 
      RowBox[{"ithbasin", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Print", "@", 
       RowBox[{"{", 
        RowBox[{"ithbasin", ",", 
         RowBox[{"BAField", "[", 
          RowBox[{
          "rnum", ",", "k", ",", "r", ",", "ithbasin", ",", "graphLayout", 
           ",", "boundary"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllBAFields", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "lengthORorder_Integer", ",", 
     RowBox[{"graphLayout_Symbol", ":", "radial"}], ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   RowBox[{"AllBAFields", "[", 
    RowBox[{
    "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "graphLayout", ",",
      "boundary"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.3909904048771906`*^9, 3.3909905814611053`*^9}, {
   3.390990621458619*^9, 3.390990659483296*^9}, 3.39099088723078*^9, 
   3.390990933377136*^9, {3.390991183667035*^9, 3.3909911883037024`*^9}, 
   3.39099122038984*^9, {3.390997670214232*^9, 3.39099779527406*^9}, {
   3.39099790363988*^9, 3.3909979073151665`*^9}, 3.390998193606833*^9, 
   3.390998297145715*^9, {3.390998330002961*^9, 3.3909983302733507`*^9}, 
   3.390998538943403*^9, {3.39099863382984*^9, 3.3909986526368866`*^9}, {
   3.390998701707446*^9, 3.390998723158291*^9}, {3.391009628308747*^9, 
   3.3910096304618406`*^9}, {3.391009670319156*^9, 3.391009679642563*^9}, {
   3.391009799324657*^9, 3.391009810821189*^9}, {3.391009842967413*^9, 
   3.3910098502178383`*^9}, {3.391009996918784*^9, 3.391009998521087*^9}, {
   3.391010206610306*^9, 3.391010238816616*^9}, {3.39101028355094*^9, 
   3.391010333232379*^9}, {3.391093415523112*^9, 3.391093424205597*^9}, {
   3.391098216562808*^9, 3.391098230943486*^9}, {3.391098431271544*^9, 
   3.3910984572288647`*^9}, {3.391098940203352*^9, 3.391098940323524*^9}, {
   3.391375285314719*^9, 3.391375286876968*^9}, 3.391375341405376*^9, {
   3.391381055037136*^9, 3.39138106524181*^9}, {3.3913814225656157`*^9, 
   3.3913814349734573`*^9}, {3.3913814797979116`*^9, 
   3.3913815134362817`*^9}, {3.391381552752816*^9, 3.3913815978376446`*^9}, {
   3.391531000759478*^9, 3.391531001470499*^9}, {3.391534982606448*^9, 
   3.3915349851100483`*^9}, 3.483200046241801*^9, 3.4849371955816*^9, 
   3.4959822441722*^9, 3.4959826217722*^9, {3.4959827424292*^9, 
   3.4959827487402*^9}, 3.495982816956199*^9, {3.4959832496752*^9, 
   3.4959833144672003`*^9}, {3.4959972131632*^9, 3.4959972141232*^9}, {
   3.4959974585072002`*^9, 3.4959974709152*^9}, {3.4959975207692003`*^9, 
   3.4959975276022*^9}, {3.495997619331199*^9, 3.4959976209712*^9}, 
   3.4959994722511997`*^9, {3.619363154109375*^9, 3.619363198703125*^9}, {
   3.61936325128125*^9, 3.619363256453125*^9}, 3.619363349984375*^9, {
   3.6193634393125*^9, 3.619363439734375*^9}, {3.811766880952529*^9, 
   3.81176688831389*^9}, {3.905592003313393*^9, 3.905592036310218*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"273eed22-66c2-41c1-b207-b978d0240903"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Generating basins of attraction and their fields (as graph objects) for CAs \
with asynchronous deterministic update, either block sequential (positional) \
or neighbourhood based\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489493816263*^9, {3.7828991873068857`*^9, 3.782899202746921*^9}, {
   3.785337660754999*^9, 3.78533773504417*^9}, {3.785337827966827*^9, 
   3.785337854953639*^9}, {3.7853387725688143`*^9, 3.785338822024387*^9}, {
   3.800263507417534*^9, 
   3.800263508193346*^9}},ExpressionUUID->"f08512fb-f358-4e4a-82ef-\
82fbc9b8b398"],

Cell[TextData[{
 StyleBox["AsynchronousUdsBAField",
  FontSlant->"Italic"],
 " generates the basins of attraction graph for rule {",
 StyleBox["rnum, k, r",
  FontSlant->"Italic"],
 "} and deterministic asynchronous update by position priority schedule ",
 StyleBox["uds",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Example of usage",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[":",
  FontSize->14],
 "\nAsynchronousUdsBAField[{184, 2, 1}, {{1}, {2}, {3}, {4}, {5}}]"
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.391420935204776*^9}, {
   3.3915345234862657`*^9, 3.391534870845744*^9}, {3.3915350414210196`*^9, 
   3.3915350944973392`*^9}, {3.391535185207774*^9, 3.39153518695028*^9}, {
   3.391535218305367*^9, 3.391535219627267*^9}, {3.3915353186696835`*^9, 
   3.391535398354264*^9}, {3.3915355072308207`*^9, 3.3915355210506926`*^9}, {
   3.4849372331932*^9, 3.4849373053744*^9}, {3.4959800569612*^9, 
   3.4959800999932*^9}, {3.4959819912972*^9, 3.4959819935692*^9}, {
   3.495982024258199*^9, 3.4959821136562*^9}, {3.495982145298199*^9, 
   3.4959821758882*^9}, {3.4959822585302*^9, 3.4959823038722*^9}, {
   3.4959977499762*^9, 3.4959977540642*^9}, {3.4959986661612*^9, 
   3.4959989425522003`*^9}, {3.4959990106372004`*^9, 3.4959990768722*^9}, {
   3.496160922933084*^9, 3.496160923421084*^9}, 3.496161299389085*^9, 
   3.4984067213272943`*^9, 3.498407796177294*^9, {3.679597176246757*^9, 
   3.679597269196431*^9}, {3.679687854537618*^9, 3.679687996094263*^9}, {
   3.679688110995464*^9, 3.679688125440738*^9}, {3.7828992069648857`*^9, 
   3.782899208531361*^9}, 3.785337885985805*^9, {3.785337953245983*^9, 
   3.785337985128216*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d766f4be-a0c3-4a4b-b69f-eca7896b7fe7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AsynchronousUdsBAField", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "uds_List", ",", 
     RowBox[{"graphLayout_Symbol", ":", "radial"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Flatten", "[", "uds", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"ic", ",", 
           RowBox[{"Last", "@", 
            RowBox[{"fastAsynchronousCA", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "ic", ",", 
              "1", ",", "uds"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ic", ",", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", "-", "1"}]}], "]"}], ",", "n"}], "]"}]}], "}"}]}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GraphLayout", "\[Rule]", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "graphLayout", ",", "radial", ",", "\"\<RadialEmbedding\>\"", ",", 
          "_", ",", "\"\<SpiralEmbedding\>\""}], "]"}]}], ",", " ", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.389973606859375*^9, 3.38997373496875*^9}, {
   3.389974060515625*^9, 3.389974122921875*^9}, {3.38997433478125*^9, 
   3.389974390546875*^9}, 3.389974432*^9, {3.389977896671875*^9, 
   3.38997790746875*^9}, {3.390657056626388*^9, 3.390657079095425*^9}, {
   3.3906571101426983`*^9, 3.390657119424063*^9}, {3.390657171549734*^9, 
   3.390657173049753*^9}, {3.390658551770526*^9, 3.390658583864684*^9}, {
   3.390662041602205*^9, 3.3906620502429404`*^9}, {3.390666295625405*^9, 
   3.390666320047593*^9}, {3.390667460843445*^9, 3.390667479093677*^9}, {
   3.390668242400324*^9, 3.390668245072233*^9}, {3.390670831011583*^9, 
   3.390670870324586*^9}, {3.390670937137941*^9, 3.3906709646226683`*^9}, {
   3.3906710143889303`*^9, 3.390671045139324*^9}, {3.390671115608975*^9, 
   3.3906711180933824`*^9}, {3.390671184500482*^9, 3.390671310392719*^9}, {
   3.3906713804717407`*^9, 3.390671383253026*^9}, {3.390988539725233*^9, 
   3.390988565452227*^9}, {3.390990152113734*^9, 3.390990252528123*^9}, {
   3.3909909468865614`*^9, 3.390990947156951*^9}, {3.390991270582013*^9, 
   3.3909912713030496`*^9}, {3.3909970734461217`*^9, 3.390997110739747*^9}, {
   3.390997168542864*^9, 3.390997228428976*^9}, {3.390998161380494*^9, 
   3.390998183221901*^9}, {3.3909983262175183`*^9, 3.3909983264678783`*^9}, 
   3.3909985289089746`*^9, {3.391381227114571*^9, 3.391381292989294*^9}, {
   3.391381652766629*^9, 3.391381658725197*^9}, 3.391534442319554*^9, 
   3.4832000329658003`*^9, 3.484937186206001*^9, 3.4959673624122*^9, {
   3.4959822373792*^9, 3.4959822380352*^9}, 3.4959824639082*^9, {
   3.495997205691201*^9, 3.4959972060752*^9}, {3.4959973390832*^9, 
   3.4959973641382*^9}, {3.4959978016902*^9, 3.4959978032102003`*^9}, {
   3.495998173474199*^9, 3.4959984388052*^9}, {3.4959985013742*^9, 
   3.4959985500372*^9}, {3.4959987321162*^9, 3.4959987386692*^9}, {
   3.4959992681502*^9, 3.4959993022702*^9}, {3.496074108474681*^9, 
   3.496074184477681*^9}, {3.4960742152856803`*^9, 3.4960742716856813`*^9}, {
   3.496074339654681*^9, 3.496074346830681*^9}, 3.4984077961832943`*^9, {
   3.679836915009834*^9, 3.679836925363094*^9}, 3.679836962551869*^9, {
   3.778343054057691*^9, 3.778343060663423*^9}, {3.782898576771315*^9, 
   3.78289857774436*^9}, 3.785337907839093*^9, {3.814534101791101*^9, 
   3.814534123323105*^9}, 3.814539631251381*^9, {3.814541144094209*^9, 
   3.814541169493935*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"e427c5a6-a2c2-41d8-ab40-ac38b0af5efb"],

Cell[TextData[{
 StyleBox["\nAsynchronousUdsNBAField",
  FontSlant->"Italic"],
 " generates the basins of attraction graph for rule {",
 StyleBox["rnum, k, r",
  FontSlant->"Italic"],
 "}, configurations of length ",
 StyleBox["len",
  FontSlant->"Italic"],
 " and update by neighbourhood priority given in ",
 StyleBox["NPSequence",
  FontSlant->"Italic"],
 ". \n",
 StyleBox["Example of usage",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[":",
  FontSize->14],
 "\nAsynchronousUdsNBAField[{184, 2, 1}, 5, {1, 1, 1, 1, 1, 1, 1, 1}]\n\
AsynchronousUdsNBAField[{184, 2, 1}, 5, {1, 2, 3, 4, 5, 6, 7, 8}]"
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.391420935204776*^9}, {
   3.3915345234862657`*^9, 3.391534870845744*^9}, {3.3915350414210196`*^9, 
   3.3915350944973392`*^9}, {3.391535185207774*^9, 3.39153518695028*^9}, {
   3.391535218305367*^9, 3.391535219627267*^9}, {3.3915353186696835`*^9, 
   3.391535398354264*^9}, {3.3915355072308207`*^9, 3.3915355210506926`*^9}, {
   3.4849372331932*^9, 3.4849373053744*^9}, {3.4959800569612*^9, 
   3.4959800999932*^9}, {3.4959819912972*^9, 3.4959819935692*^9}, {
   3.495982024258199*^9, 3.4959821136562*^9}, {3.495982145298199*^9, 
   3.4959821758882*^9}, {3.4959822585302*^9, 3.4959823038722*^9}, {
   3.4959977499762*^9, 3.4959977540642*^9}, {3.4959986661612*^9, 
   3.4959989425522003`*^9}, {3.4959990106372004`*^9, 3.4959990768722*^9}, {
   3.496160922933084*^9, 3.496160923421084*^9}, 3.496161299389085*^9, 
   3.4984067213272943`*^9, 3.498407796177294*^9, {3.679597176246757*^9, 
   3.679597269196431*^9}, {3.6796878545376177`*^9, 3.679687996094263*^9}, {
   3.679688110995464*^9, 3.679688125440738*^9}, {3.7828992069648857`*^9, 
   3.7828992085313606`*^9}, {3.785337919219621*^9, 3.785337926076271*^9}, {
   3.7853379929143*^9, 3.785338056880558*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e93f8f93-c031-4a29-aa91-e2ca996a942c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AsynchronousUdsNBAField", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "len_Integer", ",", 
     "NPSequence_List", ",", 
     RowBox[{"graphLayout_Symbol", ":", "radial"}]}], "]"}], ":=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"ic", ",", 
         RowBox[{"AsynchronousCAUdsN", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "ic", ",", 
           "NPSequence"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ic", ",", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "]"}], ",", "len"}], "]"}]}], "}"}]}],
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GraphLayout", "\[Rule]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "graphLayout", ",", "radial", ",", "\"\<RadialEmbedding\>\"", ",", "_",
         ",", "\"\<SpiralEmbedding\>\""}], "]"}]}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.389973606859375*^9, 3.38997373496875*^9}, {
   3.389974060515625*^9, 3.389974122921875*^9}, {3.38997433478125*^9, 
   3.389974390546875*^9}, 3.389974432*^9, {3.389977896671875*^9, 
   3.38997790746875*^9}, {3.390657056626388*^9, 3.390657079095425*^9}, {
   3.3906571101426983`*^9, 3.390657119424063*^9}, {3.390657171549734*^9, 
   3.390657173049753*^9}, {3.390658551770526*^9, 3.390658583864684*^9}, {
   3.390662041602205*^9, 3.3906620502429404`*^9}, {3.390666295625405*^9, 
   3.390666320047593*^9}, {3.390667460843445*^9, 3.390667479093677*^9}, {
   3.390668242400324*^9, 3.390668245072233*^9}, {3.390670831011583*^9, 
   3.390670870324586*^9}, {3.390670937137941*^9, 3.3906709646226683`*^9}, {
   3.3906710143889303`*^9, 3.390671045139324*^9}, {3.390671115608975*^9, 
   3.3906711180933824`*^9}, {3.390671184500482*^9, 3.390671310392719*^9}, {
   3.3906713804717407`*^9, 3.390671383253026*^9}, {3.390988539725233*^9, 
   3.390988565452227*^9}, {3.390990152113734*^9, 3.390990252528123*^9}, {
   3.3909909468865614`*^9, 3.390990947156951*^9}, {3.390991270582013*^9, 
   3.3909912713030496`*^9}, {3.3909970734461217`*^9, 3.390997110739747*^9}, {
   3.390997168542864*^9, 3.390997228428976*^9}, {3.390998161380494*^9, 
   3.390998183221901*^9}, {3.3909983262175183`*^9, 3.3909983264678783`*^9}, 
   3.3909985289089746`*^9, {3.391381227114571*^9, 3.391381292989294*^9}, {
   3.391381652766629*^9, 3.391381658725197*^9}, 3.391534442319554*^9, 
   3.4832000329658003`*^9, 3.484937186206001*^9, 3.4959673624122*^9, {
   3.4959822373792*^9, 3.4959822380352*^9}, 3.4959824639082*^9, {
   3.495997205691201*^9, 3.4959972060752*^9}, {3.4959973390832*^9, 
   3.4959973641382*^9}, {3.4959978016902*^9, 3.4959978032102003`*^9}, {
   3.495998173474199*^9, 3.4959984388052*^9}, {3.4959985013742*^9, 
   3.4959985500372*^9}, {3.4959987321162*^9, 3.4959987386692*^9}, {
   3.4959992681502*^9, 3.4959993022702*^9}, {3.496074108474681*^9, 
   3.496074184477681*^9}, {3.4960742152856803`*^9, 3.4960742716856813`*^9}, {
   3.496074339654681*^9, 3.496074346830681*^9}, 3.4984077961832943`*^9, {
   3.679836915009834*^9, 3.679836925363094*^9}, 3.679836962551869*^9, {
   3.778343054057691*^9, 3.778343060663423*^9}, {3.782898576771315*^9, 
   3.78289857774436*^9}, 3.785337937504424*^9, {3.814534060652258*^9, 
   3.814534061210793*^9}, 3.814534127495871*^9, 3.8145396277971687`*^9, {
   3.814541175280815*^9, 3.814541182453821*^9}, {3.8145427097722397`*^9, 
   3.814542710084215*^9}, 3.8145475884078007`*^9},
 CellLabel->
  "In[214]:=",ExpressionUUID->"c254774e-d4ef-4655-8117-dda944059d40"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Verification of the validity of a property in an arbitrary basin of \
attraction field\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489489480323*^9, {3.784921221727049*^9, 3.784921269200087*^9}, {
   3.784921901103071*^9, 3.784921927346798*^9}, {3.7853211889284077`*^9, 
   3.785321284169497*^9}, {3.7853376261959476`*^9, 3.78533762652112*^9}, {
   3.785339218617675*^9, 3.785339247939557*^9}, {3.7919898463218412`*^9, 
   3.791989846885541*^9}},ExpressionUUID->"2722951d-f9da-433c-8f3b-\
57a3a0b02561"],

Cell[TextData[{
 StyleBox["BAPropertyQ yields True if ",
  FontSize->14],
 StyleBox["propertyfunction",
  FontSize->14,
  FontSlant->"Italic"],
 StyleBox[" evaluates to the same image for every configuration in each basin \
that make up the arbitrary basin of attraction field ",
  FontSize->14],
 StyleBox["baField",
  FontSize->14,
  FontSlant->"Italic"],
 StyleBox[" (given as a graph), and False otherwise.\n\n",
  FontSize->14],
 StyleBox["Examples of usage",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[":\nBAPropertyQ[AsynchronousUdsBAField[{184, 2, 1}, {{1}, {2}, {3}, \
{4}, {5}}], Total[#]&]  \[Implies]  False\n\
BAPropertyQ[AsynchronousUdsBAField[{184, 2, 1}, {{1, 2, 3, 4, 5}}], \
Total[#]&]  \[Implies]  True\nBAPropertyQ[AsynchronousUdsNBAField[{184, 2, \
1}, 5, {1, 2, 3, 4, 5, 6, 7, 8}], Total[#]&]  \[Implies]  False\n\
BAPropertyQ[AsynchronousUdsNBAField[{184, 2, 1}, 5, {1, 1, 1, 1, 1, 1, 1, \
1}], Total[#]&]  \[Implies]  True",
  FontSize->14]
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3914211042879057`*^9, 3.3914212635869665`*^9}, {3.3915356708661165`*^9, 
   3.391535696823441*^9}, {3.4959835310322*^9, 3.4959836168402*^9}, {
   3.4959836470242*^9, 3.4959836614322*^9}, 3.496074758522681*^9, {
   3.496160802413084*^9, 3.496160884501084*^9}, {3.496161049462085*^9, 
   3.496161072916085*^9}, {3.4961612013740845`*^9, 3.496161235669084*^9}, {
   3.4961612789490848`*^9, 3.496161285420085*^9}, {3.496161334237084*^9, 
   3.4961618164920845`*^9}, {3.4961618916370845`*^9, 3.496162080492084*^9}, 
   3.498406721555294*^9, 3.4984069032312937`*^9, 3.498407796285294*^9, {
   3.571565697578125*^9, 3.571565698046875*^9}, {3.571565784578125*^9, 
   3.571565837015625*^9}, 3.752510166974691*^9, {3.784921274535612*^9, 
   3.784921328013501*^9}, {3.784921477697596*^9, 3.784921531103045*^9}, {
   3.784921617266711*^9, 3.784921680447485*^9}, {3.784921722011413*^9, 
   3.784921756524401*^9}, {3.784921879858329*^9, 3.784921887194293*^9}, 
   3.784922246262734*^9, {3.784922278109473*^9, 3.784922292444047*^9}, {
   3.784922464408348*^9, 3.784922466519412*^9}, {3.784922531656814*^9, 
   3.7849227570195837`*^9}, {3.785339273277875*^9, 3.785339288952949*^9}, {
   3.785339326340605*^9, 3.785339454875655*^9}, {3.785339498812165*^9, 
   3.785339510663361*^9}, {3.785339609934095*^9, 3.7853396467105093`*^9}, {
   3.785341580549411*^9, 3.785341583147701*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a585620f-f59c-4602-a46e-76c027cb5f7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BAPropertyQ", "[", 
    RowBox[{"baField_Graph", ",", "propertyfunction_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"components", "=", 
       RowBox[{"WeaklyConnectedComponents", "[", "baField", "]"}]}], "}"}], 
     ",", 
     RowBox[{"And", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Union", "[", 
             RowBox[{"compo", ",", 
              RowBox[{"SameTest", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"propertyfunction", "[", "#1", "]"}], "\[Equal]", 
                  RowBox[{"propertyfunction", "[", "#2", "]"}]}], "&"}], 
                ")"}]}]}], "]"}], "]"}], ">", "1"}], ",", "False", ",", 
          "True"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"compo", ",", "components"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.496075186677681*^9, 3.4960752997896776`*^9}, {
   3.496075353949679*^9, 3.496075358509681*^9}, {3.496075410965681*^9, 
   3.496075469595681*^9}, {3.496075519092681*^9, 3.49607553106068*^9}, {
   3.496075625868681*^9, 3.496075636148681*^9}, {3.496077891868681*^9, 
   3.496077955653681*^9}, {3.496078134196681*^9, 3.496078149014681*^9}, {
   3.496078532053678*^9, 3.496078539276681*^9}, {3.496079912356681*^9, 
   3.4960799342046776`*^9}, 3.4960805562376814`*^9, {3.496155580889085*^9, 
   3.496155601448085*^9}, {3.496155900000085*^9, 3.496155900127084*^9}, {
   3.496156267239084*^9, 3.496156267967085*^9}, {3.496156339585085*^9, 
   3.496156359364083*^9}, {3.496156435744082*^9, 3.496156531447084*^9}, {
   3.496156562120085*^9, 3.496156563928084*^9}, {3.496156610152084*^9, 
   3.496156640056084*^9}, {3.496156840728084*^9, 3.496156847752085*^9}, {
   3.496156907032084*^9, 3.496156917872084*^9}, {3.4961572763220844`*^9, 
   3.496157278776085*^9}, 3.496160998615084*^9, 3.496161110551084*^9, 
   3.498406903243294*^9, 3.746440739998159*^9, {3.784921191988315*^9, 
   3.784921206184044*^9}, {3.784922071042666*^9, 3.784922074499126*^9}, {
   3.784922172425727*^9, 3.7849221738072643`*^9}, 3.785339297774518*^9, {
   3.785339473267683*^9, 3.785339492683459*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"94559a88-6f0a-4783-98de-37b989ba1861"]
}, Closed]],

Cell[CellGroupData[{

Cell["Partial surjectivity", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489489480323*^9},ExpressionUUID->"8ad9c733-a9b6-4f6b-b545-\
5874a577e9a1"],

Cell[TextData[{
 "[What is a ",
 StyleBox["partially",
  FontSlant->"Italic"],
 " surjective rule? I defined this in a NB but haven\.b4t transported the \
concept to here!]\nPredicate for establishing whether the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, one-dimensional cellular automaton ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " rule, is ",
 StyleBox["partially",
  FontSlant->"Italic"],
 " surjective under cyclic/periodic or cyclic/acyclic/aperiodic boundary",
 StyleBox[" ",
  FontSlant->"Italic"],
 "conditions. In the periodic case, which is the default, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the lattice length, while in the noncyclic case, the option ",
 StyleBox["lengthORorder",
  FontSlant->"Italic"],
 " refers to the order of the preimages. \n",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": See the definition of \.b4order\.b4 in the documentation of the function \
Preimage",
 StyleBox["s",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) The function can handle any valid form of radius.\n2) In order to \
check partial surjectivity for a given cyclic configuration length, it\.b4s \
necessary to check whether the rule\.b4s CyclicPreimagePattern for the given \
length is fully composed of 1s.\n3) In order to check partial surjectivity \
for the noncyclic configurations of order ",
 StyleBox["i",
  FontSlant->"Italic"],
 ", it\.b4s necessary to check whether the number of basins of attraction of \
the rule for order ",
 StyleBox["i-",
  FontSlant->"Italic"],
 "1 is equal to the number of configurations at order ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-1, which grows from ",
 StyleBox["n",
  FontSlant->"Italic"],
 " to 2",
 StyleBox["n",
  FontSlant->"Italic"],
 "-1, as we go from order ",
 StyleBox["i",
  FontSlant->"Italic"],
 " to order ",
 StyleBox["i",
  FontSlant->"Italic"],
 "+1."
}], "Text",
 CellChangeTimes->{{3.3914204773764515`*^9, 3.3914210491586337`*^9}, {
   3.3914211042879057`*^9, 3.3914212635869665`*^9}, {3.3915356708661165`*^9, 
   3.391535696823441*^9}, {3.4959835310322*^9, 3.4959836168402*^9}, {
   3.4959836470242*^9, 3.4959836614322*^9}, 3.496074758522681*^9, {
   3.496160802413084*^9, 3.496160884501084*^9}, {3.496161049462085*^9, 
   3.496161072916085*^9}, {3.4961612013740845`*^9, 3.496161235669084*^9}, {
   3.4961612789490848`*^9, 3.496161285420085*^9}, {3.496161334237084*^9, 
   3.4961618164920845`*^9}, {3.4961618916370845`*^9, 3.496162080492084*^9}, 
   3.498406721555294*^9, 3.4984069032312937`*^9, 3.498407796285294*^9, {
   3.571565697578125*^9, 3.571565698046875*^9}, {3.571565784578125*^9, 
   3.571565837015625*^9}, 3.752510166974691*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a4369a9b-ce1b-4d26-9d0e-52bb5ae5d1ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PartialSurjectivityQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "lengthORorder_Integer", ",", 
     RowBox[{"boundary_Symbol", ":", "cyclic"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"boundary", ",", "\[IndentingNewLine]", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cyclic", ",", "periodic"}], "}"}], ",", "x"}], "]"}], "===",
        "True"}]}], " ", ",", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CyclicPreimagePattern", "[", 
          RowBox[{
          "rnum", ",", "k", ",", "r", ",", " ", "lengthORorder", ",", 
           "lengthORorder", ",", "noGoE"}], "]"}], "\[LeftDoubleBracket]", 
         "1", "\[RightDoubleBracket]"}], ",", "1"}], "]"}], "===", 
      SuperscriptBox["k", "lengthORorder"]}], ",", "\[IndentingNewLine]", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"acyclic", ",", "noncyclic", ",", "aperiodic"}], "}"}], ",",
          "x"}], "]"}], "===", "True"}]}], ",", 
     RowBox[{
      RowBox[{"BAFieldSize", "[", 
       RowBox[{
       "rnum", ",", "k", ",", "r", ",", "lengthORorder", ",", "boundary"}], 
       "]"}], "===", 
      SuperscriptBox["k", 
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"2", "#"}], "-", "1"}], "&"}], ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], ",", 
         RowBox[{"lengthORorder", "-", "1"}]}], "]"}]]}], ",", 
     "\[IndentingNewLine]", "_", ",", 
     "\"\<Unknown option of boundary condition!\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.496075186677681*^9, 3.4960752997896776`*^9}, {
   3.496075353949679*^9, 3.496075358509681*^9}, {3.496075410965681*^9, 
   3.496075469595681*^9}, {3.496075519092681*^9, 3.49607553106068*^9}, {
   3.496075625868681*^9, 3.496075636148681*^9}, {3.496077891868681*^9, 
   3.496077955653681*^9}, {3.496078134196681*^9, 3.496078149014681*^9}, {
   3.496078532053678*^9, 3.496078539276681*^9}, {3.496079912356681*^9, 
   3.4960799342046776`*^9}, 3.4960805562376814`*^9, {3.496155580889085*^9, 
   3.496155601448085*^9}, {3.496155900000085*^9, 3.496155900127084*^9}, {
   3.496156267239084*^9, 3.496156267967085*^9}, {3.496156339585085*^9, 
   3.496156359364083*^9}, {3.496156435744082*^9, 3.496156531447084*^9}, {
   3.496156562120085*^9, 3.496156563928084*^9}, {3.496156610152084*^9, 
   3.496156640056084*^9}, {3.496156840728084*^9, 3.496156847752085*^9}, {
   3.496156907032084*^9, 3.496156917872084*^9}, {3.4961572763220844`*^9, 
   3.496157278776085*^9}, 3.496160998615084*^9, 3.496161110551084*^9, 
   3.498406903243294*^9, 3.746440739998159*^9},
 CellLabel->
  "In[216]:=",ExpressionUUID->"90feb38b-3f50-4567-ac8a-93bf6a8a1a6b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["15. Rule number of special CAs ", "Section",
 CellChangeTimes->{{3.558189201918736*^9, 3.558189206118198*^9}, {
  3.722676365058321*^9, 
  3.72267636605937*^9}},ExpressionUUID->"c9da0c33-d1da-42dc-b0d4-\
acd35fe5780e"],

Cell[CellGroupData[{

Cell["Complement Rule Number of a Binary CA", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489464297166*^9},ExpressionUUID->"7ae6a1fc-d887-4c62-ad26-\
bfa359b867de"],

Cell[TextData[{
 "Yields the rule number of the (binary) rule that is generated by flipping \
every output bit of the given radius-",
 StyleBox["r, ",
  FontSlant->"Italic"],
 "binary rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nIn: ComplementRnum[{0, 1}]  ;  Out: 255"
}], "Text",
 CellChangeTimes->{{3.543228342840344*^9, 3.543228375247899*^9}, {
  3.543228413918027*^9, 3.543228444220464*^9}, {3.543228559438381*^9, 
  3.543228610100461*^9}, {3.5432286471927*^9, 3.54322869946334*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c3565a67-d358-4824-9755-d061d3c63d68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComplementRnum", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", "=", "2"}], "}"}], ",", 
     RowBox[{"RnumFromRuleTable", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Reverse", "@", 
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"k", "-", "1"}]}], "]"}], ",", 
              RowBox[{"\[LeftFloor]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}], 
           ",", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "&"}], "/@", 
              RowBox[{"RuleTable", "[", 
               RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ")"}]}]}], 
          "}"}]}], "]"}], ",", "k"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.543227387157371*^9, 3.543227480546556*^9}, 
   3.543227561753755*^9, 3.543227599812923*^9, {3.543227652347484*^9, 
   3.543227700898569*^9}, {3.543228021031992*^9, 3.543228024407538*^9}, {
   3.543228458829633*^9, 3.5432284765546017`*^9}, {3.543228631466584*^9, 
   3.543228632527654*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"93aa723a-d9ca-4912-b129-2be6d1f1ba34"]
}, Closed]],

Cell[CellGroupData[{

Cell["Non-Local One-Dimensional CAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.5434894599848223`*^9},ExpressionUUID->"9d8caf59-8c4b-4c1b-a0b9-\
a75688cedcb9"],

Cell[TextData[{
 "A non-local CA rule is one in which every cell in the neighbourhoods is \
wired to the lattice in an arbitrary way, not necessarily the usual \
next-nearest neighbours. This function takes a one-dimensional non-local CA \
rule and yields a standard CA rule, with the ",
 StyleBox["smallest",
  FontWeight->"Bold"],
 " radius, that does the same thing. The function takes the full \
specification of a rule and its wirings, and returns {",
 StyleBox["new rule number",
  FontSlant->"Italic"],
 ", ",
 StyleBox["k",
  FontSlant->"Italic"],
 ", ",
 StyleBox["new radius",
  FontSlant->"Italic"],
 "}. The wiring of the non-local CA rule assumes that all left-hand and \
right-hand wirings have to be specified, each one one ",
 StyleBox["in relation to",
  FontWeight->"Bold"],
 " the centre cell. For instance, {3, 1, 2, 5} means that the centre cell of \
a radius 2 rule is wired to the 3rd and 1st cells at its left-hand side, and \
to the 2nd and 5th cells at its right-hand side. \nNote: If the arbitrary \
wiring goes beyond the given radius (as in the previous example) the radius \
of the new rule becomes larger; but the latter may also become smaller, if \
the original radius is more than required for the given wiring (see the \
example NLCA2CA[{2",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "32"], TraditionalForm]],ExpressionUUID->
  "452cfcd6-e113-4cb8-ae27-6e5978d297b4"],
 "-1, 2, 2}, {1, 1, 1, 1}] below).\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nIn: NLCA2CA[{232, 2, 1}, {2, 2}]  ;  Out: {4210729120, 2, 2}\nIn: \
NLCA2CA[{232, 2, 1}, {2, 1}]  ;  Out: {4244422848, 2, 2}\nIn: NLCA2CA[{232, \
2, 1}, {1, 2}]  ;  Out: {4204853920, 2, 2}\nIn: NLCA2CA[{232, 2, 1}, {1, 1}]  \
;  Out: {232, 2, 1}\nIn: NLCA2CA[{232, 2, 2}, {2, 1, 1, 2}]  ;   Out: {232, \
2, 2}\nIn: NLCA2CA[{2",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "32"], TraditionalForm]],ExpressionUUID->
  "7eae1e2e-028b-4e80-9dda-90e04adf0012"],
 "-1, 2, 2}, {1, 1, 1, 1}]  ;  Out: {255, 2, 1}\nIn: NLCA2CA[{2",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "32"], TraditionalForm]],ExpressionUUID->
  "0027b848-c7c8-4724-a309-611a02bc0d61"],
 "-1, 2, 2}, {2, 1, 1, 2}]  ;  Out: {4294967295, 2, 2}"
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0cb6fc3a-86e0-4dc8-a8dd-1aa67a659000"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NLCA2CA", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "wirings_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"rnum", ">", 
      RowBox[{
       SuperscriptBox["k", 
        SuperscriptBox["k", 
         RowBox[{
          RowBox[{"2", "r"}], "+", "1"}]]], "-", "1"}]}], ",", 
     RowBox[{
     "Print", "[", 
      "\"\<Rule number is beyond the maximum possible value for this space.\>\
\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"rnew", "=", 
          RowBox[{"Max", "[", "wirings", "]"}]}], ",", 
         RowBox[{"leftwirings", "=", 
          RowBox[{"Take", "[", 
           RowBox[{"wirings", ",", 
            RowBox[{
             RowBox[{"Length", "[", "wirings", "]"}], "/", "2"}]}], "]"}]}], 
         ",", 
         RowBox[{"rightwirings", "=", 
          RowBox[{"Take", "[", 
           RowBox[{"wirings", ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Length", "[", "wirings", "]"}]}], "/", "2"}]}], 
           "]"}]}], ",", "neighpatternsofnewrule"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neighpatternsofnewrule", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Fold", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"#1", ",", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], "&"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"_", ",", 
               RowBox[{"{", 
                RowBox[{"1", "+", 
                 RowBox[{"2", "rnew"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"MapThread", "[", 
              RowBox[{"List", ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"List", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rnew", "+", "1", "-", "#"}], ")"}], "&"}], "/@", 
                    "leftwirings"}], ",", 
                    RowBox[{"rnew", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rnew", "+", "1", "+", "#"}], ")"}], "&"}], "/@", 
                    "rightwirings"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}]}], 
            "]"}], "&"}], "/@", 
          RowBox[{"AllNeighbourhoods", "[", 
           RowBox[{"k", ",", "r"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rnew", "=", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"First", "@", "neighpatternsofnewrule"}], "]"}], "/", 
           "2"}], "\[RightFloor]"}]}], ";", "   ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "in", " ", "case", " ", "the", " ", "new", " ", "radius", " ", 
          "becomes", " ", "smaller", " ", "than", " ", "the", " ", 
          "original"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{
            RowBox[{"Reverse", "@", 
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Outer", "[", 
                   RowBox[{"List", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "}"}], ",", "1"}], "]"}], 
                  "&"}], "/@", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{"List", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"AllNeighbourhoods", "[", 
                    RowBox[{"k", ",", "rnew"}], "]"}], ",", "#"}], "]"}], 
                    "&"}], "/@", "neighpatternsofnewrule"}], ",", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"rnum", ",", "k", ",", 
                    SuperscriptBox["k", 
                    RowBox[{"\[LeftFloor]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], 
                    "]"}]}], "}"}]}], "]"}]}], ",", "2"}], "]"}], "]"}]}], 
            ",", "k"}], "]"}], ",", "k", ",", "rnew"}], "}"}]}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.3951304509834595`*^9, 3.746440617061269*^9},
 CellLabel->
  "In[218]:=",ExpressionUUID->"96c3d26e-1db5-4392-b08d-fa73dddcf505"]
}, Closed]],

Cell[CellGroupData[{

Cell["Arbitrary Spatial Composition of ECAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489455561077*^9},ExpressionUUID->"8c8d3ddb-76f0-41a8-920d-\
486206d542c1"],

Cell[TextData[{
 "Given an arbitrary spatial composition, the rules works out, if any, a rule \
of global action that represents the behaviour of the spatial composition \
after ",
 StyleBox["ntimesteps",
  FontSlant->"Italic"],
 ".",
 StyleBox["\nExamples of usage",
  FontWeight->"Bold"],
 ":\nSpatialCompositionToRnum[{{248, 2, {{-2}, {0}, {2}}}, 168, {184, 2, \
{{-2}, {0}, {1}}}, {232, 2, {{-2}, {0}, {1}}}, {232, 2, {{-2}, {0}, {2}}}}, \
8]\n4276676736\nMajorityRule[2]\n4276676736\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": Presently, it accounts only for integer values of ",
 StyleBox["rnumradius.",
  FontSlant->"Italic"],
 " This can be easily changed. "
}], "Text",
 CellChangeTimes->{{3.3915361305370913`*^9, 3.391536192636386*^9}, {
  3.4049065849823318`*^9, 3.4049067337262144`*^9}, {3.404907030823419*^9, 
  3.404907041028093*^9}, {3.404907576608219*^9, 3.4049075774894876`*^9}, {
  3.404907679916769*^9, 3.4049076853145313`*^9}, {3.4049078412287245`*^9, 
  3.404907871742602*^9}, {3.404916938400843*^9, 3.404916953182098*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f08073de-cfc7-4b3b-bd31-1904d863f6ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpatialCompositionToRnum", "[", 
    RowBox[{"rules_List", ",", 
     RowBox[{"ntimesteps_Integer", ":", "1"}], ",", 
     RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nrules", "=", 
        RowBox[{"Length", "[", "rules", "]"}]}], ",", 
       RowBox[{"rnumradius", "=", 
        RowBox[{"\[LeftCeiling]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "rules", "]"}], "-", "1"}], ")"}], "/", 
          "2"}], "\[RightCeiling]"}]}], ",", 
       "temprnumneighbourhoodsandoutputs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temprnumneighbourhoodsandoutputs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"-", "rnumradius"}]}], "]"}], ",", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "rnumradius"}], "]"}]}], "]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", "#", "]"}], ",", 
             RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"CASpatialComposition", "[", 
              RowBox[{"rules", ",", "#", ",", "ntimesteps"}], "]"}], "&"}], "/@", 
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"k", "-", "1"}], ",", "0", ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", "nrules"}], "]"}]}], 
           ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"temprnumneighbourhoodsandoutputs", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Union", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#2", ",", 
                    RowBox[{"#2", "+", 
                    RowBox[{"2", "rnumradius"}]}]}], "}"}]}], "]"}], ",", 
                   RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "#2"}], "\[RightDoubleBracket]"}]}], 
                  "}"}], "&"}], ",", "temprnumneighbourhoodsandoutputs", ",", 
                RowBox[{"Range", "[", "nrules", "]"}], ",", "1"}], "]"}], ",",
               "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "&"}]}], "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "#"}], "]"}], 
            "\[Equal]", 
            RowBox[{"{", "1", "}"}]}], "\[And]", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "==", 
            SuperscriptBox["k", 
             RowBox[{
              RowBox[{"2", "rnumradius"}], "+", "1"}]]}]}], ",", 
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"#", ",", "1"}], "]"}], ",", "k"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<There\.b4s no radius-\>\"", ",", "rnumradius", ",", 
             "\"\< rule equivalent to the given spatial composition.\>\""}], 
            "]"}], ";", 
           RowBox[{
            RowBox[{"Reap", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ",", 
                 RowBox[{"Sow", "[", "#", "]"}]}], "]"}], "&"}], "/@", "#"}], 
             "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "]"}], 
        "&"}], "[", "temprnumneighbourhoodsandoutputs", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.575970481948327*^9},
 CellLabel->
  "In[219]:=",ExpressionUUID->"e7fc7a83-0231-4b94-86cd-647d75a215c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Crossed ECAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489451433366*^9},ExpressionUUID->"eb79732a-870f-444f-aa12-\
60883a337f27"],

Cell[TextData[{
 "Takes a ",
 StyleBox["CrossedECA",
  FontSlant->"Italic"],
 " and works out the rule number of the equivalent Moore CA."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"5c44e272-2a60-48a6-9067-27d8c65e44a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CrossedECAtoMoore", "[", 
    RowBox[{"rnum1_Integer", ",", "rnum2_Integer"}], "]"}], ":=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "&"}], " ", "/@", 
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AllNeighbourhoods", "[", 
           RowBox[{"2", ",", "4"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"RuleOutputFromNeighbourhood", "[", 
             RowBox[{"#", ",", "rnum2", ",", "2", ",", "1"}], "]"}], "&"}], 
           " ", "/@", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RuleOutputFromNeighbourhood", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", "rnum1", ",", "2", ",", "1"}], "]"}], ",", 
                RowBox[{"RuleOutputFromNeighbourhood", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", "rnum1", ",", "2", ",", "1"}], "]"}], ",", 
                RowBox[{"RuleOutputFromNeighbourhood", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                   ",", "rnum1", ",", "2", ",", "1"}], "]"}]}], "}"}], "&"}], 
             " ", "/@", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"#", ",", "3"}], "]"}], "&"}], " ", "/@", " ", 
               RowBox[{"AllNeighbourhoods", "[", 
                RowBox[{"2", ",", "4"}], "]"}]}], ")"}]}], ")"}]}]}], "}"}]}],
        "]"}]}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.57156519346875*^9, 3.571565193484375*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"ae0e5cc9-d581-4c95-acee-34239959a0b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Totalistic and Outer-Totalistic One-Dimensional CAs", "Subsection",
 CellChangeTimes->{
  3.571593135078125*^9, {3.575969201924753*^9, 3.57596920360135*^9}, 
   3.586769328942964*^9},ExpressionUUID->"548f8050-1cae-40f5-bdd0-\
97291f391a58"],

Cell[TextData[{
 StyleBox["Rnums[k, r, type]",
  FontSlant->"Italic"],
 " returns all the rule numbers of the given space with the specified type: ",
 StyleBox["standard",
  FontSlant->"Italic"],
 " (namely, all the rule numbers), ",
 StyleBox["totalistic",
  FontSlant->"Italic"],
 " or ",
 StyleBox["outertotalistic",
  FontSlant->"Italic"],
 ". \[LineSeparator]",
 StyleBox["NthRnum[k, r, type] ",
  FontSlant->"Italic"],
 "returns the ",
 StyleBox["n",
  FontSlant->"Italic"],
 "th rule of the specified kind.\n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": \n1) I suppose ",
 StyleBox["CodeToRnum[k, r, type]",
  FontSlant->"Italic"],
 " is just a reference to the coding scheme of totalistic rules from the NKS \
book. But I should check that!",
 StyleBox["\n",
  FontWeight->"Bold"],
 "2) Number of totalistic rules:  With[{k = 3, r = 2}, k^(1 + (k - 1) (2 r + \
1))]  => 177147."
}], "Text",
 CellChangeTimes->{
  3.4956279153355*^9, {3.5759692079323273`*^9, 3.5759692103372917`*^9}, {
   3.575970565483735*^9, 3.57597073229459*^9}, {3.5869438153040037`*^9, 
   3.5869438178709097`*^9}, {3.5869439928917522`*^9, 3.586944113063567*^9}, {
   3.586944284262891*^9, 3.5869443856241612`*^9}, {3.586944521278775*^9, 
   3.586944603306587*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"993a4c5f-d607-48e4-b9e1-3cd2b4f62ea8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Rnums", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "standard"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equivclasses", "=", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "type", ",", "\[IndentingNewLine]", "outertotalistic", ",", " ", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"Drop", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\[LeftCeiling]", 
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], "/", "2"}], 
                   "\[RightCeiling]"}], "}"}]}], "]"}], "]"}], ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "/", "2"}], 
                "\[RightCeiling]"}], "\[RightDoubleBracket]"}]}], "}"}], 
            "&"}]}], "]"}], ",", "\[IndentingNewLine]", "totalistic", ",", 
         " ", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "&"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"List", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"AllNeighbourhoods", "[", 
           RowBox[{"k", ",", "r"}], "]"}]}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Outer", "[", 
                RowBox[{"List", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "}"}], ",", "1"}], "]"}], "&"}], "/@", 
              RowBox[{"MapThread", "[", 
               RowBox[{"List", ",", 
                RowBox[{"{", 
                 RowBox[{"equivclasses", ",", "#"}], "}"}]}], "]"}]}], ",", 
             "2"}], "]"}], "]"}], "]"}], ",", "k"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"#", ",", "k", ",", 
           RowBox[{"Length", "[", "equivclasses", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           SuperscriptBox["k", 
            RowBox[{"Length", "[", "equivclasses", "]"}]], "-", "1"}]}], 
         "]"}]}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.575970482050521*^9, 3.575970482115312*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"9553fe62-2417-4402-ac30-4e7e5aff4b61"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CodeToRnum", "[", 
    RowBox[{"code_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "standard"}]}], "]"}], ":=", 
   RowBox[{"NthRnum", "[", 
    RowBox[{
     RowBox[{"code", "+", "1"}], ",", "k", ",", "r", ",", "type"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.575970225828712*^9},
 CellLabel->
  "In[222]:=",ExpressionUUID->"cc4f2372-a6a5-43de-a86c-71d4625e2fb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NthRnum", "[", 
    RowBox[{"nth_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "standard"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equivclasses", "=", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "type", ",", "\[IndentingNewLine]", "outertotalistic", ",", " ", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"Drop", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\[LeftCeiling]", 
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], "/", "2"}], 
                   "\[RightCeiling]"}], "}"}]}], "]"}], "]"}], ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "/", "2"}], 
                "\[RightCeiling]"}], "\[RightDoubleBracket]"}]}], "}"}], 
            "&"}]}], "]"}], ",", "\[IndentingNewLine]", "totalistic", ",", 
         " ", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"AllNeighbourhoods", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "&"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"List", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"AllNeighbourhoods", "[", 
           RowBox[{"k", ",", "r"}], "]"}]}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nth", ">", 
         SuperscriptBox["k", 
          RowBox[{"Length", "[", "equivclasses", "]"}]]}], "\[Or]", 
        RowBox[{"nth", "<", "1"}]}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Rule order/code is beyond the maximum possible value for this \
rule space.\>\"", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Outer", "[", 
                RowBox[{"List", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "}"}], ",", "1"}], "]"}], "&"}], "/@", 
              RowBox[{"MapThread", "[", 
               RowBox[{"List", ",", 
                RowBox[{"{", 
                 RowBox[{"equivclasses", ",", 
                  RowBox[{"PadLeft", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"nth", "-", "1"}], ",", "k"}], "]"}], ",", 
                    RowBox[{"Length", "[", "equivclasses", "]"}]}], "]"}]}], 
                 "}"}]}], "]"}]}], ",", "2"}], "]"}], "]"}], "]"}], ",", 
         "k"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.575970482217267*^9, 3.575970482283886*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"0c35690b-a1a0-48b7-aa78-7fb71821bbd4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Identity Rule", "Subsection",
 CellChangeTimes->{{3.547982551921875*^9, 3.54798255234375*^9}, {
  3.6512577247240543`*^9, 
  3.651257728941452*^9}},ExpressionUUID->"d1233252-97ae-4dd1-9012-\
c61cfc979281"],

Cell["\<\
Yields the number of the identity rule of any one-dimensional space.\
\>", "Text",
 CellChangeTimes->{{3.59325509734375*^9, 3.5932551670625*^9}, {
  3.651257784572525*^9, 3.651257823531505*^9}, {3.746462250331869*^9, 
  3.746462254899309*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"dbc7792b-94ef-4c6b-858a-f2a9ad394af4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IdentityRule", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"RnumFromRuleTable", "[", 
    RowBox[{
     RowBox[{"RuleTableFromKAry", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "+", "1"}], 
          "\[RightDoubleBracket]"}], "&"}], "/@", 
        RowBox[{"Reverse", "@", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "]"}], ",", 
           RowBox[{"\[LeftFloor]", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}]}], 
       ",", "k", ",", "r"}], "]"}], ",", "k"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.651142200713101*^9, {3.651142471224951*^9, 3.651142492491208*^9}, {
   3.651146542598239*^9, 3.651146544892375*^9}, {3.651239585791678*^9, 
   3.651239705060429*^9}, {3.651239737074821*^9, 3.651239898698205*^9}, {
   3.651240054465548*^9, 3.6512400782014236`*^9}, {3.651256945805398*^9, 
   3.6512569566446133`*^9}, {3.651257027243511*^9, 3.65125705524471*^9}, {
   3.651257141227851*^9, 3.651257144450693*^9}, {3.651257427798944*^9, 
   3.6512574764481*^9}, {3.6512575246489162`*^9, 3.6512575314381227`*^9}, {
   3.651257580522939*^9, 3.651257580915393*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"51fafe64-9642-4870-b371-d4debaf6acf3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Majority Rule", "Subsection",
 CellChangeTimes->{{3.547982551921875*^9, 3.54798255234375*^9}, 
   3.651507627255822*^9},ExpressionUUID->"64977f9c-a5ac-4f39-943f-\
2332c4ae08bc"],

Cell["\<\
Works out the majority rule for any one-dimensional space; this means the \
rule whose output state from every neighbourhood is the most frequent state \
in it. Whenever there\[CloseCurlyQuote]s no strict majority of a state, the \
centre cell state in the neighbourhood is simply preserved.\
\>", "Text",
 CellChangeTimes->{{3.59325509734375*^9, 3.5932551670625*^9}, 
   3.651257844703353*^9, {3.651507636503502*^9, 3.651507851320365*^9}, {
   3.74646222342212*^9, 3.746462224119431*^9}, 3.746462260305923*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d00c7bda-bc2c-4e64-8e9a-dcf72cc072a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MajorityRule", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"RnumFromRuleTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"Last", "@", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Tally", "[", "#", "]"}], "]"}]}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Last", "@", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"Tally", "[", "#", "]"}], "]"}]}], "]"}]}], "]"}], "===",
             "1"}], ",", 
           RowBox[{"First", "@", 
            RowBox[{"Commonest", "[", "#", "]"}]}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"\[LeftCeiling]", " ", 
             RowBox[{"r", "+", "1"}], "\[RightCeiling]"}], 
            "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"AllNeighbourhoods", "[", 
       RowBox[{"k", ",", "r"}], "]"}]}], ",", "k"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.651505194955285*^9, 3.651505258129009*^9}, {
   3.651505350593656*^9, 3.651505361571742*^9}, {3.6515054187555447`*^9, 
   3.651505419711828*^9}, {3.6515055375433598`*^9, 3.651505569549253*^9}, {
   3.651505704965678*^9, 3.651505722266399*^9}, {3.651506086134579*^9, 
   3.651506087563957*^9}, {3.651507190135563*^9, 3.651507223328122*^9}, 
   3.65150748725149*^9},
 CellLabel->
  "In[225]:=",ExpressionUUID->"801d334c-d882-4e9a-973e-e2782453785d"],

Cell[TextData[{
 "\nGeneral majority rule for an arbitrary Boolean network, with its \
arguments following the specifications in ",
 StyleBox["AsynchronousBN",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689254052473604*^9, 3.689254068057495*^9}, 3.762506384702429*^9, {
   3.762506420598385*^9, 3.7625065077809777`*^9}, 3.762506540232657*^9, 
   3.762524205346532*^9, {3.762524430337446*^9, 3.7625244501028976`*^9}, {
   3.762524523937942*^9, 3.7625246114631453`*^9}, 3.762525629490725*^9, {
   3.762526178787713*^9, 3.762526188741818*^9}, {3.763283187208085*^9, 
   3.7632831987064877`*^9}, {3.763374285666535*^9, 3.763374286105685*^9}, {
   3.763374318224378*^9, 3.763374387543552*^9}, {3.764174875023448*^9, 
   3.764174890474921*^9}, {3.764235618891621*^9, 3.764235653787075*^9}, {
   3.764236134153439*^9, 3.764236170638291*^9}, {3.76423643539896*^9, 
   3.764236456208552*^9}, {3.784919882889594*^9, 3.784919885496849*^9}, {
   3.7849202265806713`*^9, 3.78492088809306*^9}, {3.78492092476387*^9, 
   3.784920990143285*^9}, {3.803806753372492*^9, 3.803806869054839*^9}, {
   3.803806904939167*^9, 3.803806920315564*^9}, {3.803807190687469*^9, 
   3.803807195389076*^9}, {3.803808347206922*^9, 3.8038083606024647`*^9}, 
   3.803808745515592*^9, {3.8038275535148687`*^9, 3.803827597827544*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"11df8232-c7a9-4108-a12f-0e3cd2e25cbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MajorityRuleBN", "[", 
    RowBox[{"self_Integer", ",", "states_List"}], "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
     RowBox[{"Commonest", "[", "states", "]"}], ",", 
     RowBox[{"{", "1", "}"}], ",", "1", ",", 
     RowBox[{"{", "0", "}"}], ",", "0", ",", "_", ",", "self"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7899181441662097`*^9, 3.789918160025861*^9}, {
  3.789918205568276*^9, 3.789918343705236*^9}, {3.80380701951761*^9, 
  3.803807019732121*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"6c10aa18-a696-415b-9588-28b9e149c1e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["ModK Rule", "Subsection",
 CellChangeTimes->{{3.547982554671875*^9, 3.547982555078125*^9}, {
   3.746462053883053*^9, 3.746462075033177*^9}, 
   3.746462332693243*^9},ExpressionUUID->"bc47c255-67b0-4e45-b024-\
f6d48cc53a48"],

Cell[TextData[{
 "Works out the number of the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, one-dimensional rule whose output of any state transition is Mod[(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "7f7da0d3-4fae-484a-973d-086f309f5ae2"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], "+", " "}], TraditionalForm]],ExpressionUUID->
  "23cc2ad0-3674-425d-86a6-758cda62c21e"],
 "... + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{
     RowBox[{"\[LeftCeiling]", 
      RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]], TraditionalForm]],
  ExpressionUUID->"596d0dbd-cd70-42f5-bf04-6ea84e330d5f"],
 "), ",
 StyleBox["k",
  FontSlant->"Italic"],
 "], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "985aa705-2d2d-4af4-89e4-9a2ca1c6a927"],
 "\[Element] {0, 1, ..., ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1}. In particular, the parity rule is obtained when ",
 StyleBox["k",
  FontSlant->"Italic"],
 "=2."
}], "Text",
 CellChangeTimes->{{3.74646208902814*^9, 3.7464621890081463`*^9}, {
  3.746462236820799*^9, 3.7464622403079033`*^9}, {3.74646229989494*^9, 
  3.74646231325353*^9}, {3.7773715209522047`*^9, 3.777371651710639*^9}, {
  3.777371692977148*^9, 3.777371719773524*^9}, {3.777372007766603*^9, 
  3.777372009971688*^9}, {3.777372848428978*^9, 3.777372881029394*^9}, {
  3.777373164701037*^9, 3.777373219285516*^9}, {3.777373299793684*^9, 
  3.777373306742661*^9}, {3.777373409591564*^9, 3.777373521023764*^9}, {
  3.777373566969243*^9, 3.777373608899024*^9}, {3.777373654181061*^9, 
  3.777373657711483*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"19583c65-1968-4059-9baa-c21757fc9336"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModKRule", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"RnumFromRuleTable", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "k"}], "]"}]}], "}"}], 
        "&"}], "/@", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"k", "-", "1"}], ",", "0", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[LeftCeiling]", 
           RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}]}], 
      ",", "k"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParityRule", "[", "r_", "]"}], ":=", 
   RowBox[{"ModKRule", "[", 
    RowBox[{"2", ",", "r"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.498407614361294*^9, 3.498407615589294*^9}, {
  3.498407649568294*^9, 3.498407653903294*^9}, {3.74646201888892*^9, 
  3.7464620456823072`*^9}, {3.746462337216483*^9, 3.746462359333931*^9}, {
  3.777371507960392*^9, 3.777371510096767*^9}, {3.777371995786794*^9, 
  3.777372024487224*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"9e98cc4c-39f9-4bba-9198-15bf59d76705"]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiplicity Rule", "Subsection",
 CellChangeTimes->{{3.547982554671875*^9, 3.547982555078125*^9}, {
   3.746462053883053*^9, 3.746462075033177*^9}, 3.746462332693243*^9, {
   3.7464630334595327`*^9, 3.746463035597149*^9}, {3.777373104578971*^9, 
   3.777373107420215*^9}},ExpressionUUID->"433ba1b8-8f30-4976-aeb0-\
05ee1f09bed5"],

Cell[TextData[{
 "Works out the number of the binary, one-dimensional rule whose output of \
any state transition is 0, if the number of 1s in the neighbourhood is \
multiple of the given integer ",
 StyleBox["m",
  FontSlant->"Italic"],
 ", and 1 otherwise. In particular, the parity rule is obtained when ",
 StyleBox["m",
  FontSlant->"Italic"],
 "=2.\n\nThe multiplicity rule is associated with the traditional ModN \
problem in cellular automata, as in C.L.M. Martins and P.P.B. de Oliveira. \
\[OpenCurlyDoubleQuote]Computing Modulo-n by composing cellular automata \
rules\[CloseCurlyDoubleQuote]. ",
 StyleBox["Fundamenta Informaticae",
  FontSlant->"Italic"],
 ", 145(1):1-17, 2016. This is not to be confused with the ModNK problem, by \
which, for any configuration with size ",
 StyleBox["N",
  FontSlant->"Italic"],
 ", a solver rule has to converge to the homogeneous fixed point Mod[(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "8f033c6f-e06e-4494-bce6-36d07ec5f09a"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], "+", " "}], TraditionalForm]],ExpressionUUID->
  "e7ef3079-aa84-4231-8490-a0d53c601e84"],
 "... + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "N"], TraditionalForm]],ExpressionUUID->
  "928a9542-27b1-4382-be1a-7845fa343ee5"],
 "), ",
 StyleBox["k",
  FontSlant->"Italic"],
 "] = ",
 StyleBox["s, ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "01866b45-b91d-483c-9b79-2329d09b9c23"],
 StyleBox["\[Element] ",
  FontSlant->"Italic"],
 "{",
 StyleBox["0, 1, ..., k-1",
  FontSlant->"Italic"],
 "};",
 StyleBox[" ",
  FontSlant->"Italic"],
 "when ",
 StyleBox["k",
  FontSlant->"Italic"],
 "=2, the ModNK problem becomes the parity (ModN2) problem (or, yet, the Mod2 \
problem)."
}], "Text",
 CellChangeTimes->{{3.74646208902814*^9, 3.7464621890081463`*^9}, {
  3.746462236820799*^9, 3.7464622403079033`*^9}, {3.74646229989494*^9, 
  3.74646231325353*^9}, {3.7464630451149693`*^9, 3.7464630943227787`*^9}, {
  3.7464631496729536`*^9, 3.746463174670916*^9}, {3.746463239213801*^9, 
  3.746463243014707*^9}, {3.777372895226966*^9, 3.777372918761855*^9}, {
  3.777372960555813*^9, 3.777373016232628*^9}, {3.777373113916602*^9, 
  3.777373159378432*^9}, {3.777373827621957*^9, 3.777373845036141*^9}, {
  3.777373880709729*^9, 3.7773739301102962`*^9}, {3.777374009191462*^9, 
  3.77737412116965*^9}, {3.777374951042892*^9, 3.7773749867505713`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"63a299f1-87ee-4d8a-9661-c708d7bba95b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MultiplicityRule", "[", 
    RowBox[{"m_Integer", ",", "r_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"RnumFromRuleTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"MultipleQ", "[", 
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], ",", "m"}], "]"}]}], "}"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[LeftCeiling]", 
            RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], 
        ")"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"False", "\[Rule]", "1"}], ",", 
        RowBox[{"True", "\[Rule]", "0"}]}], "}"}]}], ",", "2"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746463098777906*^9, 3.746463103536586*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"2e2556b1-87c9-4555-91cf-7d5a5bea8fd6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Corresponding Rule Number in the Space with Smaller Radii", "Subsection",
 CellChangeTimes->{{3.5353201524550967`*^9, 3.535320160207052*^9}, {
  3.803731286233566*^9, 3.803731334584745*^9}, {3.803731951535549*^9, 
  3.8037319585864577`*^9}, {3.803734091615947*^9, 
  3.803734137916648*^9}},ExpressionUUID->"fae2ac66-d444-4f7e-972c-\
13f8a435a422"],

Cell[TextData[{
 StyleBox["ReduceRuleRadius removes dummy neighbours, if any, returning the \
rule in the space with the smallest possible radius (default option ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["fullreduce ",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["= True), or all the rules in the immediately smaller space (option \
",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["fullreduce",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["False",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). The latter may happen, for instance, when two dummy neighbours \
occur at the same distance from the reference cell, one at each side. Notice \
that the rules obtained in either case are shift equivalent (i.e., they are \
the same to the original rule, except possibly by a shift).\n\nBut notice \
that in the reduction process, the situation may be reached where the \
resulting rule might have a very asymmetrical neighbourhood (distinct from \
the standard we use in case of _0.5 radius), which might entail a \
displacement of the original position of the central cell. In order to face \
that, in some situations it may be worth re-balancing the neighbourhood, by \
adding dummy neighbours that would then allow it to have a _.5 or integer \
radius, while preserving the original central cell position. This is done by \
the auxiliary function ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["CompleteNeighbourhood",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" (which completes the neighbourhood with relative positions given \
in ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["neighbourhoodpos",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", in order for its central cell to be ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["targetcell",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). The option ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["balancing",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" =",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["True",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" for ReduceRuleRadius entails balancing the neighbourhood.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.803121838554243*^9, 3.803122034241887*^9}, {
   3.803122112828362*^9, 3.8031222822587028`*^9}, {3.803122313825762*^9, 
   3.803122423934347*^9}, {3.803122520862949*^9, 3.8031225424469175`*^9}, 
   3.803723641753106*^9, {3.803729565699747*^9, 3.803729568794278*^9}, {
   3.803729643460304*^9, 3.803729672054929*^9}, 3.803731419817849*^9, {
   3.803732061254644*^9, 3.803732073061434*^9}, {3.803732142357223*^9, 
   3.803732175354105*^9}, {3.803733893964409*^9, 3.803734080432664*^9}, {
   3.803734206600382*^9, 3.803734292147394*^9}, {3.803734328807808*^9, 
   3.803734338125513*^9}, {3.803734550444808*^9, 3.803734673381748*^9}, {
   3.803734840887485*^9, 3.8037348563847933`*^9}, 3.807966679284763*^9, {
   3.8086659132756643`*^9, 3.808665955236866*^9}, {3.808666009430029*^9, 
   3.808666352155505*^9}, {3.808666392641306*^9, 3.808666416501445*^9}, {
   3.808669506730013*^9, 3.808669734802395*^9}, {3.8086768193761578`*^9, 
   3.808676900714114*^9}, {3.808676938625845*^9, 
   3.808676949201613*^9}},ExpressionUUID->"b61fa0b4-a2b3-4944-aef8-\
31132f4e034b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReduceRuleRadius", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
      RowBox[{"fullreduce_", ":", "True"}], ",", " ", 
      RowBox[{"balancing_", ":", "True"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"targetcell", "=", 
         RowBox[{"\[LeftCeiling]", 
          RowBox[{"r", "+", "1"}], "\[RightCeiling]"}]}], ",", 
        RowBox[{"dummies", "=", 
         RowBox[{"DummyNeighbours", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "nondummies", 
        ",", 
        RowBox[{"rtab", "=", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "validrange"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Intersection", "[", 
          RowBox[{"dummies", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "]"}]}], "}"}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"rnum", ",", "k", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FractionalPart", "[", "r", "]"}], "\[Equal]", "0"}], 
            ",", 
            RowBox[{"IntegerPart", "[", "r", "]"}], ",", "r"}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nondummies", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "]"}]}], "]"}], ",", 
            "dummies"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"nondummies", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"fullreduce", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"validrange", "=", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"First", "[", "nondummies", "]"}], ",", 
                 RowBox[{"Last", "[", "nondummies", "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"validrange", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"balancing", "\[Equal]", "True"}], ",", 
                 RowBox[{"CompleteNeighbourhood", "[", 
                  RowBox[{"validrange", ",", "targetcell"}], "]"}], ",", 
                 "validrange"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RnumFromRuleTable", "[", 
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "validrange"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", "rtab"}],
                     "]"}], ",", "First"}], "]"}], "]"}], ",", "k"}], "]"}], 
                ",", "k", ",", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"value", "=", 
                    RowBox[{"0.5", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "validrange", "]"}], "-", "1"}], 
                    ")"}]}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FractionalPart", "[", "value", "]"}], "\[Equal]",
                     "0"}], ",", 
                    RowBox[{"IntegerPart", "[", "value", "]"}], ",", 
                    "value"}], "]"}]}], "]"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"First", "[", "nondummies", "]"}], "\[GreaterEqual]",
                  "2"}], "&&", 
                RowBox[{
                 RowBox[{"Last", "[", "nondummies", "]"}], "\[LessEqual]", 
                 RowBox[{"IntegerPart", "[", 
                  RowBox[{"2", "r"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"RnumFromRuleTable", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"2", "r"}], "]"}], "+", "1"}]}], "]"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", "rtab"}],
                     "]"}], ",", "First"}], "]"}], "]"}], ",", "k"}], "]"}], 
                   ",", "k", ",", 
                   RowBox[{"r", "-", "0.5"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"RnumFromRuleTable", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"2", "r"}], "]"}]}], "]"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", "rtab"}],
                     "]"}], ",", "First"}], "]"}], "]"}], ",", "k"}], "]"}], 
                   ",", "k", ",", 
                   RowBox[{"r", "-", "0.5"}]}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"validrange", "=", 
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"First", "[", "nondummies", "]"}]}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"2", "r"}], "]"}], ",", 
                    RowBox[{"Last", "[", "nondummies", "]"}]}], "]"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"RnumFromRuleTable", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "validrange"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", "rtab"}],
                     "]"}], ",", "First"}], "]"}], "]"}], ",", "k"}], "]"}], 
                  ",", "k", ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"value", "=", 
                    RowBox[{"0.5", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "validrange", "]"}], "-", "1"}], 
                    ")"}]}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FractionalPart", "[", "value", "]"}], "\[Equal]",
                     "0"}], ",", 
                    RowBox[{"IntegerPart", "[", "value", "]"}], ",", 
                    "value"}], "]"}]}], "]"}]}], "}"}]}]}], "]"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RnumFromRuleTable", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"Last", "[", 
                    RowBox[{
                    "rtab", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], "&"}], "/@", 
                RowBox[{"Tuples", "[", 
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", "1"}], 
                 "]"}]}], ",", "k"}], "]"}], ",", "k", ",", "0"}], "}"}]}], 
          "]"}]}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompleteNeighbourhood", "[", 
    RowBox[{"neighbourhoodpos_List", ",", "targetcell_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"neighbourhoodpos", ",", "targetcell"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"targetcell", "-", 
           RowBox[{"First", "[", "neighbourhoodpos", "]"}]}], ")"}], 
         "\[NotEqual]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Last", "[", "neighbourhoodpos", "]"}], "-", 
           "targetcell"}], ")"}]}], "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"targetcell", "-", 
           RowBox[{"First", "[", "neighbourhoodpos", "]"}]}], ")"}], 
         "\[NotEqual]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Last", "[", "neighbourhoodpos", "]"}], "-", "targetcell", 
           "+", "1"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"targetcell", "-", 
            RowBox[{"First", "[", "neighbourhoodpos", "]"}]}], ")"}], ">", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Last", "[", "neighbourhoodpos", "]"}], "-", 
            "targetcell"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"First", "[", "neighbourhoodpos", "]"}], ",", 
           RowBox[{"targetcell", "+", 
            RowBox[{"(", 
             RowBox[{"targetcell", "-", 
              RowBox[{"First", "[", "neighbourhoodpos", "]"}], "-", "1"}], 
             ")"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"targetcell", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Last", "[", "neighbourhoodpos", "]"}], "-", 
              "targetcell"}], ")"}]}], ",", 
           RowBox[{"Last", "[", "neighbourhoodpos", "]"}]}], "]"}]}], "]"}], 
       ",", "\[IndentingNewLine]", "neighbourhoodpos"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "[", "neighbourhoodpos", "]"}], ">", "targetcell"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"targetcell", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Last", "[", "neighbourhoodpos", "]"}], "-", 
            "targetcell"}], ")"}]}], ",", 
         RowBox[{"Last", "[", "neighbourhoodpos", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"First", "[", "neighbourhoodpos", "]"}], ",", 
         RowBox[{"targetcell", "+", 
          RowBox[{"(", 
           RowBox[{"targetcell", "-", 
            RowBox[{"First", "[", "neighbourhoodpos", "]"}], "-", "1"}], 
           ")"}]}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8037326347262297`*^9, {3.803734733857826*^9, 3.803734760123012*^9}, {
   3.807891213470301*^9, 3.807891261467372*^9}, {3.80789130577149*^9, 
   3.807891451638402*^9}, {3.807966658247435*^9, 3.8079666708338633`*^9}, 
   3.808665909188081*^9, 3.808669740802098*^9, 3.808676772641275*^9, {
   3.809786136745831*^9, 3.809786139839836*^9}, {3.820065190135041*^9, 
   3.8200652070210414`*^9}, {3.82006583659944*^9, 3.820065854917469*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"74ec85e5-8383-4794-8804-13c55a7cc453"],

Cell[TextData[{
 "\nDummyNeighbours yields the dummy positions of the state transition table \
of rule ",
 StyleBox["rnum. IthDummyNeighbourQ",
  FontSlant->"Italic"],
 " is a predicate that says whether position ",
 StyleBox["i",
  FontSlant->"Italic"],
 " is dummy. A dummy neighbour is a position in the neighbourhood whose vale \
doesn\[CloseCurlyQuote]t affect the output; in the case of binary rules, this \
means that position doesn\[CloseCurlyQuote]t show up in the RuleMinDNF of the \
rule.\n\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 " \nDummyNeighbours[204, 2, 1]  =>  {1, 3}\nDummyNeighbours[0, 2, 1]  =>  \
{1, 2, 3}\nIthDummyNeighbourQ[204, 2, 1, #]& /@ {1,2,3}  =>  {True, False, \
True}"
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746379399197089*^9, 3.746379431857475*^9}, {
   3.746379493841545*^9, 3.746379554565198*^9}, {3.746379676168296*^9, 
   3.746379685869966*^9}, {3.746442146896947*^9, 3.746442275059834*^9}, {
   3.746442359769985*^9, 3.746442488035349*^9}, 3.74644256638582*^9, {
   3.746955555663909*^9, 3.7469556081050253`*^9}, {3.7471340020773926`*^9, 
   3.7471340934166527`*^9}, {3.747134129710129*^9, 3.747134151647254*^9}, {
   3.747134230318872*^9, 3.747134381373396*^9}, {3.747134438930008*^9, 
   3.747134578226083*^9}, {3.747152443869955*^9, 3.747152468799117*^9}, {
   3.747388859396843*^9, 3.7473890271900687`*^9}, {3.747389075564741*^9, 
   3.7473890861403723`*^9}, 3.803731422265257*^9, 3.803731662002095*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d5051a35-43ac-4c58-9199-1af7aa3ac5a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DummyNeighbours", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"\[LeftCeiling]", 
           RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "1"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"IthDummyNeighbourQ", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "#"}], "]"}], "&"}]}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IthDummyNeighbourQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "i_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Union", "[", 
            RowBox[{"#1", "/.", "\[VeryThinSpace]", 
             RowBox[{"MapThread", "[", 
              RowBox[{"Rule", ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"RuleTable", "[", 
                 RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}], 
              "]"}]}], "]"}], "]"}], "&"}], ")"}], "/@", 
        RowBox[{"GatherBy", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"2", " ", "r"}], "+", "1"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"{", "i", "}"}]}], "]"}], "&"}]}], "]"}]}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", "1", "}"}]}], ",", "True", ",", "False"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7469803239751463`*^9, 3.746980403458878*^9}, {
   3.7469804435680666`*^9, 3.746980462304543*^9}, {3.746980496847847*^9, 
   3.746980561375942*^9}, {3.746980592031427*^9, 3.7469806861793156`*^9}, {
   3.746980800599394*^9, 3.746980807074954*^9}, 3.747132606236587*^9, 
   3.747133280587798*^9, 3.74713336789404*^9, {3.747133443400078*^9, 
   3.74713344666*^9}, {3.747386818153513*^9, 3.747386827961471*^9}, {
   3.80373202100706*^9, 3.803732027717317*^9}, {3.846839774720934*^9, 
   3.846839781563044*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"f74cbcc0-6713-4f54-a62b-5bce6425a809"]
}, Closed]],

Cell[CellGroupData[{

Cell["Corresponding Rule Number in the Space with Larger Radii", "Subsection",
 CellChangeTimes->{{3.5353201524550967`*^9, 3.535320160207052*^9}, {
  3.803731317409241*^9, 3.803731319520136*^9}, {3.803731698755246*^9, 
  3.80373169951398*^9}, {3.809793106972826*^9, 
  3.809793114175969*^9}},ExpressionUUID->"dd9568ad-cf1c-436b-a223-\
3b5c9412cd1d"],

Cell[TextData[{
 StyleBox["ExtendRuleRadius",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" takes the given ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["k",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["-ary ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["rnum",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" rule with radius ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["r",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", and works out its corresponding number in the space defined by \
radius ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["targetradius",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[". The function relies on the auxiliary function ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["ExtendNeighbourhood",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", that generates a set of ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["k",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["-ary neighbourhoods of radius ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["targetradius",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" using ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["currentNeighbourhood",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" as the basis for the extended neighbourhoods; if the state \
transition output ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stOutput",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is given, a set of state transitions based on the extended \
neighbourhoods is generated associated to ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stOutput",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[". \n\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Examples of usage:",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" \nExtendRuleRadius[{8, 2, 0.5}, 1] \[Implies] {192, 2, 1}\n\
ExtendRuleRadius[{8, 2, 0.5}, 1.5] \[Implies] {49344, 2, 1.5}\n\
ExtendRuleRadius[{8, 2, 0.5}, 2] \[Implies] {4026593280, 2, 2}\n\
ExtendNeighbourhood[{0,1}, 1, 2, 1] \[Implies] {{{0,1,1}, 1}, {{0,1,0}, 1}}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.809788396464553*^9, 3.809788447141567*^9}, {
  3.809788591150367*^9, 3.8097885917313614`*^9}, {3.809791352435851*^9, 
  3.80979135384107*^9}, {3.809791799113652*^9, 3.809791892449425*^9}, {
  3.809791923071825*^9, 3.809792225115713*^9}, {3.80979239423455*^9, 
  3.809792491753143*^9}, {3.809792535055757*^9, 3.809792698225809*^9}, {
  3.80979273795842*^9, 3.809792935128191*^9}, {3.809793011692089*^9, 
  3.809793096252235*^9}},ExpressionUUID->"1ee5b3ff-4002-4195-9a99-\
911753d0b4fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtendRuleRadius", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
      "targetradius_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rtab", "=", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RnumFromRuleTable", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"ExtendNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "k", ",", 
                   "targetradius"}], "]"}], "&"}], "/@", "rtab"}], ",", "1"}],
               "]"}], ",", "First"}], "]"}], "]"}], ",", "k"}], "]"}], ",", 
        "k", ",", "targetradius"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtendNeighbourhood", "[", 
     RowBox[{
     "currentNeighbourhood_List", ",", "k_Integer", ",", "targetradius_"}], 
     "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"missingleft", "=", 
         RowBox[{
          RowBox[{"\[LeftCeiling]", "targetradius", "\[RightCeiling]"}], "-", 
          RowBox[{"\[LeftCeiling]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "currentNeighbourhood", "]"}], "-", 
              "1"}], ")"}], "/", "2"}], "\[RightCeiling]"}]}]}], ",", 
        RowBox[{"missingright", "=", 
         RowBox[{
          RowBox[{"\[LeftFloor]", "targetradius", "\[RightFloor]"}], "-", 
          RowBox[{"\[LeftFloor]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "currentNeighbourhood", "]"}], "-", 
              "1"}], ")"}], "/", "2"}], "\[RightFloor]"}]}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"left", ",", "currentNeighbourhood", ",", "right"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"left", ",", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}], ",", "missingleft"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"right", ",", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}], ",", "missingright"}], 
               "]"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtendNeighbourhood", "[", 
    RowBox[{
    "currentNeighbourhood_List", ",", "stOutput_Integer", ",", "k_Integer", 
     ",", "targetradius_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", "stOutput"}], "}"}], "&"}], "/@", 
    RowBox[{"ExtendNeighbourhood", "[", 
     RowBox[{"currentNeighbourhood", ",", "k", ",", "targetradius"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097824434411135`*^9, 3.809782540786123*^9}, {
   3.809782597338119*^9, 3.809782619379629*^9}, {3.8097828422347794`*^9, 
   3.8097828487307835`*^9}, {3.809784705179109*^9, 3.809784707034109*^9}, {
   3.80978476072311*^9, 3.809784771954514*^9}, {3.809788588563367*^9, 
   3.809788589215371*^9}, {3.809791363340035*^9, 3.809791367881357*^9}, {
   3.809792364815186*^9, 3.8097923795726423`*^9}, {3.809792548197524*^9, 
   3.809792552405393*^9}, 3.815207571749118*^9, {3.842345073139846*^9, 
   3.842345075026114*^9}, {3.842345160518224*^9, 3.84234516310318*^9}, {
   3.842345242247217*^9, 3.842345243819458*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"920f46e6-d95e-4935-a17e-5b2b2e75470c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th Derived Rule Number in the Space r-1"
}], "Subsection",
 CellChangeTimes->{{3.535318008907742*^9, 3.5353180253853407`*^9}, {
  3.535319273488345*^9, 3.535319275840138*^9}, {3.535735628940446*^9, 
  3.535735630772016*^9}, {3.803731703489486*^9, 3.803731703833757*^9}, {
  3.80373496159431*^9, 
  3.803734976767557*^9}},ExpressionUUID->"be4e75c6-1c9d-498a-a778-\
f6cd8539ca42"],

Cell[TextData[{
 "NumberOfDerivedRnumsInSmallerRadius takes an ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " and works out the number of possible rules derived from it in the smaller \
space ",
 StyleBox["r-",
  FontSlant->"Italic"],
 "1; DerivedRnumsInSmallerRadius yields the ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th rule of the set of possible derived rules. The derived rules are those \
that can be obtained by truncating the larger state transition neighbourhoods \
of the given rule, while preserving the corresponding output states, in all \
possible combinations. Notice that there\[CloseCurlyQuote]s not necessarily a \
connection between the derived rules and the corresponding rule in space r+1; \
so, while ECA rules {0,2,1} and {1,2,1} are the derived rules from radius-2 \
rule {1,2,2}, the corresponding rules in radius-2 of the latter ECA rules \
are, respectively, {0, 2, 2} and {196611, 2, 2}. \n\n",
 StyleBox["Implementation note:\n",
  FontWeight->"Bold"],
 "1) Only works for k=2.\[LineSeparator]2) A version can still be made to \
derive rule in space ",
 StyleBox["r-",
  FontSlant->"Italic"],
 "0.5."
}], "Text",
 CellChangeTimes->{{3.535735604485756*^9, 3.5357356183087463`*^9}, {
   3.535735648520093*^9, 3.535735774258787*^9}, {3.535736949239204*^9, 
   3.535736997875936*^9}, {3.535738290214608*^9, 3.535738361503502*^9}, {
   3.535738399631009*^9, 3.535738791866759*^9}, {3.621869388752825*^9, 
   3.621869444999614*^9}, {3.62186956235671*^9, 3.621869575148226*^9}, {
   3.621869609107808*^9, 3.621869609452238*^9}, {3.746954786639342*^9, 
   3.746954800033786*^9}, 3.803731659018571*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7cfc76d7-aa5d-45f0-973c-9695f7b2a855"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDerivedRnumsInSmallerRadius", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", "r_"}], "]"}], ":=", 
    RowBox[{"NumberOfDerivedRnumsInSmallerRadius", "[", 
     RowBox[{"{", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumberOfDerivedRnumsInSmallerRadius", "[", 
    RowBox[{"{", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", "r_"}], "}"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"allSTs", ",", "fixedSTs", ",", "varSTs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"allSTs", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", "1"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fixedSTs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"allSTs", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "===", "1"}], ")"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"varSTs", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"allSTs", ",", "fixedSTs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"varSTs", "===", 
         RowBox[{"{", "}"}]}], ",", "1", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"(", 
           RowBox[{"Length", "/@", "varSTs"}], ")"}]}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.535721749101471*^9, 3.535721893412874*^9}, 
   3.535721925538256*^9, {3.5357220034297*^9, 3.53572205735605*^9}, {
   3.535723325390347*^9, 3.535723355112264*^9}, {3.53573049161662*^9, 
   3.535730501959391*^9}, {3.535731360795957*^9, 3.535731381186472*^9}, {
   3.535731438533552*^9, 3.535731448038167*^9}, {3.535731498504153*^9, 
   3.535731577086239*^9}, 3.535731760649992*^9, {3.535735801887671*^9, 
   3.535735803366589*^9}, 3.746954840291327*^9, {3.746955025142131*^9, 
   3.746955039724827*^9}, {3.746955428298008*^9, 3.746955437592148*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"28dd21ee-dd5e-4fe6-8174-9f6e1ed0f610"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DerivedRnumsInSmallerRadius", "[", 
    RowBox[{
     RowBox[{"ithRule_Integer", ":", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", "r_"}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"allSTs", ",", "fixedSTs", ",", "varNeighs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"allSTs", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", "1"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fixedSTs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"allSTs", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "===", "1"}], ")"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"varNeighs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
        RowBox[{"Complement", "[", 
         RowBox[{"allSTs", ",", "fixedSTs"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"varNeighs", "===", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"RnumFromRuleTable", "[", 
         RowBox[{
          RowBox[{"Reverse", "@", 
           RowBox[{"(", 
            RowBox[{"First", "/@", "fixedSTs"}], ")"}]}], ",", "k"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"RnumFromRuleTable", "[", 
         RowBox[{
          RowBox[{"Reverse", "@", 
           RowBox[{"Sort", "@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"First", "/@", "fixedSTs"}], ",", 
              RowBox[{"MapThread", "[", 
               RowBox[{"List", ",", 
                RowBox[{"{", 
                 RowBox[{"varNeighs", ",", 
                  RowBox[{"IthTuple", "[", 
                   RowBox[{"ithRule", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", "varNeighs", "]"}]}], "]"}]}], 
                 "}"}]}], "]"}]}], "]"}]}]}], ",", "k"}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.532287501753744*^9, 3.532287516823922*^9}, 
   3.532287556544432*^9, {3.532287954583362*^9, 3.532288321577601*^9}, {
   3.532292033143278*^9, 3.532292088068716*^9}, {3.532292225486431*^9, 
   3.532292237151794*^9}, {3.532292375006175*^9, 3.532292496106864*^9}, 
   3.5322925317971563`*^9, {3.532292633067943*^9, 3.532292717991805*^9}, {
   3.5322927708367863`*^9, 3.532292790704965*^9}, {3.532292875155909*^9, 
   3.532292878503097*^9}, {3.532292935707297*^9, 3.532293209858049*^9}, {
   3.535320184115942*^9, 3.535320184498931*^9}, {3.535399034814729*^9, 
   3.535399045034761*^9}, {3.535718747781792*^9, 3.535718751435141*^9}, {
   3.535718921094404*^9, 3.535718955350994*^9}, {3.535721464786258*^9, 
   3.535721497954195*^9}, {3.535721549502022*^9, 3.535721581474087*^9}, {
   3.535721647249238*^9, 3.535721655312664*^9}, {3.535721690863603*^9, 
   3.535721741037324*^9}, {3.535722250846874*^9, 3.535722259134734*^9}, {
   3.535722362007245*^9, 3.5357223670938997`*^9}, {3.535722398424829*^9, 
   3.535722405878684*^9}, 3.535722587418326*^9, {3.535722627001902*^9, 
   3.535722629529824*^9}, {3.5357230452909822`*^9, 3.535723048156217*^9}, 
   3.53572311925483*^9, {3.5357321925372467`*^9, 3.5357321937139397`*^9}, {
   3.535732229889057*^9, 3.53573223623205*^9}, {3.53573578624049*^9, 
   3.535735795953128*^9}, 3.621869331860824*^9},
 CellLabel->
  "In[239]:=",ExpressionUUID->"6f97ad71-a46d-4219-a5e2-55b32edbafc7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rule Composition / Decomposition", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489418283304*^9, {3.5732150979044127`*^9, 3.573215172540297*^9}, {
   3.762596801540178*^9, 
   3.7625968112339587`*^9}},ExpressionUUID->"3fad775d-fa38-4b15-9e81-\
736f50076517"],

Cell[TextData[{
 "Given two arbitrary input rules ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["rnum", "1"]}], TraditionalForm]],ExpressionUUID->
  "6c2afcf6-4394-4767-9614-078a66d9af7d"],
 StyleBox[", r1, k",
  FontSlant->"Italic"],
 "} and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["rnum", "2"]}], TraditionalForm]],ExpressionUUID->
  "29ec8e9f-76ea-45c9-b2f1-f75e5d23bcbe"],
 StyleBox[", r2, k",
  FontSlant->"Italic"],
 "}, CompositeRule returns the rule {",
 StyleBox["rnum, r1+r2, k",
  FontSlant->"Italic"],
 "} that results from ",
 StyleBox["composing",
  FontWeight->"Bold"],
 " the first rule with the second. The ",
 StyleBox["composed rule",
  FontWeight->"Bold"],
 " means that the action of {",
 StyleBox["rnum, r1+r2, k",
  FontSlant->"Italic"],
 "} in one time step is the same as the application of {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["rnum", "2"], TraditionalForm]],ExpressionUUID->
  "01e702ff-6ed8-43ca-80fd-e69ef66fc804"],
 StyleBox[", r2, k",
  FontSlant->"Italic"],
 "} for one time step, followed by the application of {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["rnum", "1"], TraditionalForm]],ExpressionUUID->
  "fa4ff324-295a-4a11-8be9-52c9c985e87d"],
 StyleBox[", r1, k",
  FontSlant->"Italic"],
 "} for an additional time step. CompositeRule accepts an arbitrary sequence \
of ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary rules {{",
 Cell[BoxData[
  FormBox[
   SubscriptBox["rnum", "1"], TraditionalForm]],ExpressionUUID->
  "443a774e-3e6e-4011-9efe-b3c179f7e42e"],
 StyleBox[", r1",
  FontSlant->"Italic"],
 "}, {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["rnum", "2"], TraditionalForm]],ExpressionUUID->
  "6e332209-5b23-43b1-acbb-7ddec0cf53fd"],
 StyleBox[", r2",
  FontSlant->"Italic"],
 "}, ..., {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["rnum", "n"], TraditionalForm]],ExpressionUUID->
  "fe42f479-b07c-4577-b962-cb163f000b73"],
 StyleBox[", ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "n"], TraditionalForm]],ExpressionUUID->
  "4ae6d416-77b3-4a00-8eb3-867d044098ef"],
 "}}, provided as a list. \n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": \nCompositeRule[{5, 0.5}, {54, 1}, 2]   ==>  {51657, 2, 1.5}\n\
CompositeRule[{{232,1}, {3,0.5}, {184,1}}, 2]  ==>  {17733194119856127, 2, \
2.5}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\n1) ",
 StyleBox["CompositeRuleTable",
  FontSlant->"Italic"],
 " is an auxiliary function used only here.\n2) The function has the same \
implementation as the faster version (commented out below), but saves memory \
as it doesn\[CloseCurlyQuote]t explicitly handle the set of state \
transitions, but simply the rule\[CloseCurlyQuote]s ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary representation."
}], "Text",
 CellChangeTimes->{{3.569331485227644*^9, 3.569331504881344*^9}, {
   3.569341496625467*^9, 3.569341877135335*^9}, {3.569342179868981*^9, 
   3.56934235078698*^9}, {3.569345381029118*^9, 3.569345385068578*^9}, {
   3.5732152135427017`*^9, 3.573215634176034*^9}, {3.5732156796303873`*^9, 
   3.573215716937791*^9}, {3.573221706978036*^9, 3.5732217075262346`*^9}, {
   3.573221738937748*^9, 3.573221966719859*^9}, {3.573222354770028*^9, 
   3.573222655789977*^9}, {3.573235373356277*^9, 3.57323538329491*^9}, {
   3.573235550805191*^9, 3.5732356452006693`*^9}, {3.573235685527568*^9, 
   3.573235834157926*^9}, {3.573235868739017*^9, 3.573235894134626*^9}, {
   3.575914116680661*^9, 3.57591423360913*^9}, 3.575914304574484*^9, {
   3.575914351054474*^9, 3.575914483163134*^9}, {3.575914820933111*^9, 
   3.575914823437934*^9}, {3.575914863007093*^9, 3.575915039472883*^9}, {
   3.575915207495357*^9, 3.5759152387788873`*^9}, {3.575915300925681*^9, 
   3.575915301015944*^9}, {3.68468506808124*^9, 3.684685069775674*^9}, {
   3.8421083985065517`*^9, 3.8421083997500963`*^9}, {3.927959932358232*^9, 
   3.927959952457148*^9}, {3.9279599845918417`*^9, 3.927960038811083*^9}, {
   3.9327199483998537`*^9, 3.932719948669403*^9}, {3.932725485279402*^9, 
   3.932725501275406*^9}, {3.9327255848684387`*^9, 3.932725608786221*^9}, {
   3.933170461035589*^9, 3.933170462116124*^9}, {3.933172077761804*^9, 
   3.9331721333696823`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ead05ae7-45da-4ee0-8bca-f2a8ff8cabea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CompositeRule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum1_Integer", ",", 
        RowBox[{"r1_", ":", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rnum2_Integer", ",", 
        RowBox[{"r2_", ":", "1"}]}], "}"}], ",", 
      RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"CompositeRuleTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rnum1", ",", "r1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"rnum2", ",", "r2"}], "}"}], ",", "k"}], "]"}], ",", "k"}],
        "]"}], ",", "k", ",", 
      RowBox[{"r1", "+", "r2"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CompositeRule", "[", 
     RowBox[{"ruleradiusSequence_List", ",", 
      RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CompositeRule", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#1", "]"}], "===", "2"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "]"}], ",", "#2", ",", "k"}], "]"}], "&"}], ",", 
      RowBox[{"First", "[", "ruleradiusSequence", "]"}], ",", 
      RowBox[{"Rest", "[", "ruleradiusSequence", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CompositeRuleTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum1_Integer", ",", "r1_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum2_Integer", ",", "r2_"}], "}"}], ",", "k_Integer"}], "]"}],
    ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{
       RowBox[{"CellularAutomaton", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rnum1", ",", "k", ",", "r1"}], "}"}], ",", 
         RowBox[{
          RowBox[{"CellularAutomaton", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rnum2", ",", "k", ",", "r2"}], "}"}], ",", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"i", ",", "k", ",", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{"r1", "+", "r2"}], ")"}]}], "+", "1"}]}], "]"}]}], 
           "]"}], "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"\[LeftCeiling]", "r2", "\[RightCeiling]"}]}], ";;", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"\[LeftFloor]", "r2", "\[RightFloor]"}]}]}], 
          "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"\[LeftCeiling]", "r1", "\[RightCeiling]"}]}], ";;", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[LeftFloor]", "r1", "\[RightFloor]"}]}]}], 
       "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        SuperscriptBox["k", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"r1", "+", "r2"}], ")"}]}], "+", "1"}]], "-", "1"}], ",", 
       "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9326521579113197`*^9, 3.932652212999983*^9}, {
   3.9326522509846735`*^9, 3.93265227652001*^9}, {3.9327191403871393`*^9, 
   3.932719143312832*^9}, {3.932741113255445*^9, 3.9327411169122953`*^9}, {
   3.933169842657889*^9, 3.933169842660603*^9}, 3.933170924483457*^9, {
   3.933171992992206*^9, 3.93317199632239*^9}, 3.933172147153612*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"9ef3691c-2f3d-4cb8-8973-c38522586078"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "the", " ", "original"}], ",", " ", 
    RowBox[{"slower", " ", 
     RowBox[{"implementation", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CompositeRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rnum1_Integer", ",", 
         RowBox[{"r1_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rnum2_Integer", ",", 
         RowBox[{"r2_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"CompositeRuleTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum1", ",", "r1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rnum2", ",", "r2"}], "}"}], ",", "k"}], "]"}], ",", 
         "k"}], "]"}], ",", "k", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FractionalPart", "[", 
           RowBox[{"r1", "+", "r2"}], "]"}], "===", "0."}], ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{"r1", "+", "r2"}], "\[RightFloor]"}], ",", 
         RowBox[{"r1", "+", "r2"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CompositeRule", "[", 
      RowBox[{"ruleradiusSequence_List", ",", 
       RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CompositeRule", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], "===", "2"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "]"}], ",", "#2", ",", "k"}], "]"}], "&"}], ",", 
       RowBox[{"First", "@", "ruleradiusSequence"}], ",", 
       RowBox[{"Rest", "@", "ruleradiusSequence"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CompositeRuleTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rnum1_Integer", ",", 
         RowBox[{"r1_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rnum2_Integer", ",", 
         RowBox[{"r2_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{"List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AllNeighbourhoods", "[", 
          RowBox[{"k", ",", 
           RowBox[{"r1", "+", "r2"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"#", ",", 
                RowBox[{"\[LeftFloor]", 
                 RowBox[{
                  RowBox[{"2", "*", "r2"}], "+", "1"}], "\[RightFloor]"}], 
                ",", "1"}], "]"}], "&"}], "/@", 
             RowBox[{"AllNeighbourhoods", "[", 
              RowBox[{"k", ",", 
               RowBox[{"r1", "+", "r2"}]}], "]"}]}], "/.", 
            RowBox[{"RulifyRuleTable", "[", 
             RowBox[{"rnum2", ",", "k", ",", "r2"}], "]"}]}], ")"}], "/.", 
          RowBox[{"RulifyRuleTable", "[", 
           RowBox[{"rnum1", ",", "k", ",", "r1"}], "]"}]}]}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RulifyRuleTable", "[", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "@@", "#"}], "&"}], "/@", 
      RowBox[{"RuleTable", "[", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5855170487277*^9, 3.585517139171867*^9}, {
   3.585517306872161*^9, 3.5855174617492332`*^9}, {3.585517508502519*^9, 
   3.585517567221019*^9}, {3.585517612726299*^9, 3.585517637514742*^9}, {
   3.585517684798425*^9, 3.585517699758851*^9}, {3.585517778039789*^9, 
   3.585517781190995*^9}, {3.58551781855306*^9, 3.585517820893064*^9}, {
   3.585517879627167*^9, 3.585517971074528*^9}, {3.585518195792923*^9, 
   3.5855181970565248`*^9}, {3.585518317301536*^9, 3.5855183774084415`*^9}, {
   3.5855184255657263`*^9, 3.5855184631305923`*^9}, {3.5855185146106825`*^9, 
   3.585518515952285*^9}, {3.58551862123687*^9, 3.5855186272740803`*^9}, {
   3.5855186746045637`*^9, 3.585518708799824*^9}, {3.5855202860830016`*^9, 
   3.585520288001805*^9}, 3.762595232686529*^9, {3.7625957389890842`*^9, 
   3.762595742816413*^9}, 3.777654497194499*^9, {3.820065963374006*^9, 
   3.820065963517005*^9}, {3.933169022168528*^9, 3.933169024940411*^9}, {
   3.933170420827195*^9, 3.933170448670496*^9}, {3.9331706996155024`*^9, 
   3.9331707551586943`*^9}, {3.933170919860486*^9, 3.9331709219334097`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"0479d5eb-d055-4cdb-9a16-0311bba3f530"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", "is", " ", "a", " ", "faster", " ", 
    RowBox[{"implementation", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CompositeRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rnum1_Integer", ",", 
         RowBox[{"r1_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rnum2_Integer", ",", 
         RowBox[{"r2_", ":", "1"}]}], "}"}], ",", 
       RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RnumFromRuleTable", "[", 
        RowBox[{
         RowBox[{"CompositeRuleTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum1", ",", "r1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rnum2", ",", "r2"}], "}"}], ",", "k"}], "]"}], ",", 
         "k"}], "]"}], ",", "k", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FractionalPart", "[", 
           RowBox[{"r1", "+", "r2"}], "]"}], "===", "0."}], ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"r1", "+", "r2"}], "]"}], ",", 
         RowBox[{"r1", "+", "r2"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CompositeRule", "[", 
      RowBox[{"ruleradiusSequence_List", ",", 
       RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CompositeRule", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], "===", "2"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "]"}], ",", "#2", ",", "k"}], "]"}], "&"}], ",", 
       RowBox[{"First", "[", "ruleradiusSequence", "]"}], ",", 
       RowBox[{"Rest", "[", "ruleradiusSequence", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\n", 
    RowBox[{
     RowBox[{"CompositeRuleTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rnum1_Integer", ",", "r1_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rnum2_Integer", ",", "r2_"}], "}"}], ",", "k_Integer"}], 
      "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"i", ",", "k", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"r1", "+", "r2"}], ")"}]}], "+", "1"}]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"First", "[", 
            RowBox[{
             RowBox[{"CellularAutomaton", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rnum1", ",", "k", ",", "r1"}], "}"}], ",", 
               RowBox[{
                RowBox[{"CellularAutomaton", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rnum2", ",", "k", ",", "r2"}], "}"}], ",", "c"}], 
                 "]"}], "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"1", "+", 
                  RowBox[{"\[LeftCeiling]", "r2", "\[RightCeiling]"}]}], ";;", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"\[LeftFloor]", "r2", "\[RightFloor]"}]}]}], 
                "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"1", "+", 
               RowBox[{"\[LeftCeiling]", "r1", "\[RightCeiling]"}]}], ";;", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"\[LeftFloor]", "r1", "\[RightFloor]"}]}]}], 
             "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          SuperscriptBox["k", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"r1", "+", "r2"}], ")"}]}], "+", "1"}]], "-", "1"}], 
         ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.9326503552725163`*^9, 3.9326504008082905`*^9}, {
   3.9326506036872253`*^9, 3.932650608307836*^9}, {3.932650893339834*^9, 
   3.9326509087093544`*^9}, {3.9327191315221148`*^9, 3.93271913431199*^9}, 
   3.932736452714191*^9, {3.932741098452557*^9, 3.93274110404252*^9}, {
   3.933169896843028*^9, 3.933169896845813*^9}, {3.933172023148108*^9, 
   3.93317203893324*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"600c6d02-3e32-4448-b25e-cf99d7e2a5d1"],

Cell[TextData[{
 "\nDecomposeCA decomposes the input local rule into into all possibilities \
of two others, the radius of the one to the right being ",
 StyleBox["r2",
  FontSlant->"Italic"],
 ".\n",
 StyleBox["CompleteRuleTable is auxiliary to DecomposeCA that completes the \
partial rule table ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["partialrtab",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" by adding missing neighbourhoods with every possible state \
transition. So, for one missing neighbourhood the output is a list of ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["k",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" rules, for two missing neighbourhoods the output is a list of k\
\.b2 rules and so on; if there are no missing neighbourhoods the output is a \
list containing ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["rtab",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\nDecomposeCA[{187, 2, 1}, 0.5]  \[Implies]  {{{5, 2, 0.5}, {4, \
2, 0.5}}, {{13, 2, 0.5}, {4, 2, 0.5}}, {{13, 2, 0.5}, {5, 2, 0.5}}, {{11, 2, \
0.5}, {10, 2, 0.5}}, {{10, 2, 0.5}, {11, 2, 0.5}}, {{11, 2, 0.5}, {11, 2, \
0.5}}}\nCompositeRule[{#\[LeftDoubleBracket]1, 1\[RightDoubleBracket], #\
\[LeftDoubleBracket]1, 3\[RightDoubleBracket]}, {#\[LeftDoubleBracket]2, 1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2, 3\[RightDoubleBracket]}, 2] & \
/@ DecomposeCA[{187, 2, 1}, 0.5]  \[Implies]  {{187, 2, 1}, {187, 2, 1}, \
{187, 2, 1}, {187, 2, 1}, {187, 2, 1}, {187, 2, 1}}\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Implementation note",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\n1) First, all possibilities are exhaustively tried for the \
right-hand rule defined by r2. Then, the left-hand rules are found, \
respecting the state transition constraints imposed by the right-hand rule. ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.569331485227644*^9, 3.569331504881344*^9}, {
   3.569341496625467*^9, 3.569341877135335*^9}, {3.569342179868981*^9, 
   3.56934235078698*^9}, {3.569345381029118*^9, 3.569345385068578*^9}, {
   3.5732152135427017`*^9, 3.573215634176034*^9}, {3.5732156796303873`*^9, 
   3.573215716937791*^9}, {3.573221706978036*^9, 3.5732217075262337`*^9}, {
   3.573221738937748*^9, 3.573221966719859*^9}, {3.573222354770028*^9, 
   3.573222655789977*^9}, {3.573235373356277*^9, 3.57323538329491*^9}, {
   3.573235550805191*^9, 3.5732356452006693`*^9}, {3.573235685527568*^9, 
   3.573235834157926*^9}, {3.573235868739017*^9, 3.573235894134626*^9}, {
   3.575914116680661*^9, 3.57591423360913*^9}, 3.575914304574484*^9, {
   3.575914351054474*^9, 3.575914483163134*^9}, {3.575914820933111*^9, 
   3.575914823437934*^9}, {3.575914863007093*^9, 3.575915039472883*^9}, {
   3.575915207495357*^9, 3.5759152387788873`*^9}, {3.575915300925681*^9, 
   3.575915301015944*^9}, {3.68468506808124*^9, 3.684685069775674*^9}, {
   3.762596454921866*^9, 3.762596663406513*^9}, {3.762596713230555*^9, 
   3.762596766765441*^9}, {3.762706791431025*^9, 3.762706791983397*^9}, {
   3.810489032250375*^9, 3.8104890572711554`*^9}, {3.81048921655026*^9, 
   3.810489264114757*^9}, {3.8104893082486253`*^9, 3.810489325697612*^9}, {
   3.810489360055386*^9, 3.810489438310928*^9}, 3.810489501592215*^9, {
   3.810489704532859*^9, 3.810489705760572*^9}, {3.8104897478087463`*^9, 
   3.8104900246982713`*^9}, {3.815220909650591*^9, 3.815220927324659*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4f5cf51f-8751-491f-97a9-33d12d8b1816"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DecomposeCA", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", "k_Integer", ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
      RowBox[{"r2_", ":", "0.5"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rtab", "=", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
        RowBox[{"right", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"Rule", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Tuples", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}]}], ",", 
                 RowBox[{"IntegerPart", "[", 
                  RowBox[{
                   RowBox[{"2", "*", "r2"}], "+", "1"}], "]"}]}], "]"}], ",", 
               "t"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"k", "-", "1"}]}], "]"}], ",", 
               RowBox[{"IntegerPart", "[", 
                SuperscriptBox["k", 
                 RowBox[{
                  RowBox[{"2", "*", "r2"}], "+", "1"}]], "]"}]}], "]"}]}], 
            "}"}]}], "]"}]}], ",", 
        RowBox[{"validright", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"preimgs", "=", 
         RowBox[{"NeighbourhoodsOfEachState", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "leftnumbers", 
        ",", "rightnumbers"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Intersection", "[", "##", "]"}], "&"}], "@@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Union", "[", "#", "]"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"2", "*", "r2"}], "]"}], "+", "1"}], ",", "1"}], 
                    "]"}], "&"}], ",", "preimgs", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], "/.", "rr"}], ")"}]}], 
                ")"}]}], ")"}], "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"validright", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"validright", ",", 
               RowBox[{"{", "rr", "}"}]}], "]"}]}]}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"rr", ",", "right"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rightnumbers", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", "#", "]"}], "&"}], "/@", 
         "validright"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"leftnumbers", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"RnumFromRuleTable", "[", "#", "]"}], "&"}], "/@", 
            RowBox[{"CompleteRuleTable", "[", 
             RowBox[{"#", ",", "k"}], "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"SortBy", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{"List", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "#", "]"}], ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    RowBox[{"2", "*", "r2"}], "+", "1"}], "]"}], ",", "1"}], 
                    "]"}], "&"}], "/@", "rtab"}], ")"}], "/.", "rr"}], ",", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "rtab", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"SameTest", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "@", "#1"}], "\[Equal]", 
                    RowBox[{"First", "@", "#2"}]}], ")"}], "&"}], ")"}]}]}], 
               "]"}], ",", "First"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"rr", ",", "validright"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "k", ",", 
                 RowBox[{"r", "-", "r2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "rightnumbers", "\[LeftDoubleBracket]", "pos", 
                  "\[RightDoubleBracket]"}], ",", "k", ",", "r2"}], "}"}]}], 
              "}"}], "&"}], "/@", 
            RowBox[{
            "leftnumbers", "\[LeftDoubleBracket]", "pos", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"pos", ",", 
             RowBox[{"Length", "[", "rightnumbers", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompleteRuleTable", "[", 
    RowBox[{"partialrtab_List", ",", 
     RowBox[{"k_Integer", ":", "2"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"missingneighbourhoods", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"partialrtab", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"First", "[", "#1", "]"}], "&"}], ")"}], "/@", 
           "partialrtab"}]}], "]"}]}], ",", 
       RowBox[{"L", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"partialrtab", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ",", 
       "completing"}], "}"}], ",", 
     RowBox[{
      RowBox[{"completing", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{"missingneighbourhoods", ",", "x"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", "-", "1"}]}], "]"}], ",", 
             RowBox[{"Length", "[", "missingneighbourhoods", "]"}]}], "]"}]}],
           "}"}]}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Reverse", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"partialrtab", ",", "c"}], "]"}], ",", "First"}], "]"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "completing"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5855185897404146`*^9, 3.585518613811257*^9}, {
   3.585518648708518*^9, 3.585518649145319*^9}, {3.585518755303505*^9, 
   3.585518756863508*^9}, {3.585518895235751*^9, 3.58551907112606*^9}, {
   3.585519224302729*^9, 3.5855193008052635`*^9}, {3.585519331693318*^9, 
   3.585519528799664*^9}, {3.585519600980991*^9, 3.585519658342292*^9}, {
   3.585519688528344*^9, 3.585519757542866*^9}, {3.585519821627778*^9, 
   3.585519858615443*^9}, {3.585519916226344*^9, 3.585520085252641*^9}, {
   3.585520611299573*^9, 3.5855206205815897`*^9}, {3.58552071689616*^9, 
   3.585520720640166*^9}, {3.585520870384828*^9, 3.5855208940968695`*^9}, {
   3.5855209247197237`*^9, 3.5855209686338005`*^9}, {3.585521003484262*^9, 
   3.585521027882705*^9}, {3.585521067225974*^9, 3.5855210963044252`*^9}, {
   3.585521131264087*^9, 3.585521172448159*^9}, {3.585521231431863*^9, 
   3.585521243365883*^9}, {3.585521290399969*^9, 3.585521341427658*^9}, {
   3.58552137808772*^9, 3.585521407712172*^9}, 3.762595232691876*^9, {
   3.81048889762338*^9, 3.810488906285797*^9}, {3.810488951589409*^9, 
   3.810488961051321*^9}, {3.810488993958435*^9, 3.81048900226755*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"dadfa0f4-8a04-4f0e-acd5-3c4df4dda40e"],

Cell[TextData[{
 "\nDecomposibleQ is a predicate that states whether the input local rule is \
decomposable into two others, the radius of the one to the right being ",
 StyleBox["r2",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.569331485227644*^9, 3.569331504881344*^9}, {
   3.569341496625467*^9, 3.569341877135335*^9}, {3.569342179868981*^9, 
   3.56934235078698*^9}, {3.569345381029118*^9, 3.569345385068578*^9}, {
   3.5732152135427017`*^9, 3.573215634176034*^9}, {3.5732156796303873`*^9, 
   3.573215716937791*^9}, {3.573221706978036*^9, 3.5732217075262337`*^9}, {
   3.573221738937748*^9, 3.573221966719859*^9}, {3.573222354770028*^9, 
   3.573222655789977*^9}, {3.573235373356277*^9, 3.57323538329491*^9}, {
   3.573235550805191*^9, 3.5732356452006693`*^9}, {3.573235685527568*^9, 
   3.573235834157926*^9}, {3.573235868739017*^9, 3.573235894134626*^9}, {
   3.575914116680661*^9, 3.57591423360913*^9}, 3.575914304574484*^9, {
   3.575914351054474*^9, 3.575914483163134*^9}, {3.575914820933111*^9, 
   3.575914823437934*^9}, {3.575914863007093*^9, 3.575915039472883*^9}, {
   3.575915207495357*^9, 3.5759152387788873`*^9}, {3.575915300925681*^9, 
   3.575915301015944*^9}, {3.68468506808124*^9, 3.684685069775674*^9}, {
   3.762596454921866*^9, 3.762596663406513*^9}, {3.762596713230555*^9, 
   3.762596766765441*^9}, {3.762706791431025*^9, 3.762706791983397*^9}, {
   3.810489032250375*^9, 3.8104890572711554`*^9}, {3.81048921655026*^9, 
   3.810489264114757*^9}, {3.8104893082486253`*^9, 3.810489325697612*^9}, {
   3.810489360055386*^9, 3.810489492300915*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"b9579181-59e4-47f9-b68b-0959ed36dca1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DecomposibleQ", "[", 
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"DecomposibleQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0.5", ",", 
            RowBox[{"r", "-", "0.5"}], ",", "0.5"}], "]"}]}], ",", "True"}], 
        "]"}], "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DecomposibleQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"r2_", ":", "0.5"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xi", "=", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"k", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "r2"}], "+", "1"}], ")"}]}], "]"}]}], "]"}]}],
        ",", 
       RowBox[{"preimgs", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"#", ",", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"2", "*", "r2"}], "+", "1"}], "]"}], ",", "1"}], 
              "]"}], "&"}], ",", 
            RowBox[{"NeighbourhoodsOfEachState", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{"{", "1", "}"}]}], "]"}]}], ",", "subrules", ",", 
       RowBox[{"flag", "=", "False"}], ",", 
       RowBox[{"i", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"subrules", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"k", "-", "1"}]}], "]"}], ",", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "*", "r2"}], "+", "1"}], ")"}], "]"}]}], "]"}],
              ",", "#"}], "}"}]}], "]"}], "&"}], "/@", "xi"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "xi", "]"}]}], "&&", 
         RowBox[{"flag", "\[Equal]", "False"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"flag", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Intersection", "[", "##", "]"}], "&"}], "@@", 
              RowBox[{"(", 
               RowBox[{"preimgs", "/.", 
                RowBox[{
                "subrules", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"i", "++"}], ";"}]}], "]"}], ";", "flag"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5855170487277*^9, 3.585517139171867*^9}, {
   3.585517306872161*^9, 3.5855174617492332`*^9}, {3.585517508502519*^9, 
   3.585517567221019*^9}, {3.585517612726299*^9, 3.585517637514742*^9}, {
   3.585517684798425*^9, 3.585517699758851*^9}, {3.585517778039789*^9, 
   3.585517781190995*^9}, {3.58551781855306*^9, 3.585517820893064*^9}, {
   3.585517879627167*^9, 3.585517971074528*^9}, {3.585518195792923*^9, 
   3.5855181970565248`*^9}, {3.585518317301536*^9, 3.5855183774084415`*^9}, {
   3.5855184255657263`*^9, 3.5855184631305923`*^9}, {3.5855185146106825`*^9, 
   3.585518515952285*^9}, {3.58551862123687*^9, 3.5855186272740803`*^9}, {
   3.5855186746045637`*^9, 3.585518708799824*^9}, {3.5855202860830016`*^9, 
   3.585520288001805*^9}, 3.762595232686529*^9, {3.7625957389890842`*^9, 
   3.762595742816413*^9}, {3.81048927235315*^9, 3.810489275737384*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"5cb32c3d-9551-46bf-b83a-1c50327872cf"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["16. Special CA executions", "Section",
 CellChangeTimes->{
  3.558189210406275*^9, {3.722676369895554*^9, 
   3.722676370840539*^9}},ExpressionUUID->"81e0fcaf-0231-4318-a81b-\
24411109a008"],

Cell[CellGroupData[{

Cell["Crossed ECAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489427507217*^9, 
   3.763375424532024*^9},ExpressionUUID->"339e45cd-8b9a-4b4b-a58b-\
fc3b84280f52"],

Cell[TextData[{
 "Takes two ECA rule numbers, runs the first one over the rows of the binary \
table ",
 StyleBox["ic",
  FontSlant->"Italic"],
 ", whose output becomes the input to the second rule, that runs over the \
columns of the latter. The process is repeated for ",
 StyleBox["nsteps",
  FontSlant->"Italic"],
 " timesteps. The whole thing works as if the ECA rule numbers were being \
executed as a cross, over the two-dimensional initial condition ",
 StyleBox["ic",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f9d6503a-1375-476b-a58e-6af60ae587e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CrossedECA", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum1_Integer", ",", "rnum2_Integer"}], "}"}], ",", " ", 
     RowBox[{"ic_", "?", "MatrixQ"}], ",", "nsteps_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", "ic", "]"}], ";", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sow", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CellularAutomaton", "[", 
              RowBox[{"rnum2", ",", " ", "#"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{"rnum1", ",", " ", "#"}], "]"}], "&"}], " ", "/@", 
              "  ", "#"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
        "\[IndentingNewLine]", "ic", ",", "nsteps"}], "]"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.603185455158346*^9, 3.603185470871022*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"d6120fc4-545c-4e99-982b-5feb3a2426e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Temporal composition of ECAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489423203025*^9, 3.573215110201934*^9, 
   3.763375365883835*^9},ExpressionUUID->"dca4a81e-f9eb-43bb-b1a0-\
16b3f4e24ab7"],

Cell[TextData[{
 "Temporal composition of ECA rules, according to what is specified in ",
 StyleBox["pairsofruleandsteps",
  FontSlant->"Italic"],
 ", that has the form {{rule1, nsteps1}, {rule2, nsteps2}, ...}."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7017ab62-d3bf-4129-8dd8-7003e2462eb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ECATemporalComposition", "[", 
    RowBox[{"pairsofruleandsteps_List", ",", "ic_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{
        RowBox[{"Sow", "[", 
         RowBox[{"{", "ic", "}"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"Sow", "[", 
             RowBox[{"Rest", "[", 
              RowBox[{"CellularAutomaton", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "#2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", "2", ",", "1"}], "}"}], 
                ",", " ", "#1", ",", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], ",", "ic", ",", "pairsofruleandsteps"}], "]"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[250]:=",ExpressionUUID->"6ec05569-fc21-41b4-a74b-2033ea73be2d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Arbitrary spatial composition of one-dimensional CAs", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489418283304*^9, {3.76337536944236*^9, 
   3.763375376762115*^9}},ExpressionUUID->"b69f36d3-5536-4358-86b3-\
b7a3b2c42320"],

Cell[TextData[{
 "Spatial composition of CA rules, where the set of rules in the ",
 StyleBox["rules",
  FontSlant->"Italic"],
 " list is applied to the binary list ",
 StyleBox["ic",
  FontSlant->"Italic"],
 ", with periodic boundary condition; execution is such that every rule in \
the ",
 StyleBox["rules",
  FontSlant->"Italic"],
 " list is applied only at the lattice cell position the rule is in the ",
 StyleBox["rules",
  FontSlant->"Italic"],
 " list. In other words, the whole thing is like an non-homogeneous (or \
non-uniform, or hybrid) CA. Each rule in the list of rules may be expressed \
in any of the forms allowed in the ",
 StyleBox["CellularAutomaton",
  FontSlant->"Italic"],
 " function, including non-local forms.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": \nCASpatialComposition[{184, {232, 2, {{-1}, {1}, {2}}}, {1678240, 2, \
{{-2}, {1}, {0}, {2}, {-1}}}, {245, 2, 3}, {23, 2, {{0}, {1}, {-1}}}}, {1, 0, \
1, 0, 0}, 5]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\n1) Notice that only the neighbourhood offsets allowed by \
CellularAutomaton are allowed in CASpatialComposition. Therefore, {30, 2, \
{{5}, {-3}}} wouldn\[CloseCurlyQuote]t be allowed since there is no rule \
number 30 in the space defined by 2 colours and 2 neighbours (as entailed by \
the 2 offsets); similarly, {30, 2, {{5}, {-3}, {-3}}} \
wouldn\[CloseCurlyQuote]t be allowed either, since multiplicity of offsets is \
forbidden.\n2) All the rules are applied to the entire configuration, and \
then the corresponding outcome for every cell is selected. The code might be \
more time-efficient if the",
 StyleBox[" ith",
  FontSlant->"Italic"],
 "-rule would be applied only to the neighbourhood of the ",
 StyleBox["ith",
  FontSlant->"Italic"],
 "-symbol, directly; however, the code I wrote based on this idea turned out \
to be significantly more costly; here\[CloseCurlyQuote]s it:"
}], "Text",
 CellChangeTimes->{{3.569331485227644*^9, 3.569331504881344*^9}, {
  3.569341496625467*^9, 3.569341877135335*^9}, {3.569342179868981*^9, 
  3.56934235078698*^9}, {3.569345381029118*^9, 3.569345385068578*^9}, {
  3.603186647494658*^9, 3.603186993551901*^9}, {3.603187157478632*^9, 
  3.603187201613213*^9}, {3.6031873253478947`*^9, 3.603187334086697*^9}, {
  3.603187372847129*^9, 3.603187493174594*^9}, {3.603187540973615*^9, 
  3.603187584281248*^9}, {3.603187634935183*^9, 3.603187756117028*^9}, {
  3.603187881599432*^9, 3.603187996061748*^9}, {3.603358633806704*^9, 
  3.603358641220999*^9}, {3.603362724257394*^9, 3.603362864275785*^9}, {
  3.603362907832249*^9, 3.603362922901319*^9}, {3.6033630106841*^9, 
  3.603363039002891*^9}, {3.6217104109934483`*^9, 3.621710411946235*^9}, {
  3.7634581179952*^9, 3.763458122073595*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"8b545b26-d580-411b-9716-ea80f5d1e84a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"altCASpatialComposition", "[", 
     RowBox[{"rules_List", ",", "ic_List", ",", "nsteps_Integer"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "aux", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rules", "]"}], "\[NotEqual]", 
         RowBox[{"Length", "[", "ic", "]"}]}], ",", 
        RowBox[{
        "Print", "[", 
         "\"\<Lattice size is different from the number of rules!\>\"", "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nextConfig", "[", 
            RowBox[{"rules", ",", " ", "#"}], "]"}], "&"}], ",", "ic", ",", 
          "nsteps"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nextConfig", "[", 
    RowBox[{"rules_List", ",", "ic_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i", "=", "#1"}], ",", 
          RowBox[{"offsets", "=", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
         "}"}], ",", 
        RowBox[{"RuleOutputFromNeighbourhood", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"TakeFromRelativePosition", "[", 
             RowBox[{"ic", ",", "i", ",", "#"}], "]"}], "&"}], "/@", 
           "offsets"}], ",", 
          RowBox[{
          "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "offsets", "]"}], "-", "1"}], ")"}], "/", 
           "2"}]}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "ic"}]}], ",", "rules"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.621710405786823*^9, 3.621710405788938*^9}, 
   3.763361244094597*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"49dd5967-4039-4945-b1cf-b741c7adbaf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CASpatialComposition", "[", 
    RowBox[{"rules_List", ",", "ic_List", ",", "nsteps_Integer"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "icaux", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rules", "]"}], "\[NotEqual]", 
        RowBox[{"Length", "[", "ic", "]"}]}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Lattice size is different from the number of rules!\>\"", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reap", "[", 
         RowBox[{
          RowBox[{"Sow", "[", "ic", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Nest", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"icaux", "=", "#"}], ";", 
               RowBox[{"Sow", "[", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "#2", 
                    "\[RightDoubleBracket]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"CellularAutomaton", "[", 
                    RowBox[{"#", ",", " ", "icaux"}], "]"}], "&"}], " ", "/@",
                     " ", "rules"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "rules", "]"}], "]"}]}], "}"}]}], 
                 "]"}], "]"}]}], ")"}], "&"}], ",", "ic", ",", "nsteps"}], 
           "]"}]}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.763361539356243*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"09a163e3-8006-4622-a437-513c4fa8d18c"],

Cell[TextData[{
 "\nSimplified version of the function above, for using only when the rules \
involved are all ECAs, expressed in a simplified notation for the non-local \
form. The simplified notation is transformed from {",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "num"], ",", " ", 
    SubscriptBox["n", "1"]}], TraditionalForm]],ExpressionUUID->
  "52216e0c-bb81-439a-8319-7e817b287740"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "2"], TraditionalForm]],ExpressionUUID->
  "fe081f4f-d91f-47c7-863d-cb7c15b27ca0"],
 "} to {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "num"], TraditionalForm]],ExpressionUUID->
  "7470ce79-f33b-44f8-9335-c54ed85acafb"],
 ", 2, {{",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["n", "1"]}], TraditionalForm]],ExpressionUUID->
  "8db54528-d095-4b2e-b6c8-970685eb8234"],
 "}, {0}, {+",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "2"], TraditionalForm]],ExpressionUUID->
  "9ea922a6-1c50-4a0d-b73a-8a2fd21f0526"],
 "}}}.\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 "\nECASpatialComposition[{{232, 1, 1}, {226, 2, 1}, {170, 2, 2}, {23, 1, 1}, \
{184, 2, 1}}, {1, 0, 1, 0, 0}, 50]"
}], "Text",
 CellChangeTimes->{{3.569331898782771*^9, 3.5693322047757072`*^9}, 
   3.764066580469058*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"63c6f099-db25-4bac-994b-8cc9c53b5943"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ECASpatialComposition", "[", 
    RowBox[{"rules_List", ",", "ic_List", ",", "nsteps_Integer"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "icaux", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rules", "]"}], "\[NotEqual]", 
        RowBox[{"Length", "[", "ic", "]"}]}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Lattice size is different from the number of rules!\>\"", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reap", "[", 
         RowBox[{
          RowBox[{"Sow", "[", "ic", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Nest", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"icaux", "=", "#"}], ";", 
               RowBox[{"Sow", "[", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "#2", 
                    "\[RightDoubleBracket]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"CellularAutomaton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "}"}]}], "}"}]}], "}"}], ",", 
                    " ", "icaux"}], "]"}], "&"}], " ", "/@", " ", "rules"}], 
                    ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "rules", "]"}], "]"}]}], "}"}]}], 
                 "]"}], "]"}]}], ")"}], "&"}], ",", "ic", ",", "nsteps"}], 
           "]"}]}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.569331762838105*^9, 3.569331779786989*^9}, {
  3.569331815162129*^9, 3.569331821813921*^9}, {3.603185507056551*^9, 
  3.603185509029014*^9}, {3.603190992823194*^9, 3.603191001011836*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"29f078e8-55be-4041-9cb5-51d516589d07"],

Cell[TextData[{
 "\nConversion of the simplified notation used in ECASpatialComposition to \
the the general notation used in CASpatialComposition. \n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 "\nIn: ECA2CA[#] & /@ {{232, 1, 1}, {226, 2, 1}, {170, 2, 2}, {23, 1, 1}, \
{184, 2, 1}}\nOut: {{232, 2, {{-1}, {0}, {1}}}, {226, 2, {{-2}, {0}, {1}}}, \
{170, 2, {{-2}, {0}, {2}}}, {23, 2, {{-1}, {0}, {1}}}, {184, 2, {{-2}, {0}, \
{1}}}}"
}], "Text",
 CellChangeTimes->{3.764066578084193*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2d721d4f-446d-4e21-8a2c-e91bc8417562"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ECA2CA", "[", "eca_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", "eca"}], ",", "2", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"Rest", "[", "eca", "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"Rest", "[", "eca", "]"}], "]"}], "/", "2"}]}], "]"}]}],
          ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "#", "}"}], "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"Rest", "[", "eca", "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Length", "[", 
               RowBox[{"Rest", "[", "eca", "]"}], "]"}]}], "/", "2"}]}], 
           "]"}]}]}], "}"}], ",", "1"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->
  "In[255]:=",ExpressionUUID->"b95d1872-14b3-408f-84ce-b5e8e022f2dc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
One-dimensional CAs with any positional (block sequential) asynchronous \
deterministic updates\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489418283304*^9, {3.7226797454118843`*^9, 3.722679805519347*^9}, {
   3.7226800181097593`*^9, 3.722680022360736*^9}, {3.763375384097728*^9, 
   3.763375414664478*^9}, {3.785336908975142*^9, 3.7853369184756937`*^9}, {
   3.785337744568248*^9, 
   3.78533774518631*^9}},ExpressionUUID->"c2f528c1-cd1d-42e7-92c0-\
441363cb7db8"],

Cell[TextData[{
 "AsynchronousCA gives the image of a configuration under an asynchronous CA \
with a given deterministic update schedule.\n\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 "\nAsynchronousCA[{184, 2, 1}, {0,0,1,0,1,0,0,0,0,1}, 10, {{1}, {2}, {3}, \
{4, 5}, {6}, {7, 8, 9}, {10}}] // ArrayPlot"
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d6908995-d54b-497e-b02d-82c7d90e4002"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AsynchronousCA", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
      "ic_List", ",", "tsteps_Integer", ",", "UDS_List"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AsynchronousCA", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#", ",", "UDS"}],
         "]"}], "&"}], ",", "ic", ",", "tsteps"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AsynchronousCA", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
     "ic_List", ",", "UDS_List"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"auxic", "=", "ic"}], ",", 
       RowBox[{"preic", "=", "ic"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "preic", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}],
               "=", 
              RowBox[{
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rnum", ",", "k", ",", 
                   RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                 RowBox[{"GetNeighbours", "[", 
                  RowBox[{"auxic", ",", "#", ",", "r"}], "]"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ")"}], "&"}], "/@", "x"}], ")"}], ";", 
         RowBox[{"auxic", "=", "preic"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "UDS"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "auxic"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718814204288657*^9, 3.718814223280857*^9}, 
   3.718814598891795*^9, {3.7462789953355227`*^9, 3.74627901179709*^9}, {
   3.762276664361218*^9, 3.76227666437276*^9}, {3.762279013802381*^9, 
   3.7622790288540897`*^9}, {3.764174838248267*^9, 3.764174851851211*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"dd0b8032-39da-449f-a9e7-4564a22070ea"],

Cell[TextData[{
 "\nfastAsynchronousCA is just a faster implementation (read, just a hack ;-) \
of AsynchronousCA.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) It doesn\[CloseCurlyQuote]t use CellularAutomaton in its core.\n2) \
It doesn\[CloseCurlyQuote]t have the two forms of AsynchronousCA.\n3) \
Implemented by Eurico Ruivo; it comprises two variations, according to the \
degree of asynchrony in the update, with a ",
 StyleBox["hack",
  FontSlant->"Italic"],
 ", empirically determined, to choose between the two."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746358272947414*^9, 3.746358378997971*^9}, {
   3.746377536439687*^9, 3.746377547891368*^9}, {3.746377622756716*^9, 
   3.7463776240445027`*^9}, {3.746378138808503*^9, 3.746378139350621*^9}, {
   3.746379736112129*^9, 3.746379736758271*^9}, {3.746441025753083*^9, 
   3.74644107736546*^9}, {3.746441879297711*^9, 3.746441934038254*^9}, {
   3.746441965852845*^9, 3.7464420240693*^9}, {3.762279722837703*^9, 
   3.762279849434516*^9}, {3.7641773820141087`*^9, 3.764177385675304*^9}, {
   3.785336974063105*^9, 3.785336991758998*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"15639848-6f8f-43ea-86c7-98ed9e313e9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fastAsynchronousCA", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
     "ic_List", ",", "tsteps_Integer", ",", "UDS_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", "UDS"}], "]"}], "<", 
      RowBox[{"0.03", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "[", "UDS", "]"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"rule", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"Reverse", "[", 
            RowBox[{"RuleTable", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"evo", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"tsteps", "+", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "ic", "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"neighbourslist", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"GetNeighbourPos", "[", 
             RowBox[{
              RowBox[{"Length", "[", "ic", "]"}], ",", "#", ",", "r"}], "]"}],
             "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{"Length", "[", "ic", "]"}]}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "evo", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
         "ic"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "evo", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "=", 
            RowBox[{"evo", "\[LeftDoubleBracket]", 
             RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"evo", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "u"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"rule", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"FromDigits", "[", 
                   RowBox[{
                    RowBox[{"evo", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    "neighbourslist", "\[LeftDoubleBracket]", "p", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    ",", "k"}], "]"}], "+", "1"}], "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "u"}], "}"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"u", ",", "UDS"}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"tsteps", "+", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "evo"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"evo", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"tsteps", "+", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "ic", "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"neighbourslist", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"GetNeighbourPos", "[", 
             RowBox[{
              RowBox[{"Length", "[", "ic", "]"}], ",", "#", ",", "r"}], "]"}],
             "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{"Length", "[", "ic", "]"}]}], "]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "evo", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
         "ic"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "evo", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "=", 
            RowBox[{"evo", "\[LeftDoubleBracket]", 
             RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"evo", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "u"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", 
                 RowBox[{
                 "evo", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
               "u", "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"u", ",", "UDS"}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"tsteps", "+", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "evo"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744548757718395*^9, 3.744548760561552*^9}, {
   3.7445497850927896`*^9, 3.744549831151865*^9}, {3.744549871755636*^9, 
   3.7445499064036975`*^9}, 3.7445501348928227`*^9, {3.746358246104483*^9, 
   3.7463582530747833`*^9}, {3.74637737146609*^9, 3.746377379207609*^9}, {
   3.746377410307295*^9, 3.746377531128376*^9}, {3.746379714057941*^9, 
   3.746379715393495*^9}, 3.746380242181344*^9, 3.746441281607107*^9, {
   3.746441317611339*^9, 3.746441362268027*^9}, {3.746441404634018*^9, 
   3.7464414408615026`*^9}, {3.746441479142264*^9, 3.746441574872888*^9}, {
   3.746441607871341*^9, 3.746441640583025*^9}, 3.762276414426841*^9, {
   3.762276584661522*^9, 3.7622766039312763`*^9}, 3.762276664379314*^9, {
   3.762279244071071*^9, 3.762279328167294*^9}, {3.762279641177737*^9, 
   3.762279651725914*^9}, {3.762279717237563*^9, 3.762279717856299*^9}, {
   3.764174853817772*^9, 3.764174859950706*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"1d014c72-c119-41c7-9e25-73a3f18ed826"],

Cell[TextData[{
 "\nOnly used by AsynchronousCA, it returns the neighbours of the radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " neighbourhood of the cell in position ",
 StyleBox["pos",
  FontSlant->"Italic"],
 " in the configuration ",
 StyleBox["config",
  FontSlant->"Italic"],
 ", rotated ",
 StyleBox["r",
  FontSlant->"Italic"],
 " positions to the left.\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 " GetNeighbours[{1,2,3,4,5,6,7,8},4,1] => {4,5,3}\n",
 StyleBox["Implementation note:",
  FontWeight->"Bold"],
 "\n1)  Cells that are not listed in the update schedule remain constant. \
Although this speeds up computation, it is a good practice to let all cells \
explicit in some block.\n2) The neighbourhood is rotated so that, when ",
 StyleBox["Cellular Automaton",
  FontSlant->"Italic"],
 " is applied to the given neighbourhood, the image of the cell in position ",
 StyleBox["pos",
  FontSlant->"Italic"],
 " is given by CellularAutomaton[GetNeighbours[config], pos, r]\
\[LeftDoubleBracket]1\[RightDoubleBracket]."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746379399197089*^9, 3.746379431857475*^9}, {
   3.746379493841545*^9, 3.746379554565198*^9}, {3.746379676168296*^9, 
   3.746379685869966*^9}, {3.7622766986552978`*^9, 3.762276700239606*^9}, {
   3.762278044149581*^9, 3.762278070720375*^9}, {3.76227869091463*^9, 
   3.762278703019162*^9}, {3.7622787356448293`*^9, 3.76227877930562*^9}, {
   3.762278820604799*^9, 3.762278869002791*^9}, {3.762707196992975*^9, 
   3.762707197521454*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"90714386-c16a-4d49-ba09-76a7e3fbf109"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNeighbours", "[", 
    RowBox[{"config_List", ",", "pos_Integer", ",", "r_"}], "]"}], ":=", 
   RowBox[{"RotateLeft", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "config", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
       "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Length", "[", "config", "]"}]}], "]"}]}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"pos", "-", 
           RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "-", "1"}], 
          ",", 
          RowBox[{"pos", "+", 
           RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], "-", "1"}]}], 
         "]"}]}], ")"}]}], ",", 
     RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.722683869393076*^9, 3.722683887673863*^9}, {
  3.746279437804371*^9, 3.746279458551645*^9}, {3.746279497159239*^9, 
  3.746279503229342*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"2013823c-8e33-4d62-aa09-308517a6caf9"],

Cell[TextData[{
 "\nOnly used by fastAsynchronousCA, it returns the indices of the neighbours \
of the radius-",
 StyleBox["r",
  FontSlant->"Italic"],
 " neighbourhood of the cell in position ",
 StyleBox["pos",
  FontSlant->"Italic"],
 " in a configLen-long configuration.\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 " GetNeighbourPos[8, 4, 1] => {3, 4, 5}"
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746379399197089*^9, 3.746379431857475*^9}, {
   3.746379564482498*^9, 3.746379662066066*^9}, {3.7463796952857237`*^9, 
   3.746379702800007*^9}, {3.762280511886646*^9, 3.762280514437434*^9}, 
   3.7632835899084477`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c4a68aa8-9f57-4f86-838b-d6d5b545eeba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNeighbourPos", "[", 
    RowBox[{"configLen_Integer", ",", "pos_Integer", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"Mod", "[", 
        RowBox[{"#1", ",", "configLen"}], "]"}]}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"pos", "-", 
       RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "-", "1"}], ",", 
      RowBox[{"pos", "+", 
       RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], "-", "1"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763283589918727*^9, 3.763283589922371*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"429df386-fb51-4765-837b-c3af0d80fbb8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
One-dimensional CAs with any positional (block sequential) asynchronous \
deterministic update schedule, and arbitrary spatial composition of rules\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489418283304*^9, {3.7226797454118843`*^9, 3.722679805519347*^9}, {
   3.7226800181097593`*^9, 3.722680022360736*^9}, {3.763369985469295*^9, 
   3.763369986392241*^9}, {3.7633701435430408`*^9, 3.763370177692753*^9}, {
   3.763375387561627*^9, 3.763375404040926*^9}, 3.785336946010488*^9, {
   3.785337012166416*^9, 
   3.785337015181321*^9}},ExpressionUUID->"8cdbfbbb-475d-40ab-ab5e-\
86851deabb65"],

Cell[TextData[{
 "Thus is the combination of the functionalities of AsynchronousCA and \
CASpatialComposition (both described above). \n\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 "\nAsynchCASpatialComposition[Table[{150, 2, 1}, 7], RandomInteger[{0, 1}, \
7], 9, {{2, 4, 6}, {1, 3, 5, 7}}] // ArrayPlot"
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, {
   3.763370027171421*^9, 3.763370045025981*^9}, {3.763370083703275*^9, 
   3.763370101629931*^9}, {3.763370394952524*^9, 3.763370415655113*^9}, {
   3.764066569983697*^9, 3.7640665733018837`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2166b941-772f-4c1d-9534-afa12bbc4545"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AsynchCASpatialComposition", "[", 
    RowBox[{
    "rules_List", ",", "ic_List", ",", "nsteps_Integer", ",", "UDS_List"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "icaux", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rules", "]"}], "\[NotEqual]", 
        RowBox[{"Length", "[", "ic", "]"}]}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Lattice size is different from the number of rules!\>\"", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reap", "[", 
         RowBox[{
          RowBox[{"Sow", "[", "ic", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Nest", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"icaux", "=", "#"}], ";", 
               RowBox[{"Sow", "[", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "#2", 
                    "\[RightDoubleBracket]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"AsynchronousCA", "[", 
                    RowBox[{"#", ",", " ", "icaux", ",", "UDS"}], "]"}], 
                    "&"}], " ", "/@", " ", "rules"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "rules", "]"}], "]"}]}], "}"}]}], 
                 "]"}], "]"}]}], ")"}], "&"}], ",", "ic", ",", "nsteps"}], 
           "]"}]}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764174861185254*^9, 3.764174862248734*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"271b7ecc-c0d5-4e87-b505-7a75c0d7d6b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
One-dimensional CAs with any neighbourhood asynchronous deterministic updates\
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489418283304*^9, {3.7226797454118843`*^9, 3.722679805519347*^9}, {
   3.7226800181097593`*^9, 3.722680022360736*^9}, {3.763375384097728*^9, 
   3.763375414664478*^9}, {3.785336908975142*^9, 3.7853369184756937`*^9}, {
   3.785337039717575*^9, 3.785337045028116*^9}, {3.7853377414075217`*^9, 
   3.785337741969009*^9}},ExpressionUUID->"2d19c15d-4b15-43d7-aabf-\
ccddc45df391"],

Cell[TextData[{
 StyleBox["AsynchronousCAUdsN",
  FontSlant->"Italic"],
 " (UdsN meaning ",
 StyleBox["U",
  FontWeight->"Bold"],
 "p",
 StyleBox["d",
  FontWeight->"Bold"],
 "ate ",
 StyleBox["s",
  FontWeight->"Bold"],
 "chedule by ",
 StyleBox["N",
  FontWeight->"Bold"],
 "eighbourhood priority) computes the temporal evolution of a CA rule {",
 StyleBox["rnum, k, r",
  FontSlant->"Italic"],
 "} iterated asynchronously over the initial configuration ",
 StyleBox["ic",
  FontSlant->"Italic"],
 ", with the update by neighbourhood priority obtained from ",
 StyleBox["NPSequence",
  FontSlant->"Italic"],
 ". ",
 StyleBox["NPSequence",
  FontSlant->"Italic"],
 " is the update priority by neighbourhood, given in \
Wolfram\[CloseCurlyQuote]s lexicographic order, i.e., the first element is \
the priority of neighbourhood (",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1, ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1, ..., ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1) and the last is the priority of neighbourhood (0, 0, ..., 0). For \
instance, {1, 2, 3, 4} for ",
 StyleBox["k",
  FontSlant->"Italic"],
 " = 2 and ",
 StyleBox["r",
  FontSlant->"Italic"],
 " = 0.5 represents the following neighbourhood priority: (1,1): 1; (1,0): 2; \
(0,1): 3; (0,0): 4. \n\nThe function also handles an ",
 StyleBox["irrelevant",
  FontSlant->"Italic"],
 " priority, meaning that the neighbourhood at issue refers to a non-active \
state transition (i.e. the state of the reference cell \
doesn\[CloseCurlyQuote]t change), therefore making the corresponding priority \
irrelevant. Theses cases are represented by an underscore, like in {3, _, 1, \
2}, in which case the state transition associated to the second neighbourhood \
is non-active.\n\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 "\nWith[{ic=RandomInteger[1,20]},\n{AsynchronousCAUdsN[{110,2,1}, ic,20, {1, \
1, 2, 2, 3, 3, 4, 4}] // ArrayPlot,\nAsynchronousCAUdsN[{110,2,1}, ic,20, {1, \
4, 2, 4, 4, 4, 3, 4}] // ArrayPlot,\nAsynchronousCAUdsN[{110,2,1}, ic,20, {1, \
9, 2, 9, 9, 9, 3, 9}] // ArrayPlot,\nAsynchronousCAUdsN[{110,2,1}, ic,20, {1, \
_, 2, _, _, _, 3, _}] // ArrayPlot}]\n\n",
 StyleBox["Implementation notes:",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[LineSeparator]1) AsynchronousCAUdsN is implemented directly from \
the definition of update by neighbourhood priority.\n2) alt",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["AsynchronousCAUdsN",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["mostly",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" equivalent to AsynchronousCAUdsN, but relies on the conversion of \
an asynchronous CA with update by neighbourhood priority to its corresponding \
synchronous version, therefore benefiting from the speed and flexibility of \
the ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["CellularAutomaton",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" function. However, it becomes slower as the number of rules to be \
composed increase. Its distinct from AsynchronousCAUdsN in that it requires ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["NPSequence",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" to be given with the ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["don\[CloseCurlyQuote]t cares",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", when they exist. ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, 
   3.785337095657074*^9, {3.785337157277219*^9, 3.785337225052485*^9}, {
   3.785337265486169*^9, 3.78533744361896*^9}, {3.785338086214301*^9, 
   3.785338271871187*^9}, {3.785338322453948*^9, 3.785338677539937*^9}, {
   3.803726052564447*^9, 3.803726059412505*^9}, {3.803726138008647*^9, 
   3.80372616410996*^9}, {3.803726710054112*^9, 3.803726809493763*^9}, 
   3.803727026574071*^9, {3.814599497629112*^9, 3.8145995572548*^9}, {
   3.81459967679601*^9, 3.81459975562407*^9}, {3.814599975390332*^9, 
   3.814599989767829*^9}, {3.8146000625460453`*^9, 3.814600234435027*^9}, {
   3.814600281651402*^9, 3.814600302542602*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6329d3ad-317b-4946-a89d-2ea1cba1c77d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AsynchronousCAUdsN", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", 
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", "ic_List", ",", 
      "NPSequence_List"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rtab", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"Transpose", "@", 
            RowBox[{"RuleTable", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}], "]"}]}], ",", 
        "nplist", ",", 
        RowBox[{"aux", "=", "ic"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Not]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Union", "[", "NPSequence", "]"}], "===", 
           RowBox[{"{", "_", "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nplist", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"PadLeft", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"#", ",", "k"}], "]"}], ",", 
                RowBox[{"IntegerPart", "[", 
                 RowBox[{
                  RowBox[{"2", "r"}], "+", "1"}], "]"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", "NPSequence"}], ",", "i"}], "]"}], 
               "-", "1"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Select", "[", 
                RowBox[{"NPSequence", ",", "IntegerQ"}], "]"}], "]"}]}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"partition", "=", 
               RowBox[{"RotateRight", "[", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{"aux", ",", 
                   RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "]"}], ",", "1", ",", 
                   "1"}], "]"}], ",", 
                 RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"aux", "=", 
              RowBox[{"ReplacePart", "[", 
               RowBox[{"aux", ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"Rule", ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"positions", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"partition", ",", 
                    RowBox[{"x_", "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"nbs", ",", "x"}], "]"}]}]}], "]"}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"positions", ",", 
                    RowBox[{
                    RowBox[{
                    "partition", "\[LeftDoubleBracket]", "positions", 
                    "\[RightDoubleBracket]"}], "/.", "rtab"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"nbs", ",", "nplist"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "aux"}], ",", "\[IndentingNewLine]", 
        RowBox[{"CellularAutomaton", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "ic"}], "]"}]}], 
       "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AsynchronousCAUdsN", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", "k_Integer", ",", "r_"}], "}"}], ",", 
     "ic_List", ",", "tsteps_Integer", ",", "NPSequence_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AsynchronousCAUdsN", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#", ",", 
        "NPSequence"}], "]"}], "&"}], ",", "ic", ",", "tsteps"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718814204288657*^9, 3.718814223280857*^9}, 
   3.718814598891795*^9, {3.7462789953355227`*^9, 3.74627901179709*^9}, {
   3.762276664361218*^9, 3.76227666437276*^9}, {3.762279013802381*^9, 
   3.7622790288540897`*^9}, {3.764174838248267*^9, 3.764174851851211*^9}, 
   3.78533711333871*^9, {3.80372645748938*^9, 3.803726476484198*^9}, {
   3.814599629245367*^9, 3.81459963277466*^9}, {3.814600399833832*^9, 
   3.814600400441222*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"6710acd0-8f7b-400b-8327-a78eb5b3ab44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"altAsynchronousCAUdsN", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", 
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", "ic_List", ",", 
      "NPSequence_List"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"CellularAutomaton", "[", 
     RowBox[{
      RowBox[{"FindUdsNCompositeRule", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "NPSequence"}], 
       "]"}], ",", "ic"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"altAsynchronousCAUdsN", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", "ic_List", ",", 
     "tsteps_Integer", ",", "NPSequence_List"}], "]"}], ":=", 
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{
     RowBox[{"FindUdsNCompositeRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "NPSequence"}], 
      "]"}], ",", "ic", ",", "tsteps"}], "]"}]}], ";"}]}], "Input",
 CellFrame->1.5,
 CellFrameColor->RGBColor[0.752941, 0.72549, 0.513725],
 CellChangeTimes->{{3.800378662352053*^9, 3.8003790152294693`*^9}, {
   3.800379334144103*^9, 3.800379358293277*^9}, {3.800379407048124*^9, 
   3.800379431527792*^9}, {3.80037946989779*^9, 3.8003794762741184`*^9}, {
   3.80312125836171*^9, 3.803121276413558*^9}, {3.803121360191549*^9, 
   3.803121365262677*^9}, 3.8031214195544915`*^9, {3.803123079813463*^9, 
   3.803123156108309*^9}, {3.803725508197319*^9, 3.803725512349819*^9}, {
   3.803726506145489*^9, 3.803726508873453*^9}, {3.814599618173728*^9, 
   3.8145996239775333`*^9}, {3.8145996540708838`*^9, 3.814599658109659*^9}},
 Background->RGBColor[
  0.9686274509803922, 0.9411764705882353, 0.8392156862745098],
 CellLabel->
  "In[264]:=",ExpressionUUID->"05ae2894-00bb-4ae3-a4fa-eec6be7db37e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
17. Asynchronous deterministic block sequential (positional) update schedules\
\>", "Section",
 CellChangeTimes->{
  3.558189210406275*^9, {3.722674772145262*^9, 3.722674785981222*^9}, {
   3.722676372854486*^9, 3.722676373788073*^9}, {3.762693633742814*^9, 
   3.7626936380706472`*^9}, {3.777394188578011*^9, 3.777394190028127*^9}, {
   3.785338723055581*^9, 
   3.785338750989949*^9}},ExpressionUUID->"0d01f61e-5bcc-4a6e-9ea6-\
bcc2baea3e19"],

Cell[CellGroupData[{

Cell["\<\
Operations on asynchronous block sequential update schedules (only valid for \
CA type networks)\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, 
   3.762700179534039*^9, {3.762701654752866*^9, 3.762701672712008*^9}, 
   3.78491970045232*^9, {3.785320978483173*^9, 3.785320994851318*^9}, 
   3.803806667756106*^9},ExpressionUUID->"6a060a52-fa70-49e2-85a4-\
ac441d6ba341"],

Cell[CellGroupData[{

Cell["Reflection", "Subsubsection",
 CellChangeTimes->{{3.760267263194634*^9, 
  3.760267274099859*^9}},ExpressionUUID->"bf3f90e0-272f-4640-948f-\
3368fec1a995"],

Cell[TextData[{
 "Given a deterministic update schedule \[Sigma] over a configuration of \
length L, the reflection of \[Sigma] is the update ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "R"], TraditionalForm]],ExpressionUUID->
  "5d233149-1565-4ba0-9b79-3258d3783f1e"],
 " such that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "R"], TraditionalForm]],ExpressionUUID->
  "e8538340-2e89-4b70-ada7-094205109ff5"],
 "(",
 StyleBox["i",
  FontSlant->"Italic"],
 ") = \[Sigma](",
 StyleBox["L",
  FontSlant->"Italic"],
 "-",
 StyleBox["i",
  FontSlant->"Italic"],
 "+1), for all 1\[LessEqual] ",
 StyleBox["i",
  FontSlant->"Italic"],
 " \[LessEqual] ",
 StyleBox["L",
  FontSlant->"Italic"],
 ". In other words, the reflected update schedule acts on a configuration in \
the same relative order of the original update schedule, when the \
configuration is read from right to left rather than from left to right.\n\
Note: The classical notion of \[OpenCurlyDoubleQuote]rule reflection\
\[CloseCurlyDoubleQuote] does not apply to update schedules \[Sigma] such \
that \[Sigma] \[NotEqual] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "R"], TraditionalForm]],ExpressionUUID->
  "47f0412c-de91-42c6-a9aa-98195324ebc8"],
 ". In such cases, the reflection must comprise both the rule and the update \
schedule. For instance: given \[Sigma] = {{1,3,5,7},{2,4,6}}, we have \
\[Sigma] = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "R"], TraditionalForm]],ExpressionUUID->
  "36a99648-60a1-4213-b304-b7c92acb8e96"],
 " and the ECA rule space, for instance, may be analysed by looking at the 88 \
dynamical equivalence classes. However, for \[Sigma] = \
{{1},{2},{3},{4},{5},{6},{7}} such a condition does not hold, and the \
\[OpenCurlyDoubleQuote]reflection equivalence\[CloseCurlyDoubleQuote] no \
longer holds, therefore entailing the necessity of using ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "R"], TraditionalForm]],ExpressionUUID->
  "6ae24dcf-5067-41dc-ab80-349c54239bf8"],
 ".\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \n1) ReflectedUDS[{{1}, {2}, {3}, {4}, {5}, {6}, {7}}] => {{7}, {6}, {5}, \
{4}, {3}, {2}, {1}}\n2) ReflectedUDS[{{2}, {3}, {4}, {5}, {6}, {7}, {1}}] => \
{{6}, {5}, {4}, {3}, {2}, {1}, {7}}\n3) ReflectedUDS[{{1, 2}, {5}, {3, 6}, \
{4}}] => {{5, 6}, {2}, {1, 4}, {3}}"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.760267282316092*^9, 3.760267539855865*^9}, {
   3.76027316455874*^9, 3.760273186197138*^9}, 3.762700411153597*^9, {
   3.763284792242456*^9, 3.763284794192124*^9}, {3.7641772685310597`*^9, 
   3.764177278023548*^9}, 3.876312167097134*^9, {3.876313194260646*^9, 
   3.876313224518241*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cd1830d3-dc78-4b35-b110-b3b3e50c3693"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReflectedUDS", "[", "uds_List", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "[", "uds", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"uds", "/.", 
        RowBox[{"(", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", "L"}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"L", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}], ")"}]}], 
       ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.760267553808383*^9, 3.760267647751811*^9}, {
   3.760267681092844*^9, 3.76026769445575*^9}, 3.762701325028256*^9},
 Background->None,
 CellLabel->
  "In[266]:=",ExpressionUUID->"e3de5fc2-61e2-46f5-af10-155ab75eaed1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotation (Shift)", "Subsubsection",
 CellChangeTimes->{{3.7602739526214533`*^9, 3.760273956931147*^9}, {
  3.760275374923068*^9, 
  3.760275376568116*^9}},ExpressionUUID->"35126af4-284c-4849-84ac-\
594c53c8f3f5"],

Cell[TextData[{
 StyleBox["Given a deterministic update schedule \[Sigma] over a \
configuration of length ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["L",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", a ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["rotation of \[Sigma]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is an update ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "k"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "8454881d-1bba-471d-b575-d39126faeeee"],
 StyleBox[" such that ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "j"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "85af6f6e-ea55-4789-863a-f1151dbea6df"],
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["i",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[") = \[Sigma](1 + [",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["i+j-1",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" mod L ",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["), for all 1\[LessEqual] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["i",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" \[LessEqual] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["L",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", for some -",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["L",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["< ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["j",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" < ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["L",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[". Positive values of ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["j",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" rotate the update schedule ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["j",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cells to the right, and negative values rotate the update \
schedule ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["j",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cells to the left.\nNote: The term \
\[OpenCurlyDoubleQuote]rotation\[CloseCurlyDoubleQuote] is used instead of \
\[OpenCurlyDoubleQuote]shift\[CloseCurlyDoubleQuote] in order not to be \
mistaken by the shift map(s).\n\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Examples of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[": \n1) Rotation of the priorities of \[Sigma] = {{1,2}, {5}, \
{3,6}, {4}}, 1 cell to the right. So, cell 1 had priority 1 and took on the \
priority of its left neighbour (cell 6), which was 3; cell 2 had priority 1 \
and took on the priority of its left neighbour (cell 1), which was 1; cell 3 \
had priority 3 and took on the priority of its left neighbour (cell 2), which \
was 1; and so on.\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"RotatedUDS", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", "4", "}"}]}], "}"}], ",", "1"}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{
   3.7602680716450644`*^9, {3.760274975600259*^9, 3.760274979526522*^9}},
  Background->None,ExpressionUUID->"8abe303d-9a75-47ca-a898-00f0cfae9210"],
 StyleBox[" \[Implies] ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{3.76026807337402*^9, 3.760274980131989*^9},
  Background->None,ExpressionUUID->"5318e153-2d4d-4009-85ef-0bf14a6ab81e"],
 StyleBox["\n2) Rotation of the priorities of a sequential update from (1 to \
7), 3 positions to the right:\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"RotatedUDS", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", "6", "}"}], ",", 
      RowBox[{"{", "7", "}"}]}], "}"}], ",", "3"}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{{3.7602678934137063`*^9, 3.760267909440302*^9}, {
    3.760274535786937*^9, 3.760274548558785*^9}, 3.761315443030397*^9},
  Background->None,ExpressionUUID->"17f0ea20-1d95-4aca-aa1c-957725e75dd2"],
 StyleBox[" \[Implies] ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", "5", "}"}], ",", 
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", "7", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{3.760267911127735*^9, 3.760274553011877*^9},
  Background->None,ExpressionUUID->"66556d35-c8d2-4c02-9919-b3af55d2bd36"],
 StyleBox["\n3) Rotation of the priorities of a sequential update (from 1 to \
7), 2 cells to the left:\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"RotatedUDS", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", "6", "}"}], ",", 
      RowBox[{"{", "7", "}"}]}], "}"}], ",", 
    RowBox[{"-", "2"}]}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{{3.760267982006361*^9, 3.760268003980192*^9}, {
    3.760274955549863*^9, 3.760274957749641*^9}, 3.761315450376038*^9},
  Background->None,ExpressionUUID->"96f2cb18-41cb-40df-b702-1b9802e0fe92"],
 StyleBox[" \[Implies] ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", "7", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{3.7602680064863133`*^9, 3.7602749582312737`*^9},
  Background->None,ExpressionUUID->"cef636fc-6600-481c-a843-44fb94f61ccb"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.760267282316092*^9, 3.760267539855865*^9}, {
   3.76027316455874*^9, 3.760273186197138*^9}, {3.7602740217603207`*^9, 
   3.760274155756063*^9}, {3.760274262165492*^9, 3.7602744191258383`*^9}, {
   3.760274469142113*^9, 3.76027450003352*^9}, {3.7602750458863745`*^9, 
   3.760275050023924*^9}, {3.760275092423475*^9, 3.7602751391282234`*^9}, 
   3.762700759090532*^9, {3.763283931877685*^9, 3.763283935195063*^9}, {
   3.763287318958004*^9, 3.763287320493643*^9}, {3.7632873527856617`*^9, 
   3.7632873553139763`*^9}, {3.764177290738304*^9, 3.764177309639027*^9}, 
   3.876293357859774*^9},ExpressionUUID->"5d0f7fe0-9773-4ab3-aef6-\
674276c3b7a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RotatedUDS", "[", 
     RowBox[{"uds_List", ",", "j_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Flatten", "[", "uds", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"uds", "/.", 
         RowBox[{"(", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Rule", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", "L"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", "j", "-", "1"}], ",", "L"}], "]"}]}], 
                 ")"}], "&"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "L"}], "]"}]}]}], "}"}]}], "]"}], ")"}]}], 
        ")"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotatedUDS", "[", "uds_List", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Sort", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RotatedUDS", "[", 
       RowBox[{"uds", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"Flatten", "[", "uds", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.760267553808383*^9, 3.760267647751811*^9}, {
  3.760267681092844*^9, 3.76026769445575*^9}, {3.760274360080708*^9, 
  3.760274360899516*^9}, {3.7602744376892066`*^9, 3.7602744896253552`*^9}, {
  3.760274543151242*^9, 3.760274543457422*^9}, {3.76028188471544*^9, 
  3.76028188601635*^9}, {3.762701329091419*^9, 3.762701331851167*^9}},
 Background->None,
 CellLabel->
  "In[267]:=",ExpressionUUID->"f32d9eb6-e6c2-41a4-a00b-d032da74b987"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation of a ",
 StyleBox["canonical",
  FontSlant->"Italic"],
 " form of an update schedule, out of all its possible rotations"
}], "Subsubsection",
 CellChangeTimes->{{3.760268089296937*^9, 3.760268105013979*^9}, {
  3.760275199992973*^9, 3.7602752214068885`*^9}, {3.761318637939139*^9, 
  3.76131864165172*^9}, {3.762701810135497*^9, 3.762701866630515*^9}, {
  3.762702199451283*^9, 3.762702210291064*^9}, {3.764437771339094*^9, 
  3.764437773935789*^9}},ExpressionUUID->"05aacd99-0485-4a61-9d22-\
3a6ed2171a23"],

Cell[TextData[{
 StyleBox["From the viewpoint of the action of any given rule over the set of \
all configurations of a given length ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["L",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", update schedules that are rotations of each other yield the very \
same set of images. Hence, it is possible to choose one of such rotations as \
their representative. A canonical way to do that is, given an update schedule \
\[Sigma], use rotation ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "k"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "913e0634-536f-4bbc-b85c-10f9d53cc861"],
 StyleBox[" of it, such that cell 1 has update priority 1. In order to do so, \
we take ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["k",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = - (min{1\[LessEqual] i \[LessEqual] L: \[Sigma](i) = 1} - 1).\n\
\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Examples of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[": \n1) Standard form of  a sequential update from 1 to 7\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"CanonicalRotationUDSForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "}"}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{{3.7602678934137063`*^9, 3.760267909440302*^9}, {
    3.760274535786937*^9, 3.760274548558785*^9}, {3.7602756633748198`*^9, 
    3.7602756683866014`*^9}, 3.761315785654543*^9},
  Background->None,ExpressionUUID->"b9872740-9d4c-47fc-9318-97aa9c14c94f"],
 StyleBox[" => ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", "5", "}"}], ",", 
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", "7", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{3.760267911127735*^9, 3.760274553011877*^9, 
   3.760275669317071*^9, 3.760275932217903*^9},
  Background->None,ExpressionUUID->"f39ec6e9-f7a8-4cd1-b9e5-5ecc32ea711e"],
 StyleBox["\n2) Standard form of a sequential update over a configuration of \
length 7 starting from cell 2 and ending at cell 1.\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"CanonicalRotationUDSForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", "7", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{{3.760267982006361*^9, 3.760268003980192*^9}, {
    3.760274955549863*^9, 3.760274957749641*^9}, {3.760275831569973*^9, 
    3.76027584123676*^9}, 3.761315789106439*^9},
  Background->None,ExpressionUUID->"544e6de5-89ff-44db-93b2-844a5ceb7877"],
 StyleBox[" => ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", "5", "}"}], ",", 
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", "7", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{
   3.7602680064863133`*^9, 3.7602749582312737`*^9, {3.760275836832912*^9, 
    3.76027584170921*^9}, 3.760275934378906*^9},
  Background->None,ExpressionUUID->"8294b7f3-d82c-4c78-9d98-f1af751419d0"],
 StyleBox["\n3) Standard form of \[Sigma] = {{2,3},{6},{1,4},{5}}.\n",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"CanonicalRotationUDSForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", "5", "}"}]}], "}"}], "]"}]], "Input",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{
   3.7602680716450644`*^9, {3.760274975600259*^9, 3.760274979526522*^9}, {
    3.760275869614434*^9, 3.760275874934336*^9}},
  Background->None,ExpressionUUID->"76ccc989-94f3-4923-a9a3-6ae859224961"],
 StyleBox[" => ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", "5", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "}"}]], "Output",
  CellFrame->{{0, 0}, {0, 0}},
  CellChangeTimes->{3.76026807337402*^9, 3.760274980131989*^9, 
   3.760275875353954*^9, 3.7602759365881767`*^9},
  Background->None,ExpressionUUID->"969844dc-7bd0-4049-862b-64e5bbe27ab7"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.760268184338049*^9, 3.7602682200714*^9}, {
  3.760268308899928*^9, 3.7602684157196765`*^9}, {3.760268566850062*^9, 
  3.760268751932795*^9}, {3.760275229565459*^9, 3.760275325761459*^9}, {
  3.760275381040137*^9, 3.760275585751474*^9}, {3.760275912305455*^9, 
  3.760275916369091*^9}, {3.761315721089249*^9, 3.7613157705669117`*^9}, {
  3.761315912454286*^9, 3.76131591515316*^9}, {3.764177327897181*^9, 
  3.7641773354796*^9}, {3.774704722723583*^9, 
  3.774704722739169*^9}},ExpressionUUID->"6e964f16-a2da-4a2d-bf47-\
698f2172d3d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CanonicalRotationUDSForm", "[", "uds_List", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{"Sort", "[", 
     RowBox[{"RotatedUDS", "[", "uds", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763392841193733*^9, 3.76339286268836*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"d98d9c3e-fea3-4876-9077-52d9562c51c3"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["All possible asynchronous block sequential update schedules", \
"Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489427507217*^9, {3.722674809955167*^9, 3.722674822971421*^9}, {
   3.762693628247183*^9, 3.762693628551799*^9}, {3.784919695105643*^9, 
   3.784919696170861*^9}, {3.803806650483396*^9, 
   3.803806653587888*^9}},ExpressionUUID->"8216f6e9-4909-4cd0-ba1f-\
dbcd30a702c5"],

Cell[TextData[{
 "Generates all possible deterministic asynchronous updates for \
configurations of size ",
 StyleBox["len",
  FontSlant->"Italic"],
 ". \n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nallPossibleAsynchronousUpdates[5] // Length  \[Implies] 541\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) The idea of the algorithm is to generate all possible tuples of \
elements from 1 to ",
 StyleBox["len",
  FontSlant->"Italic"],
 ", but preserving only those that contain an ordered sequence of digits, \
from 1 upward ({1}, {1,2}, {1,2,3}, etc).\n2) The function uses ",
 StyleBox["changeUpdateRepresentation2Standard",
  FontFamily->"Courier New",
  FontWeight->"Regular"],
 " as auxiliary, which changes the representation of an update, from, say \
{5,2,4,1,3,2,1}, to {{4,7},{2,6},{5},{3},{1}}, meaning that positions 4 and 7 \
are jointly updated first, then positions 2 and 6 also together, and 5, 3 and \
1 in sequence.\n3) For large values of ",
 StyleBox["len",
  FontSlant->"Italic"],
 " it would be necessary to change the implementation, by using ",
 StyleBox["IthTuple",
  FontFamily->"Courier New",
  FontWeight->"Regular"],
 ", instead of ",
 StyleBox["Tuples",
  FontFamily->"Courier New",
  FontWeight->"Regular"],
 ".\n4) The number of possible updates (say, 47293 for ",
 StyleBox["len",
  FontSlant->"Italic"],
 "=7, 545835 for ",
 StyleBox["len",
  FontSlant->"Italic"],
 "=8, and so on), corresponds to the ordered sequence of Bell numbers (or \
Fubini numbers), according to https://oeis.org/A000670 . "
}], "Text",
 CellChangeTimes->{{3.722674922342995*^9, 3.722675002106193*^9}, {
   3.722675214463908*^9, 3.722675319964234*^9}, {3.722675548340757*^9, 
   3.722675699048366*^9}, {3.722675804033472*^9, 3.722676261806822*^9}, {
   3.76417697561462*^9, 3.764177013400405*^9}, 3.764177213743659*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"d1a679ff-288b-4350-afb2-615232767528"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"allPossibleAsynchronousUpdates", "[", "len_Integer", "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"changeUpdateRepresentation2Standard", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", "len", "]"}], ",", "len"}], "]"}], ",", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Range", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], ",", 
          RowBox[{"Union", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeUpdateRepresentation2Standard", "[", "UDS_List", "]"}], ":=",
    " ", "\[IndentingNewLine]", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"UDS", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "UDS", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ")"}], "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603185455158346*^9, 3.603185470871022*^9}, 
   3.722674855014784*^9, 3.722675799712514*^9, {3.7226857707435007`*^9, 
   3.72268577922406*^9}, {3.785320904126621*^9, 3.785320907651758*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"d002efbe-2ad3-494c-8e4b-42653b9d8c8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Representative of the equivalence classes of all possible asynchronous block \
sequential update schedules (general for any kind of network)\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.764175058868536*^9, 3.764175081772451*^9}, {3.764175216684227*^9, 
   3.764175242580803*^9}, 3.784919711098139*^9, {3.7853209322478743`*^9, 
   3.785320946138649*^9}, {3.803806618827999*^9, 
   3.803806620393984*^9}},ExpressionUUID->"8e8ef6ef-2113-4e18-bc89-\
de1012619627"],

Cell[TextData[{
 "The function returns one representative of each equivalence class of all \
update schedules implicit to interaction digraph ",
 StyleBox["intG",
  FontSlant->"Italic"],
 ". Each representative is taken as the one with the minimal number of blocks \
in the class. \n\n",
 StyleBox["Implementation notes:\n1) ",
  FontWeight->"Bold"],
 "All algorithms are from: J. Aracena, J. Demongeot, E.Fanchon and M. \
Montalva. \[OpenCurlyDoubleQuote]On the number of different dynamics in \
Boolean networks with deterministic update schedules\[CloseCurlyDoubleQuote], \
",
 StyleBox["Mathematical Biosciences",
  FontSlant->"Italic"],
 " 242(2):188-194, 2013.\n2) The ",
 StyleBox["UDSReps",
  FontSlant->"Italic"],
 " function is equivalent to ",
 StyleBox["EqClass",
  FontSlant->"Italic"],
 "(G) from Algorithm 1 of the paper above.\n3) ",
 StyleBox["UDSReps",
  FontSlant->"Italic"],
 " relies on the auxiliary functions ",
 StyleBox["DigraphUD",
  FontSlant->"Italic"],
 ", ",
 StyleBox["MoveVerticesQ",
  FontSlant->"Italic"],
 ", ",
 StyleBox["SameDigraphsQ",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Subdigraph",
  FontSlant->"Italic"],
 ", all described below.\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n1) UDSReps[Graph[{5\[DirectedEdge]7, 7\[DirectedEdge]5, \
7\[DirectedEdge]6, 6\[DirectedEdge]7}]]\n{{{5, 6, 7}}, {{5}, {6, 7}}, {{6}, \
{5, 7}}, {{7}, {5, 6}}, {{5, 6}, {7}}, {{5, 7}, {6}}, {{6, 7}, {5}}, {{5}, \
{7}, {6}}, {{6}, {7}, {5}}}\n\n2) Graphs of every update schedule in the \
previous example.\nLabelledInteractionGraph[Graph[{5\[DirectedEdge]7, 7\
\[DirectedEdge]5, 7\[DirectedEdge]6, 6\[DirectedEdge]7}], #] & /@ \
UDSReps[Graph[{5\[DirectedEdge]7, 7\[DirectedEdge]5, 7\[DirectedEdge]6, 6\
\[DirectedEdge]7}]]\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[1, 0, 0], DirectedEdge[7, 5] -> RGBColor[1, 0, 0], 
            DirectedEdge[6, 7] -> RGBColor[1, 0, 0]}, 
          VertexLabels -> {"Name"}, VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "+", "+", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "-", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[7, 5] -> 
            RGBColor[1, 0, 0], DirectedEdge[6, 7] -> RGBColor[1, 0, 0]}, 
          VertexLabels -> {"Name"}, VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"-", "+", "+", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "-"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[1, 0, 0], DirectedEdge[7, 5] -> RGBColor[1, 0, 0], 
            DirectedEdge[6, 7] -> RGBColor[0., 0.19999999999999996`, 0.]}, 
          VertexLabels -> {"Name"}, VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "-", "+", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "-", 
            DirectedEdge[7, 6] -> "-", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[5, 7] -> RGBColor[1, 0, 0], DirectedEdge[7, 5] -> 
            RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[6, 7] -> 
            RGBColor[1, 0, 0]}, VertexLabels -> {"Name"}, 
          VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "+", "-", "-"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "-", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "-"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[7, 5] -> 
            RGBColor[1, 0, 0], DirectedEdge[6, 7] -> 
            RGBColor[0., 0.19999999999999996`, 0.]}, VertexLabels -> {"Name"},
           VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"-", "-", "+", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "-", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[5, 7] -> RGBColor[1, 0, 0], DirectedEdge[7, 5] -> 
            RGBColor[1, 0, 0], DirectedEdge[6, 7] -> RGBColor[1, 0, 0]}, 
          VertexLabels -> {"Name"}, VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "+", "+", "-"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "-", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[1, 0, 0], DirectedEdge[7, 5] -> 
            RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[6, 7] -> 
            RGBColor[1, 0, 0]}, VertexLabels -> {"Name"}, 
          VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "+", "-", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "-", DirectedEdge[7, 5] -> "+", 
            DirectedEdge[7, 6] -> "-", DirectedEdge[6, 7] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[5, 7] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[7, 5] -> RGBColor[1, 0, 0], DirectedEdge[6, 7] -> 
            RGBColor[1, 0, 0]}, VertexLabels -> {"Name"}, 
          VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"-", "+", "+", "-"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{5, 7, 6}, {{{1, 2}, {3, 2}, {2, 1}, {2, 3}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[5, 7] -> "+", DirectedEdge[7, 5] -> "-", 
            DirectedEdge[7, 6] -> "+", DirectedEdge[6, 7] -> "-"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[7, 6] -> RGBColor[1, 0, 0], DirectedEdge[5, 7] -> 
            RGBColor[1, 0, 0], DirectedEdge[7, 5] -> 
            RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[6, 7] -> 
            RGBColor[0., 0.19999999999999996`, 0.]}, VertexLabels -> {"Name"},
           VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {"+", "-", "-", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.}, {0.5001527564386758, 
               0.16449098594894349`}, {1.0003055128773508`, 
               4.665773677819736*^-18}}], 0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, 0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               0.5001527564386754, -0.1644909859489449}, {0., 0.}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.5001527564386753, -0.0700213859014146}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.0003055128773508`, 4.665773677819736*^-18}, {
               1.5001527097553518`, 0.16439049306400955`}, {
               1.9999999066333527`, 4.956174529136317*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, 0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.9999999066333527`, 4.956174529136317*^-18}, {
               1.5001527097553502`, -0.16439049306401293`}, {
               1.0003055128773508`, 4.665773677819736*^-18}}], 
              0.022611464210583382`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5001527097553518, -0.06997860756292018}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.022611464210583382], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.022611464210583382, 0.022611464210583382}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.0229169770879343, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
             0.022611464210583382], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {2.022611370843936, 0.022611464210583385}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], "}"}]], "Text",
  CellChangeTimes->{
   3.6892739078142643`*^9, 3.689274658359085*^9, 3.689274691327972*^9, 
    3.689274739505727*^9, {3.68927478169814*^9, 3.689274799857179*^9}, 
    3.6892750999113407`*^9, 3.6892754473532133`*^9, {3.689275500741267*^9, 
    3.6892755451418066`*^9}, 3.689276006393188*^9, 3.689276422798005*^9, 
    3.689276477987162*^9, 3.6892766299778557`*^9, 3.6892766801177235`*^9, 
    3.689277245034035*^9, {3.689277584989479*^9, 3.689277596982166*^9}, 
    3.6892794267688227`*^9, 3.689314124731223*^9, 3.689314363480109*^9, {
    3.689314519957652*^9, 3.689314523515859*^9}, 3.689314607435442*^9, 
    3.762693746379994*^9},ExpressionUUID->
  "f1fea7ae-27e2-4537-addb-ee11e879dbbb"],
 "\n\n3) Representatives of each update schedule class for a radius-1 CA \
running over a configuration of length 5. There are 181 independent update \
schedules.\nUDSReps[",
 Cell[BoxData[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{2, 3, 1, 4, 
       5}, {{{1, 2}, {1, 3}, {2, 4}, {2, 1}, {4, 5}, {4, 2}, {5, 3}, {5, 4}, {
        3, 1}, {3, 5}}, Null}]]}, 
     TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9VXk01IsXR5vIUr0SPZJsTUiblH4+5FWyJWmRPGmVFj1PIkvqWdpe5BUt
lkmWLCFLZGQQZTeWpLGNGWOfZmHmO6Nf9ZvfOb/zu+fcc8/nnvvHPed+Pp+7
+oSvy2k5GRmZdGn+ty75vjXKuFeCiJ62g1UkHjJC0br8xxhI/aLFozNi9DyX
U0xOEoIWl+DE3pcJmf/FYiUvxx18DmZm02k3Qrv/39fKJx1r0BKDZkLykDzh
Qdzlp/lrPoHj9hP9TWU8nHi/3E7RmsBKL+vq6T4eppapKvV0iRBiKEh2n89H
iP4/ATU+Iqxrkpme2MxHepP2oYVzRMirNzOK8uaDLD64bEK6zy7vKxXKz/nI
sYn5h2whxJBSC+nkAB9HdBR79T5yQVGxyfI7IUTgvp6yQnkufryrTb+UJoSr
u5wFzfkrXBbKrZqcEOJN71XryRQOXKpN3Cq3iBBrlXTrgmgKR5O751dEiHCo
ZO/5MtcpKLisOFnyWQSoHMs0oUyiwu+QY5AJgZsiBT0SaRI9fY5num4RoMc1
7kmZlaDowBy78zVTCKlfuq7xpwRpQW3OefRJmKh88fGS4sbG9ZVvBBNQb1q1
67REAhdnpQklxQnoT6rs+sKRYOjZ6+87dMdR3Uy3qu2ToIoem9psOQbD2byD
ph8kWPrE8/Vv7qP4aEgZImVLUKGZNrTu2ggKfBDKJwhsuvLGrsKqC2t31avd
7SawxMw1+M+IDtALDkZ/lt6DcePabY02GlI8v5dw/iKwzMe51dumFW8S21+M
uhDItzF6ETbbiPkeIYeZvxJwJ/9+xbvuI2wLVFq+D4mwzevw+UUZtWBQl7GO
pYrwWmVvq01yNWLUj+oMBkyBEZWokBcpRl9LQ8q2Qxzs8+m73XtGDHn+jd3u
G7/ioWtkRtFOMWbsY6qqFbjY+HdXvb26GF2k25ypAS4iJur8KyYIWPPMEtYf
5kGWE2OxupTA7veyPU4VPPg47s95HEbAIrDe7bEWH62Zkh2/SXlVTur4mR4g
wkz6X5Wb302D9HAydvCTdD9CtsY8eBo77ne30TYQOJZba1uxeRqKrc8cbO4Q
8JhJUB4fFyB55cIsuUECB9V4xyefCmAxVFjat16MjJN5cwV7BNhdnPXkeYgY
0zsva5jwpfy06qCvqZPqpCdQtjOej+YdnclH1EbRtdryQc5lAg7rI5xjE0aw
x5Le8UOFwMvONI1U5REoJEQtvlEoQt89A9XBEDZ0o35knjsiwlvrhLAk5jBc
FV5xOLIi0Nb/KDe3GkbYSzU163whCi53TKrGs9C08m+1h8eF+LlFnnZnmImK
j2sjli0Xwq5L9VtiYztYf9AFD9T4oNp99spwo8GZOj1ysZ0Hp8IHpShtwVDZ
7HhLDA+Bnes2fU5txCYPdnePCw8dxXVzRq5+RN4W47pCDR7mhBg7OZjXQid1
aETSykW+6KKfiF0Fhwe3z+b4cRHQHEMrnUeBHfd6UYE2F6qLLu81ChNi0VE1
upN2LS5165+RDRJid81I5U7qR1TEeOn7SPHr0NMLV3s2ob1Tw+HMdSHiz3Ld
ar+3oraI5CC4I0TOr/nzIhzasbbD03lBohBfk3mUU2qdqEm7a/GsUAhbnQPJ
/gNdWBNwPZ/cKsTMisZ/ZZC7YbH521J6OIEkrnGvdvYoatz8gqxSCanuBnfu
ujWGxV+HF87UE9gz3kThnxiHA/7V2z9DoFBF2Jy2bQJmcuc4LD0x7NUrDw8q
ToJtXblt3F0M7ZsbWLpfJvHiK6m2JV6M8f1F7G/kKSwa1M271C2dHxEt+nqC
g1OmV4XqM9OQcXbxaRi/hODZFNG16GmEb7m7lrMxiMpmKbxboD6NqhK31FG7
+9SxDTOvZLMEIBuNhhdlxlNX9mlo5mwVgNFON5dvS6QuMAzW21PHRyy3PWWk
iUz1dfznhroLH9p3y0rir6dSU7P2njwzwMPxkPyzcTdeUB8lsR29+cNQLY3k
lHflUtc0+miFLxxGrLVTyDndV9QPhp/sUlazEC5xKH9WnUtVXhSvuW87E1av
Aw3u5eZQGc1Bd1e4DoEXXNo6wM6ixvBjmX/5MhC7u3KYfCmTGqYhFphqDKLg
bq6hrW0aVdnqYWXZ0X4UhNbML/QnU18q1YqY5/PAsD6X+SWEhy4/OmfT5iJc
1Gs5HdXPw8y+T4npwaXIbtY2mGsh9esoKu/dwgrE9L+MXfmIjzdcsiX7YhU8
3WbtEib5OLp1nmMgUQMzSszq3ywFoG8qvq1GrsPYHo3V/HtSvWr1i9efqYf4
WWix72cBbi4tda5fwQCN37xrWqp7254DSTbtDJxMK9qvJvWxXxa7M3bHDqE9
O9ep1INAwy1/Wa+DTITPr/HKfUrAT9XJUVObhXkm1/7s6CCQoVVcPofHwvM4
s13y88WY/fliw5PaYSx6xoxYv1mMFRHGXZ5JbChfGB0w8hDDdl1Wn7J7IQgX
uQNqGydhtYV6g9X3BobJRzZQQybgbxzWkKpGAas6OP5V1ThU6Z3kJnkqWAvu
9O2X/t0Vo7Y2cw9X4773zPJVZmMo+ONJwGO598gyONZ613sU9ERZa72oWgQd
OlW+OH4EHyL9jeoYdRDVk4OMqWz0WS13PsnthJ3r0RLSnU7ob2KZd0d3QX1Z
0f57Xe1YKslsX6z4CS4B8gYrV9Dgfk71bH3gJ4TdPFNSkdMMie6DOW9pn3Dw
+4xMtWYDAlP7H+Uv6UaNSbDE41YdirdUqERadkMzcbShkFONw516oatcu3FP
ISz4fUoF6qs69ePW9IN2UVBq65UOn8emOsrdA1K+1U/vDMjGiaCdEZw9DFjJ
mGxNYebBs983VWIwhNiHkdGD+1+DuKVTm6HABCP0ZklxbyFW8b2KLnGZMK3e
TLCViuGUseFbwycWxMqGcpWjxZjg1G41fTeMx9FreineJWjav+2IXa2UZ2nK
Ws5LyhFJEflamvNhOuF32mB7OTbeq/5iksuH0W6/iCr5ctzX8OJ1rxJAVUee
Yh72FnrbfbcJ4gQ4Hp2pzHxaJv0rrL93zJtG2VS2uo1nKQj1Szv9AqZhpZJK
Wd5cgjjV6H3OI1Is/yrbnlkE3YJg9cqRdnTThB0GkhKkGZvxbD/QcOSqDWPs
BQWmg/d2bPRtA8XoUe/2mioMyzNpSQEtoPxy7H1W03vQlOf8/vNFE36JK/zi
P/UB5hGFpPPiBmQ+Wvrvap1GqLrZHR/wr8cpusA++0ILdC9/9rfU+Iitt8Iz
NU/RUEULnTtzOQ0cZpFA32gYjBCjkLdHUxB1M1pXNJ8NbS0G96d+Asbb+96a
sNkgq7s9ibePhd+FBdqOH0ZgRX2aqv4kEu9a1ig1Z41CZtXywvvF13DCWq5N
N2YMMmSm//EwXyjqjz5tuzIOmbalVWtfn0KNPb/fxmMC/wGzqFoq
        "], {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          ArrowBox[
           BezierCurveBox[{1, {1.1081773982763643`, 1.1478070533336666`}, 2}],
            0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{
            1, {1.6421653531671279`, 0.48440274659767574`}, 3}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{2, {1.2888495479058504`, 1.422420956250825}, 1}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{
            2, {0.49313468267883265`, 1.1193132136354051`}, 4}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{3, {1.3248256587392402`, 0.5715660158443557}, 1}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{
            3, {0.8586827948072171, -0.14160439693093885`}, 5}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{4, {0.2878820512805024, 1.376175164225258}, 2}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{4, {0.32957200129499664`, 0.5256350295103911}, 5}],
            0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{5, {0.8437083497231548, 0.1871358279800582}, 3}], 
           0.019417689575323693`], 
          ArrowBox[
           BezierCurveBox[{
            5, {0.021838343551884756`, 0.41006267016142645`}, 4}], 
           0.019417689575323693`]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.019417689575323693], DiskBox[2, 0.019417689575323693], 
          DiskBox[3, 0.019417689575323693], DiskBox[4, 0.019417689575323693], 
          DiskBox[5, 0.019417689575323693]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{83.1171875, Automatic}]],
  CellChangeTimes->{{3.764177066654134*^9, 3.764177095243533*^9}},
  ExpressionUUID->"2f25f14f-9b49-4c45-a87a-b5e28f95f51b"],
 "] // Length  \[Implies] 181"
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689254052473604*^9, 3.689254068057495*^9}, {3.689257797342798*^9, 
   3.689257930646423*^9}, {3.6892646346708713`*^9, 3.689264636014948*^9}, {
   3.6892646759902344`*^9, 3.689264766597417*^9}, {3.689265051924737*^9, 
   3.689265058052088*^9}, {3.689266636793386*^9, 3.6892666862962174`*^9}, {
   3.6892671595572867`*^9, 3.6892671611083755`*^9}, {3.6892732510657005`*^9, 
   3.68927325647401*^9}, {3.689273309873064*^9, 3.689273346913183*^9}, {
   3.6892737932537117`*^9, 3.689273806430466*^9}, {3.762533617245039*^9, 
   3.762533627131977*^9}, {3.762533776568137*^9, 3.762533791686868*^9}, {
   3.762536262625691*^9, 3.762536301787315*^9}, {3.76269370638285*^9, 
   3.762693706724831*^9}, {3.762694592128714*^9, 3.762694654002733*^9}, {
   3.762694745195728*^9, 3.762694786561054*^9}, {3.762695557816869*^9, 
   3.762695560797903*^9}, {3.763374305344627*^9, 3.763374305736655*^9}, {
   3.763380422403842*^9, 3.763380429080966*^9}, {3.76417519995684*^9, 
   3.7641752094282713`*^9}, {3.764177232088456*^9, 3.764177235593685*^9}, {
   3.764177490143196*^9, 3.764177496494673*^9}, 3.76423539740598*^9},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"d6213a91-80a7-43dd-ac07-db6bc49058a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSReps", "[", "intG_Graph", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"graphWeights", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Normal", "@", 
         RowBox[{"WeightedAdjacencyMatrix", "[", "intG", "]"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"graphWeights", ",", "\"\<+\>\""}], "]"}], "\[Or]", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"graphWeights", ",", "\"\<-\>\""}], "]"}]}], ",", 
       "\"\<Input has to be the interaction graph with no labels.\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DigraphUD", "[", 
        RowBox[{"intG", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"Sort", "[", 
          RowBox[{"VertexList", "[", "intG", "]"}], "]"}]}], "]"}]}], "]"}]}],
     "]"}]}], ";"}]], "Input",
 CellFrame->1,
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.689252767511109*^9, 3.689252850994883*^9}, {
   3.6892528887700443`*^9, 3.689252996826224*^9}, {3.68925311546501*^9, 
   3.689253124873548*^9}, {3.689253183744915*^9, 3.689253185849036*^9}, {
   3.689253300903617*^9, 3.689253439687555*^9}, {3.689253475760618*^9, 
   3.6892535154218864`*^9}, {3.689253768543365*^9, 3.6892537937648067`*^9}, {
   3.689254021125811*^9, 3.689254024340995*^9}, {3.689255331788777*^9, 
   3.689255389460075*^9}, {3.689256671307393*^9, 3.689256754971178*^9}, 
   3.689256787595044*^9, {3.689257115120777*^9, 3.689257117663923*^9}, {
   3.689257156383138*^9, 3.689257158847279*^9}, {3.68925719961561*^9, 
   3.689257221350854*^9}, {3.6892573054986663`*^9, 3.689257578691295*^9}, {
   3.6892577462418756`*^9, 3.689257765257963*^9}, 3.689257937152795*^9, {
   3.689258160632577*^9, 3.689258200207841*^9}, {3.689258251511775*^9, 
   3.689258386704508*^9}, {3.689258505175284*^9, 3.6892585147828336`*^9}, {
   3.6892648150611887`*^9, 3.6892648367894316`*^9}, {3.689265089379879*^9, 
   3.689265106203841*^9}, {3.689265147580208*^9, 3.68926520146729*^9}, {
   3.68926523886743*^9, 3.6892653823956385`*^9}, {3.689265425132083*^9, 
   3.6892654294923325`*^9}, {3.6892659373053775`*^9, 
   3.6892660107755795`*^9}, {3.689266056385188*^9, 3.689266073639175*^9}, {
   3.689266690204441*^9, 3.6892667007230425`*^9}, {3.68926707955171*^9, 
   3.689267100213892*^9}, {3.689267141485253*^9, 3.6892672400368896`*^9}, {
   3.689267377724765*^9, 3.6892674878760653`*^9}, {3.68926752025292*^9, 
   3.6892675285083895`*^9}, {3.6892675990444236`*^9, 3.689267727682781*^9}, {
   3.689267761658725*^9, 3.689267796578722*^9}, {3.6892678345628943`*^9, 
   3.689267948667421*^9}, {3.6892680598017774`*^9, 3.689268069945358*^9}, {
   3.689268222059058*^9, 3.689268247505515*^9}, {3.689268295241244*^9, 
   3.689268309985087*^9}, {3.689268382625242*^9, 3.689268389096612*^9}, {
   3.689268423800597*^9, 3.6892684429356914`*^9}, {3.689268620948873*^9, 
   3.689268632846554*^9}, {3.6892687492122097`*^9, 3.6892687498592463`*^9}, {
   3.689268789981541*^9, 3.689268799893108*^9}, {3.68926885972453*^9, 
   3.689268889701245*^9}, {3.689269088068591*^9, 3.6892691069636717`*^9}, {
   3.689269181786951*^9, 3.6892692052592936`*^9}, {3.68926926217755*^9, 
   3.689269296826532*^9}, {3.689269372305848*^9, 3.6892693786342106`*^9}, {
   3.6892700347397375`*^9, 3.689270051404691*^9}, {3.689270128822119*^9, 
   3.6892701303002033`*^9}, {3.689270482730361*^9, 3.689270526127843*^9}, {
   3.689270798528424*^9, 3.689270800767552*^9}, {3.6892712385905952`*^9, 
   3.689271254468502*^9}, {3.689271621504495*^9, 3.6892716232495947`*^9}, {
   3.689271672007384*^9, 3.689271674689537*^9}, {3.68927179922266*^9, 
   3.689271800656742*^9}, 3.689271946312073*^9, {3.689273097104894*^9, 
   3.689273098223959*^9}, {3.6892731861029854`*^9, 3.689273196519581*^9}, {
   3.6892733540885935`*^9, 3.689273377385926*^9}, {3.689273535729983*^9, 
   3.6892735360169992`*^9}, {3.6892793398558517`*^9, 3.689279342736017*^9}, {
   3.763373718912023*^9, 3.763373756566867*^9}, {3.76337422447164*^9, 
   3.763374239839217*^9}, {3.763380435144325*^9, 3.763380445793116*^9}, {
   3.763381094835194*^9, 3.763381323044927*^9}, 3.763443054799187*^9, 
   3.764177536103408*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"fc716f09-a14d-4d03-9553-656fe3fee5d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DigraphUD", ":", " ", 
     RowBox[{
     "As", " ", "described", " ", "in", " ", "Algorithm", " ", "2"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{"the", " ", "function"}], "..."}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DigraphUD", "[", 
      RowBox[{"G_Graph", ",", "UDS_List", ",", "A_List", ",", "B_List"}], 
      "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"UD", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"U", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"UDS", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Last", "[", "UDS", "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"U", "\[Equal]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"A", "\[Equal]", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"UD", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"UD", ",", 
              RowBox[{"{", 
               RowBox[{"{", "B", "}"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"UD", "=", 
              RowBox[{"Union", "[", 
               RowBox[{"UD", ",", 
                RowBox[{"DigraphUD", "[", 
                 RowBox[{"G", ",", 
                  RowBox[{"{", "}"}], ",", "x", ",", 
                  RowBox[{"Complement", "[", 
                   RowBox[{"B", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"SortBy", "[", 
                RowBox[{
                 RowBox[{"Cases", "[", 
                  RowBox[{
                   RowBox[{"Subsets", "[", "B", "]"}], ",", 
                   RowBox[{"x_", "/;", 
                    RowBox[{
                    RowBox[{"x", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{"x", "\[NotEqual]", "B"}]}]}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Length", "[", "#", "]"}]}], "&"}]}], "]"}]}], 
              "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MoveVerticesQ", "[", 
               RowBox[{"G", ",", "U", ",", "A"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MoveVerticesQ", "[", 
                  RowBox[{"G", ",", "A", ",", "B"}], "]"}]}], ",", 
                RowBox[{"UD", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"UD", ",", 
                   RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"UDS", ",", 
                    RowBox[{"{", "A", "}"}], ",", 
                    RowBox[{"{", "B", "}"}]}], "]"}], "}"}]}], "]"}]}]}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "B", "]"}], ">", "1"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"UD", "=", 
                   RowBox[{"Union", "[", 
                    RowBox[{"UD", ",", 
                    RowBox[{"DigraphUD", "[", 
                    RowBox[{"G", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{"UDS", ",", 
                    RowBox[{"{", "A", "}"}]}], "]"}], ",", "x", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"B", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"Subsets", "[", "B", "]"}], ",", 
                    RowBox[{"x_", "/;", 
                    RowBox[{
                    RowBox[{"x", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{"x", "\[NotEqual]", "B"}]}]}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Length", "[", "#", "]"}]}], "&"}]}], "]"}]}], 
                   "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "UD"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MoveVerticesQ", ":", " ", 
      RowBox[{
      "Predicate", " ", "that", " ", "returns", " ", "True", " ", "if", " ", 
       "it", " ", "is", " ", "possible", " ", "to", " ", "move", " ", 
       "vertices", " ", "from", " ", "D", " ", "to", " ", "C"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
       "without", " ", "changing", " ", "the", " ", "update", " ", "digraph", 
        " ", "induced", " ", "by", " ", "C"}], "\[Union]", "D"}], ";", 
      "otherwise"}], ",", 
     RowBox[{"False", " ", "is", " ", 
      RowBox[{"returned", ".", "This"}], " ", "corresponds", " ", "to", " ", 
      "Algorithm", " ", "3", " ", "in", " ", "the", " ", 
      RowBox[{"paper", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MoveVerticesQ", "[", 
      RowBox[{"G_Graph", ",", "C_List", ",", "D_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"flag", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"D", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}], ",", 
         RowBox[{"subsets", "=", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"Subsets", "[", "D", "]"}], ",", 
              RowBox[{"x_", "/;", 
               RowBox[{"x", "\[NotEqual]", 
                RowBox[{"{", "}"}]}]}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Length", "[", "#", "]"}]}], "&"}]}], "]"}]}], ",", 
         RowBox[{"i", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"C", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "False", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", "flag"}], "&&", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "subsets", "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SameDigraphsQ", "[", 
                RowBox[{
                 RowBox[{"Subdigraph", "[", 
                  RowBox[{"G", ",", "C", ",", "D"}], "]"}], ",", 
                 RowBox[{"Subdigraph", "[", 
                  RowBox[{"G", ",", 
                   RowBox[{"Union", "[", 
                    RowBox[{"C", ",", 
                    RowBox[{
                    "subsets", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   RowBox[{"Complement", "[", 
                    RowBox[{"D", ",", 
                    RowBox[{
                    "subsets", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
               RowBox[{"flag", "=", "True"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "flag"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"SameDigraphsQ", ":", " ", 
      RowBox[{"Given", " ", "two", " ", "digraphs"}]}], ",", 
     RowBox[{
     "the", " ", "predicate", " ", "yields", " ", "True", " ", "if", " ", 
      "they", " ", "have", " ", "the", " ", "same", " ", 
      RowBox[{"labeling", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SameDigraphsQ", "[", 
      RowBox[{"g1_Graph", ",", "g2_Graph"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"order1", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Ordering", "[", 
            RowBox[{"EdgeList", "[", "g1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"order2", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Ordering", "[", 
            RowBox[{"EdgeList", "[", "g2", "]"}], "]"}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"order1", "\[Equal]", 
           RowBox[{"{", "}"}]}], "||", 
          RowBox[{"order2", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"order1", "\[Equal]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"order2", "\[Equal]", 
             RowBox[{"{", "}"}]}]}], ",", "True", ",", "False"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"EdgeList", "[", "g1", "]"}], "\[LeftDoubleBracket]", 
               "order1", "\[RightDoubleBracket]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"EdgeList", "[", "g2", "]"}], "\[LeftDoubleBracket]", 
               "order2", "\[RightDoubleBracket]"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"Last", "[", 
                 RowBox[{"AbsoluteOptions", "[", 
                  RowBox[{"g1", ",", "EdgeWeight"}], "]"}], "]"}], "]"}], 
               "\[LeftDoubleBracket]", "order1", "\[RightDoubleBracket]"}], "==", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"Last", "[", 
                 RowBox[{"AbsoluteOptions", "[", 
                  RowBox[{"g2", ",", "EdgeWeight"}], "]"}], "]"}], "]"}], 
               "\[LeftDoubleBracket]", "order2", "\[RightDoubleBracket]"}]}], 
             ")"}]}], ",", "True", ",", "False"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Subdigraph", ":", " ", 
      RowBox[{
      "Gives", " ", "the", " ", "subdigraph", " ", "generated", " ", "from", 
       " ", "interaction", " ", "digraph", " ", "G", " ", "and", " ", 
       "subsets", " ", "C", " ", "and", " ", "D", " ", "of", " ", "vertices", 
       " ", "of", " ", "G"}]}], ",", 
     RowBox[{
     "as", " ", "described", " ", "in", " ", "Definition", " ", "4.", 
      "\[IndentingNewLine]", "Example", " ", "of", " ", 
      RowBox[{"usage", ":", " ", 
       RowBox[{"Subdigraph", "[", 
        RowBox[{
         RowBox[{"CAInteractionGraph", "[", 
          RowBox[{"1", ",", "5"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Subdigraph", "[", 
      RowBox[{"intG_Graph", ",", "C_List", ",", "D_List"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "\[Equal]", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{"D", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"C", "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"D", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{"Graph", "[", 
          RowBox[{"{", "}"}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"elist", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Intersection", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "intG", "]"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Union", "[", 
                    RowBox[{"C", ",", "D"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Union", "[", 
                    RowBox[{"C", ",", "D"}], "]"}]}], "}"}]}], "]"}], ",", 
                  "1"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"Graph", "[", 
            RowBox[{"elist", ",", 
             RowBox[{"EdgeWeight", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{"\"\<+\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"Length", "[", "elist", "]"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"EdgeLabels", "\[Rule]", "\"\<+\>\""}], ",", 
             RowBox[{"EdgeStyle", "\[Rule]", "Red"}], ",", 
             RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"C", ",", 
                    RowBox[{"First", "[", "x", "]"}]}], "]"}], "&&", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"D", ",", 
                    RowBox[{"Last", "[", "x", "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<-\>\"", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", "0.8"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<+\>\"", ",", "Red"}], "}"}]}], "]"}]}], "}"}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"Sort", "[", 
                RowBox[{"Intersection", "[", 
                 RowBox[{
                  RowBox[{"EdgeList", "[", "intG", "]"}], ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Union", "[", 
                    RowBox[{"C", ",", "D"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Union", "[", 
                    RowBox[{"C", ",", "D"}], "]"}]}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}]}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"m", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Graph", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", "m", "]"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"EdgeWeight", "\[Rule]", 
              RowBox[{
               RowBox[{"Transpose", "[", "m", "]"}], "\[LeftDoubleBracket]", 
               "2", "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"EdgeLabels", "\[Rule]", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", "m", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "m", "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "]"}]}], ",", 
             RowBox[{"EdgeStyle", "\[Rule]", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", "m", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "m", "]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "]"}]}], ",", 
             RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], 
           ",", 
           RowBox[{"Graph", "[", 
            RowBox[{"{", "}"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.762694144714063*^9, 3.7626942675673*^9}, {
   3.762694301198429*^9, 3.762694308303676*^9}, {3.762694375211095*^9, 
   3.762694394021007*^9}, {3.762696342811617*^9, 3.762696421185923*^9}, {
   3.763374825437108*^9, 3.763374832738286*^9}, {3.764174869706003*^9, 
   3.764174873675396*^9}, 3.764235415031646*^9, {3.764236980060367*^9, 
   3.764237020099188*^9}, {3.764501416995434*^9, 3.764501419034164*^9}, 
   3.764501477812207*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"f7b4fd04-c9fc-425b-8b2f-223510d68909"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
[Serious bug here: not to be used yet!] The minimal block update schedule \
that yields a given labelled interaction digraph\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, 
   3.764065635865962*^9, {3.764065911666086*^9, 3.76406593940573*^9}, {
   3.7640661011830873`*^9, 3.764066150603535*^9}, {3.7842975297309113`*^9, 
   3.7842975330177197`*^9}, 3.784919718497664*^9, {3.785340040553829*^9, 
   3.785340068587335*^9}, {3.80026319295734*^9, 
   3.8002632150034313`*^9}},ExpressionUUID->"0ce6f10f-ec27-4e8b-8ca4-\
48f3f5bd37ce"],

Cell[TextData[{
 StyleBox["UDSFromLabIntGraph",
  FontSlant->"Italic"],
 " gives the minimal update schedule (in terms of the number of blocks in it) \
that generates the given labelled interaction digraph ",
 StyleBox["labG",
  FontSlant->"Italic"],
 ". It does so by sorting the vertices of ",
 StyleBox["labG",
  FontSlant->"Italic"],
 " using ",
 StyleBox["PriorityOrdering,",
  FontSlant->"Italic"],
 " and then computing the update priority of each cell. ",
 StyleBox["UDSfromPriorityList",
  FontSlant->"Italic"],
 " converts such a priority list to an update schedule.\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  RowBox[{"UDSFromLabIntGraph", "[", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 5, 3, 
        4}, {{{1, 2}, {1, 3}, {2, 1}, {2, 4}, {4, 2}, {4, 5}, {5, 4}, {5, 
         3}, {3, 1}, {3, 5}}, Null}, {
        EdgeLabels -> {
          DirectedEdge[3, 4] -> "-", DirectedEdge[4, 5] -> "-", 
           DirectedEdge[2, 1] -> "+", DirectedEdge[2, 3] -> "+", 
           DirectedEdge[4, 3] -> "+", DirectedEdge[5, 1] -> "+", 
           DirectedEdge[5, 4] -> "+", DirectedEdge[1, 5] -> "-", 
           DirectedEdge[1, 2] -> "+", DirectedEdge[3, 2] -> "+"}, 
         EdgeLabelStyle -> {Larger}, 
         EdgeStyle -> {
          DirectedEdge[3, 4] -> RGBColor[0., 0.19999999999999996`, 0.], 
           DirectedEdge[1, 5] -> RGBColor[0., 0.19999999999999996`, 0.], 
           DirectedEdge[2, 1] -> RGBColor[1, 0, 0], DirectedEdge[4, 5] -> 
           RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[1, 2] -> 
           RGBColor[1, 0, 0], DirectedEdge[2, 3] -> RGBColor[1, 0, 0], 
           DirectedEdge[4, 3] -> RGBColor[1, 0, 0], DirectedEdge[5, 1] -> 
           RGBColor[1, 0, 0], DirectedEdge[3, 2] -> RGBColor[1, 0, 0], 
           DirectedEdge[5, 4] -> RGBColor[1, 0, 0]}, VertexLabels -> {"Name"},
          VertexLabelStyle -> {Larger}, 
         EdgeWeight -> {"+", "-", "+", "+", "+", "-", "+", "-", "+", "+"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{0., 0.5493533467963883}, {0.5078328139465137, 
              0.4119836248568903}, {0.8349934782635412, 0.}}], 
             0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.45595147340751774, 0.3331262168766421}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0., 0.19999999999999996`, 0.], 
            ArrowBox[
             BezierCurveBox[{{0., 
              0.5493533467963883}, {-0.026155140944248718`, 
              1.075387931591751}, {0.2650294125393894, 1.5142592471402492`}}],
              0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"-\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.0649712932456243, 1.050358355846076}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{0.8349934782635412, 0.}, {0.3271606643170275, 
              0.13736972193950847`}, {0., 0.5493533467963883}}], 
             0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.3790420048560234, 0.21622712991974624}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{0.8349934782635412, 0.}, {1.122875529544045, 
              0.4404774645536523}, {1.6160102122228786`, 
              0.6240929785175601}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {1.1818153367469808, 0.36671766063593364}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
              0.2911845534836374, 0.9882246623448256}, {0., 
              0.5493533467963883}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.2000581192937651, 1.0132542380905614}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
              0.7573274174156608, 1.7013950751209193`}, {1.264599867375996, 
              1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.7616274397842544, 1.6069948945033712}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
              1.328128160942377, 0.18361551396402728`}, {0.8349934782635412, 
              0.}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {1.269188353739439, 0.2573753178816263}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0., 0.19999999999999996`, 0.], 
            ArrowBox[
             BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
              1.2864382109278791`, 1.0341556486786525`}, {1.264599867375996, 
              1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"-\"\>",
             StripOnInput->False,
             FontSize->Larger], {1.3748062008224111, 1.0673431042141823}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0., 0.19999999999999996`, 0.], 
            ArrowBox[
             BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
              0.7723018624997218, 1.3726548502095317`}, {0.2650294125393894, 
              1.5142592471402492`}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"-\"\>",
             StripOnInput->False,
             FontSize->Larger], {0.768001840131131, 1.467055030826246}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], 
            ArrowBox[
             BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
              1.5941718686709963`, 1.1497280080274093`}, {1.6160102122228786`,
               0.6240929785175601}}], 0.019417689575323693`]}, InsetBox[
            StyleBox["\<\"+\"\>",
             StripOnInput->False,
             FontSize->Larger], {1.505803878776464, 1.1165405524927459}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.5493533467963883}, 0.019417689575323693], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             FontSize->Larger], 
            Offset[{2, 2}, {0.019417689575323693, 0.568771036371712}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8349934782635412, 0.}, 0.019417689575323693], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             FontSize->Larger], 
            Offset[{2, 2}, {0.8544111678388648, 0.019417689575323693}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.2650294125393894, 1.5142592471402492`}, 
            0.019417689575323693], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             FontSize->Larger], 
            Offset[{2, 2}, {0.2844471021147131, 1.533676936715573}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.6160102122228786`, 0.6240929785175601}, 
            0.019417689575323693], InsetBox[
            StyleBox["3",
             StripOnInput->False,
             FontSize->Larger], 
            Offset[{2, 2}, {1.6354279017982023, 0.6435106680928837}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.264599867375996, 1.5597906781893678`}, 
            0.019417689575323693], InsetBox[
            StyleBox["4",
             StripOnInput->False,
             FontSize->Larger], 
            Offset[{2, 2}, {1.2840175569513197, 1.5792083677646915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], "]"}]], "Text",
  CellChangeTimes->{{3.763394591550205*^9, 3.76339460968171*^9}, {
    3.763394965716458*^9, 3.763394973514573*^9}, {3.7639934961526012`*^9, 
    3.763993497779294*^9}, 3.764066480437296*^9},ExpressionUUID->
  "7691ae51-61bf-4c70-be4f-9c38a9c88970"],
 "  \[Implies]  {{1, 2, 3}, {4}, {5}}"
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, {
   3.763370027171421*^9, 3.763370045025981*^9}, {3.763370083703275*^9, 
   3.763370101629931*^9}, {3.763370394952524*^9, 3.763370415655113*^9}, {
   3.7640665222206597`*^9, 3.764066560905526*^9}, {3.764237808929359*^9, 
   3.7642378093448257`*^9}, {3.764237847718395*^9, 3.764237909042427*^9}, {
   3.76423797205726*^9, 3.764238080212376*^9}, {3.764238633335627*^9, 
   3.764238650624495*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3fafbb08-b1af-4b3b-9d6e-d7e25c98383f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSFromLabIntGraph", "[", "labG_Graph", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ordering", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "labG", "]"}], ",", 
          RowBox[{
           RowBox[{"PriorityOrdering", "[", 
            RowBox[{"labG", ",", "#1", ",", "#2"}], "]"}], "&"}]}], "]"}]}], 
       ",", 
       RowBox[{"priority", "=", "1"}], ",", 
       RowBox[{"prioritylist", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"VertexCount", "[", "labG", "]"}], "}"}]}], "]"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PriorityOrdering", "[", 
             RowBox[{"labG", ",", 
              RowBox[{
              "ordering", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"ordering", "\[LeftDoubleBracket]", 
               RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
            "\[Equal]", "1"}], ",", 
           RowBox[{"priority", "=", 
            RowBox[{"priority", "+", "1"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prioritylist", "\[LeftDoubleBracket]", 
           RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
          "priority"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"VertexCount", "[", "labG", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"UDSFromPriorityList", "[", "prioritylist", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76339383615958*^9, 3.763394056812459*^9}, {
   3.763394090624025*^9, 3.763394467246712*^9}, {3.763394513634605*^9, 
   3.763394536516429*^9}, {3.763394661957915*^9, 3.763394698580935*^9}, {
   3.763394911506424*^9, 3.763394924467758*^9}, {3.763394955248431*^9, 
   3.76339495560049*^9}, {3.76399331099445*^9, 3.763993313970609*^9}, {
   3.763993739566433*^9, 3.763993745741572*^9}, {3.7640663096184196`*^9, 
   3.764066327750272*^9}, 3.764237985067661*^9},
 CellLabel->
  "In[277]:=",ExpressionUUID->"13324f0d-c121-44dd-9db7-dd3291ed0ca0"],

Cell[TextData[{
 "\n",
 StyleBox["PriorityOrdering",
  FontSlant->"Italic"],
 " is an ordering function (as described in the documentation of the ",
 StyleBox["Sort",
  FontSlant->"Italic"],
 " function) for vertices in a labelled interaction digraph, in terms of \
their update priority. It uses ",
 StyleBox["RemovePositiveEdges",
  FontSlant->"Italic"],
 " and ",
 StyleBox["FindPath",
  FontSlant->"Italic"],
 " in order to verify whether or not there is a negative path from ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " to ",
 StyleBox["v2",
  FontSlant->"Italic"],
 " or from ",
 StyleBox["v2",
  FontSlant->"Italic"],
 " to ",
 StyleBox["v1",
  FontSlant->"Italic"],
 ": in the first case, ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " is updated before ",
 StyleBox["v2",
  FontSlant->"Italic"],
 ", whereas in the latter, ",
 StyleBox["v2",
  FontSlant->"Italic"],
 " is updated before ",
 StyleBox["v1",
  FontSlant->"Italic"],
 ". If there are no negative paths connecting ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["v2",
  FontSlant->"Italic"],
 ", both vertices have the same update priority. Summing up, these are the \
possible outputs of the function:\n               1, if ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " is updated before ",
 StyleBox["v2",
  FontSlant->"Italic"],
 "\nOutput:   0, if ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["v2",
  FontSlant->"Italic"],
 " are updated at the same time\n              -1, if ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " is updated after ",
 StyleBox["v2",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, {
   3.763370027171421*^9, 3.763370045025981*^9}, {3.763370083703275*^9, 
   3.763370101629931*^9}, {3.763370394952524*^9, 3.763370415655113*^9}, {
   3.7640665222206597`*^9, 3.764066560905526*^9}, {3.764066722447111*^9, 
   3.764066757465468*^9}, {3.7642381416604652`*^9, 3.764238312244334*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0155a962-fc7e-47a4-b4d8-b27cb05502d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PriorityOrdering", "[", 
    RowBox[{"labG_Graph", ",", "v1_Integer", ",", "v2_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FindPath", "[", 
       RowBox[{
        RowBox[{"RemovePositiveEdges", "[", "labG", "]"}], ",", "v1", ",", 
        "v2"}], "]"}], "\[NotEqual]", 
      RowBox[{"{", "}"}]}], ",", "1", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FindPath", "[", 
         RowBox[{
          RowBox[{"RemovePositiveEdges", "[", "labG", "]"}], ",", "v2", ",", 
          "v1"}], "]"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"-", "1"}], ",", "0"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763393560741065*^9, 3.763393561330489*^9}, {
  3.763393604970766*^9, 3.76339361687792*^9}, {3.763393649233281*^9, 
  3.763393672339601*^9}, {3.763393753003849*^9, 3.763393763983481*^9}, {
  3.763394843814482*^9, 3.7633948870358796`*^9}, {3.763394937006221*^9, 
  3.763394939720964*^9}, {3.76406635974839*^9, 3.764066370140841*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"b128fdc6-bd21-4852-83fa-a2d69e8ea628"],

Cell[TextData[{
 "\nGiven the labelled interaction digraph ",
 StyleBox["labG",
  FontSlant->"Italic"],
 ", the function ",
 StyleBox["RemovePositiveEdges",
  FontSlant->"Italic"],
 " prunes ",
 StyleBox["labG",
  FontSlant->"Italic"],
 " by removing its edges with positive labels. It is used in ",
 StyleBox["PriorityOrdering",
  FontSlant->"Italic"],
 " as an auxiliary function in order to establish whether or not a vertex ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "0ca57133-b2c2-4170-96d2-e1468e27325a"],
 " is updated before a vertex ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "j"], TraditionalForm]],ExpressionUUID->
  "76e35d9a-f339-4192-925e-9927b6241969"],
 "."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, {
   3.763370027171421*^9, 3.763370045025981*^9}, {3.763370083703275*^9, 
   3.763370101629931*^9}, {3.763370394952524*^9, 3.763370415655113*^9}, {
   3.7640665222206597`*^9, 3.764066560905526*^9}, {3.764066722447111*^9, 
   3.764066757465468*^9}, 3.7640668028266783`*^9, {3.764238420224515*^9, 
   3.764238540462843*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"28dea554-32e0-4814-a70b-b574c832f9b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RemovePositiveEdges", "[", "labG_Graph", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"elist", "=", 
        RowBox[{"EdgeList", "[", "labG", "]"}]}], ",", 
       RowBox[{"wlist", "=", 
        RowBox[{"Last", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"AbsoluteOptions", "[", 
           RowBox[{"labG", ",", "EdgeWeight"}], "]"}], "]"}], "]"}]}], ",", 
       "vpos"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vpos", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"wlist", ",", "\"\<-\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "labG", "]"}], ",", 
        RowBox[{
        "elist", "\[LeftDoubleBracket]", "vpos", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"EdgeWeight", "\[Rule]", 
         RowBox[{
         "wlist", "\[LeftDoubleBracket]", "vpos", 
          "\[RightDoubleBracket]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763393028584117*^9, 3.76339302966124*^9}, {
   3.763393135552017*^9, 3.763393154231056*^9}, {3.763393299720457*^9, 
   3.763393350981179*^9}, {3.763393381870487*^9, 3.763393453895843*^9}, {
   3.763393493354332*^9, 3.7633934975899773`*^9}, {3.764066387490272*^9, 
   3.764066397614882*^9}, 3.764066814224115*^9},
 CellLabel->
  "In[279]:=",ExpressionUUID->"29559342-77c9-4296-800a-4e92ff33a6ab"],

Cell[TextData[{
 "\nGiven a list containing the update priorities of each of the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " vertices in a labelled interaction digraph, the function yields the update \
schedule induced by ",
 StyleBox["prioritylist",
  FontSlant->"Italic"],
 ".\nThe ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th element of the list is the update priority of vertex ",
 StyleBox["i",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, 3.72268390756397*^9, {3.762276480212078*^9, 
   3.762276501767336*^9}, 3.762278038569675*^9, {3.76227892470271*^9, 
   3.762278927243329*^9}, {3.762706922684151*^9, 3.7627069232201567`*^9}, {
   3.763370027171421*^9, 3.763370045025981*^9}, {3.763370083703275*^9, 
   3.763370101629931*^9}, {3.763370394952524*^9, 3.763370415655113*^9}, {
   3.7640665222206597`*^9, 3.764066560905526*^9}, {3.764066722447111*^9, 
   3.764066757465468*^9}, 3.7640668028266783`*^9, {3.7640668332800922`*^9, 
   3.764066844450856*^9}, {3.764238576091888*^9, 3.764238642804589*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"8f4becc5-7e82-45f0-b725-1fee3f2325f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSFromPriorityList", "[", "prioritylist_List", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], "&"}], "/@", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"List", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"Length", "[", "prioritylist", "]"}]}], "]"}], ",", 
               "prioritylist"}], "}"}]}], "]"}], ",", "Last"}], "]"}], ",", 
         "Last"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.763993507930474*^9, 3.763993576974307*^9}, {
  3.763993839393873*^9, 3.763993928203251*^9}, {3.763993974330561*^9, 
  3.763993981178504*^9}, {3.76399405357663*^9, 3.763994077901508*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"3b734718-6fe5-405a-b96f-8874917c1ddd"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Generation of interaction digraphs (labelled or not) for asynchronous CAs, \
and the labelled interaction digraph of an arbitrary (Boolean) network\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, {
   3.76423649363976*^9, 3.764236585089144*^9}, {3.764437718261294*^9, 
   3.764437745065146*^9}, 
   3.764501533269506*^9},ExpressionUUID->"709b9046-91aa-441e-9770-\
1dcf7db44751"],

Cell[TextData[{
 StyleBox["LabelledInteractionGraph",
  FontSlant->"Italic"],
 " (or the shorter version ",
 StyleBox["LabIntGraph",
  FontSlant->"Italic"],
 ") returns the ",
 StyleBox["labelled interaction digraph",
  FontSlant->"Italic"],
 " generated from ",
 StyleBox["(unlabelled) interaction digraph",
  FontSlant->"Italic"],
 " ",
 StyleBox["intG",
  FontSlant->"Italic"],
 " and update schedule ",
 StyleBox["UDS",
  FontSlant->"Italic"],
 ". In other words, it assigns the edges of ",
 StyleBox["intG",
  FontSlant->"Italic"],
 " with the labels \[OpenCurlyDoubleQuote]+\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]-\[CloseCurlyDoubleQuote] defined by the ",
 StyleBox["UDS",
  FontSlant->"Italic"],
 ".\nThe ",
 StyleBox["UDS",
  FontSlant->"Italic"],
 " must be written in block form; for instance, {{1, 2, 3}, {4}, {5, 6}} \
updates vertices 1, 2 and 3 first, at the same time, then vertex 4, and \
finally, vertices 5 and 6, simultaneously.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": \nLabelled interaction digraph of an ECA rule running on a configuration \
of length 5 with update schedule {{1, 2, 3}, {4}, {5}}.\n\
LabelledInteractionGraph[Graph[{1\[DirectedEdge]2, 2\[DirectedEdge]3, 3\
\[DirectedEdge]4, 4\[DirectedEdge]5, 5\[DirectedEdge]1, 1\[DirectedEdge]5, 5\
\[DirectedEdge]4, 4\[DirectedEdge]3, 3\[DirectedEdge]2, 2\[DirectedEdge]1}], \
{{1, 2, 3}, {4}, {5}}]\n",
 Cell[BoxData[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 5, 3, 
       4}, {{{1, 2}, {1, 3}, {2, 1}, {2, 4}, {4, 2}, {4, 5}, {5, 4}, {5, 3}, {
        3, 1}, {3, 5}}, Null}, {
       EdgeLabels -> {
         DirectedEdge[3, 4] -> "-", DirectedEdge[4, 5] -> "-", 
          DirectedEdge[2, 1] -> "+", DirectedEdge[2, 3] -> "+", 
          DirectedEdge[4, 3] -> "+", DirectedEdge[5, 1] -> "+", 
          DirectedEdge[5, 4] -> "+", DirectedEdge[1, 5] -> "-", 
          DirectedEdge[1, 2] -> "+", DirectedEdge[3, 2] -> "+"}, 
        EdgeLabelStyle -> {Larger}, 
        EdgeStyle -> {
         DirectedEdge[3, 4] -> RGBColor[0., 0.19999999999999996`, 0.], 
          DirectedEdge[1, 5] -> RGBColor[0., 0.19999999999999996`, 0.], 
          DirectedEdge[2, 1] -> RGBColor[1, 0, 0], DirectedEdge[4, 5] -> 
          RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[1, 2] -> 
          RGBColor[1, 0, 0], DirectedEdge[2, 3] -> RGBColor[1, 0, 0], 
          DirectedEdge[4, 3] -> RGBColor[1, 0, 0], DirectedEdge[5, 1] -> 
          RGBColor[1, 0, 0], DirectedEdge[3, 2] -> RGBColor[1, 0, 0], 
          DirectedEdge[5, 4] -> RGBColor[1, 0, 0]}, VertexLabels -> {"Name"}, 
        VertexLabelStyle -> {Larger}, 
        EdgeWeight -> {"+", "-", "+", "+", "+", "-", "+", "-", "+", "+"}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0., 0.5493533467963883}, {0.5078328139465137, 
             0.4119836248568903}, {0.8349934782635412, 0.}}], 
            0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.45595147340751774, 0.3331262168766421}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{0., 0.5493533467963883}, {-0.026155140944248718`,
              1.075387931591751}, {0.2650294125393894, 1.5142592471402492`}}],
             0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.0649712932456243, 1.050358355846076}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.8349934782635412, 0.}, {0.3271606643170275, 
             0.13736972193950847`}, {0., 0.5493533467963883}}], 
            0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.3790420048560234, 0.21622712991974624}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.8349934782635412, 0.}, {1.122875529544045, 
             0.4404774645536523}, {1.6160102122228786`, 0.6240929785175601}}],
             0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.1818153367469808, 0.36671766063593364}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
             0.2911845534836374, 0.9882246623448256}, {0., 
             0.5493533467963883}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.2000581192937651, 1.0132542380905614}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
             0.7573274174156608, 1.7013950751209193`}, {1.264599867375996, 
             1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.7616274397842544, 1.6069948945033712}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
             1.328128160942377, 0.18361551396402728`}, {0.8349934782635412, 
             0.}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.269188353739439, 0.2573753178816263}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
             1.2864382109278791`, 1.0341556486786525`}, {1.264599867375996, 
             1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.3748062008224111, 1.0673431042141823}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
             0.7723018624997218, 1.3726548502095317`}, {0.2650294125393894, 
             1.5142592471402492`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.768001840131131, 1.467055030826246}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
             1.5941718686709963`, 1.1497280080274093`}, {1.6160102122228786`, 
             0.6240929785175601}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.505803878776464, 1.1165405524927459}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0., 0.5493533467963883}, 0.019417689575323693], 
          InsetBox[
           StyleBox["1",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {0.019417689575323693, 0.568771036371712}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.8349934782635412, 0.}, 0.019417689575323693], InsetBox[
           StyleBox["2",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {0.8544111678388648, 0.019417689575323693}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.2650294125393894, 1.5142592471402492`}, 
           0.019417689575323693], InsetBox[
           StyleBox["5",
            StripOnInput->False,
            FontSize->Larger], Offset[{2, 2}, 
           {0.2844471021147131, 1.533676936715573}], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.6160102122228786`, 0.6240929785175601}, 
           0.019417689575323693], InsetBox[
           StyleBox["3",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {1.6354279017982023, 0.6435106680928837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.264599867375996, 1.5597906781893678`}, 
           0.019417689575323693], InsetBox[
           StyleBox["4",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {1.2840175569513197, 1.5792083677646915}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{188.0625, Automatic}]], "Text",
  CellChangeTimes->{{3.689253746067079*^9, 3.6892537952548923`*^9}, 
    3.689254080014179*^9, 3.689254905795411*^9, 3.689255130514264*^9, 
    3.689255396963504*^9, 3.6892750221028905`*^9, 3.762695327469958*^9},
  FontColor->RGBColor[0, 0, 1],
  Background->None,ExpressionUUID->"5b14b2af-c0e4-4f4e-aa49-de2d49170416"]
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689254052473604*^9, 3.689254068057495*^9}, 3.762506384702429*^9, {
   3.762506420598385*^9, 3.7625065077809777`*^9}, 3.762506540232657*^9, 
   3.762524205346532*^9, {3.762524430337446*^9, 3.7625244501028976`*^9}, {
   3.762524523937942*^9, 3.7625246114631453`*^9}, 3.762525629490725*^9, {
   3.762526178787713*^9, 3.762526188741818*^9}, {3.763283187208085*^9, 
   3.7632831987064877`*^9}, {3.763374285666535*^9, 3.763374286105685*^9}, {
   3.763374318224378*^9, 3.763374387543552*^9}, {3.764174875023448*^9, 
   3.764174890474921*^9}, {3.764235618891621*^9, 3.764235653787075*^9}, {
   3.764236134153439*^9, 3.764236170638291*^9}, {3.76423643539896*^9, 
   3.764236456208552*^9}, {3.784919882889594*^9, 3.784919885496849*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"ec21ab95-bdcb-4618-a572-e597d66126bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LabelledInteractionGraph", "[", 
     RowBox[{"intG_Graph", ",", "UDS_List"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"Transpose", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"UDS", ",", 
                  RowBox[{"First", "[", "x", "]"}]}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[GreaterEqual]", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"UDS", ",", 
                  RowBox[{"Last", "[", "x", "]"}]}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<+\>\"", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<-\>\"", ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{"Green", ",", ".8"}], "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"EdgeList", "[", "intG", "]"}], "]"}]}], "}"}]}], 
           "]"}]}]}], ",", 
        RowBox[{"elist", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"EdgeList", "[", "intG", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"Graph", "[", 
       RowBox[{"elist", ",", 
        RowBox[{"EdgeWeight", "\[Rule]", 
         RowBox[{
         "m", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{"elist", ",", 
             RowBox[{
             "m", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "]"}]}], ",", 
        RowBox[{"EdgeLabels", "\[Rule]", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{"elist", ",", 
             RowBox[{
             "m", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "]"}]}], ",", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "Larger"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
        RowBox[{"VertexLabelStyle", "\[Rule]", "Larger"}]}], "]"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LabIntGraph", "[", 
    RowBox[{"intG_Graph", ",", "UDS_List"}], "]"}], ":=", 
   RowBox[{"LabelledInteractionGraph", "[", 
    RowBox[{"intG", ",", "UDS"}], "]"}]}], ";"}]}], "Input",
 CellFrame->1,
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.689252767511109*^9, 3.689252850994883*^9}, {
   3.6892528887700443`*^9, 3.689252996826224*^9}, {3.68925311546501*^9, 
   3.689253124873548*^9}, {3.689253183744915*^9, 3.689253185849036*^9}, {
   3.689253300903617*^9, 3.689253439687555*^9}, {3.689253475760618*^9, 
   3.6892535154218864`*^9}, {3.689253768543365*^9, 3.6892537937648067`*^9}, {
   3.689254021125811*^9, 3.689254024340995*^9}, {3.689255331788777*^9, 
   3.689255389460075*^9}, {3.689256671307393*^9, 3.689256754971178*^9}, 
   3.689256787595044*^9, {3.689257115120777*^9, 3.689257117663923*^9}, 
   3.68927501860069*^9, {3.7625064206251783`*^9, 3.762506444290416*^9}, {
   3.762506482060587*^9, 3.76250648206988*^9}, {3.763283498802789*^9, 
   3.763283500311914*^9}, {3.763374256107733*^9, 3.763374276660009*^9}, {
   3.764174914707919*^9, 3.764174916557774*^9}, 3.764235428081939*^9, {
   3.764236047529856*^9, 3.764236077216699*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"c6a89a16-9232-4393-a483-80daf04e0649"],

Cell[TextData[{
 StyleBox["\nCALabelledInteractionGraph",
  FontSlant->"Italic"],
 " (or the shorter version ",
 StyleBox["CALabIntGraph",
  FontSlant->"Italic"],
 ") gives the ",
 StyleBox["labelled interaction digraph",
  FontSlant->"Italic"],
 " generated from the ",
 StyleBox["(unlabelled) interaction digraph",
  FontSlant->"Italic"],
 " of the ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius CA rule running over a configuration of length ",
 StyleBox["configLen",
  FontSlant->"Italic"],
 " and update schedule ",
 StyleBox["UDS",
  FontSlant->"Italic"],
 " (written in block form). \nCAInteractionGraph (or the shorter version \
CAIntGraph) generates only the corresponding interaction graph.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \n1) Labelled interaction digraph of an ECA rule running on a \
configuration of length 5, with a given update:\n\
CALabelledInteractionGraph[1, 5, {{1, 2, 3}, {4}, {5}}]\n",
 Cell[BoxData[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 5, 3, 
       4}, {{{1, 2}, {1, 3}, {2, 1}, {2, 4}, {4, 2}, {4, 5}, {5, 4}, {5, 3}, {
        3, 1}, {3, 5}}, Null}, {
       EdgeLabels -> {
         DirectedEdge[3, 4] -> "-", DirectedEdge[4, 5] -> "-", 
          DirectedEdge[2, 1] -> "+", DirectedEdge[2, 3] -> "+", 
          DirectedEdge[4, 3] -> "+", DirectedEdge[5, 1] -> "+", 
          DirectedEdge[5, 4] -> "+", DirectedEdge[1, 5] -> "-", 
          DirectedEdge[1, 2] -> "+", DirectedEdge[3, 2] -> "+"}, 
        EdgeLabelStyle -> {Larger}, 
        EdgeStyle -> {
         DirectedEdge[3, 4] -> RGBColor[0., 0.19999999999999996`, 0.], 
          DirectedEdge[1, 5] -> RGBColor[0., 0.19999999999999996`, 0.], 
          DirectedEdge[2, 1] -> RGBColor[1, 0, 0], DirectedEdge[4, 5] -> 
          RGBColor[0., 0.19999999999999996`, 0.], DirectedEdge[1, 2] -> 
          RGBColor[1, 0, 0], DirectedEdge[2, 3] -> RGBColor[1, 0, 0], 
          DirectedEdge[4, 3] -> RGBColor[1, 0, 0], DirectedEdge[5, 1] -> 
          RGBColor[1, 0, 0], DirectedEdge[3, 2] -> RGBColor[1, 0, 0], 
          DirectedEdge[5, 4] -> RGBColor[1, 0, 0]}, VertexLabels -> {"Name"}, 
        VertexLabelStyle -> {Larger}, 
        EdgeWeight -> {"+", "-", "+", "+", "+", "-", "+", "-", "+", "+"}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0., 0.5493533467963883}, {0.5078328139465137, 
             0.4119836248568903}, {0.8349934782635412, 0.}}], 
            0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.45595147340751774, 0.3331262168766421}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{0., 0.5493533467963883}, {-0.026155140944248718`,
              1.075387931591751}, {0.2650294125393894, 1.5142592471402492`}}],
             0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.0649712932456243, 1.050358355846076}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.8349934782635412, 0.}, {0.3271606643170275, 
             0.13736972193950847`}, {0., 0.5493533467963883}}], 
            0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.3790420048560234, 0.21622712991974624}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.8349934782635412, 0.}, {1.122875529544045, 
             0.4404774645536523}, {1.6160102122228786`, 0.6240929785175601}}],
             0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.1818153367469808, 0.36671766063593364}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
             0.2911845534836374, 0.9882246623448256}, {0., 
             0.5493533467963883}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.2000581192937651, 1.0132542380905614}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{0.2650294125393894, 1.5142592471402492`}, {
             0.7573274174156608, 1.7013950751209193`}, {1.264599867375996, 
             1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.7616274397842544, 1.6069948945033712}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
             1.328128160942377, 0.18361551396402728`}, {0.8349934782635412, 
             0.}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.269188353739439, 0.2573753178816263}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{1.6160102122228786`, 0.6240929785175601}, {
             1.2864382109278791`, 1.0341556486786525`}, {1.264599867375996, 
             1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.3748062008224111, 1.0673431042141823}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0., 0.19999999999999996`, 0.], 
           ArrowBox[
            BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
             0.7723018624997218, 1.3726548502095317`}, {0.2650294125393894, 
             1.5142592471402492`}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"-\"\>",
            StripOnInput->False,
            FontSize->Larger], {0.768001840131131, 1.467055030826246}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[1, 0, 0], 
           ArrowBox[
            BezierCurveBox[{{1.264599867375996, 1.5597906781893678`}, {
             1.5941718686709963`, 1.1497280080274093`}, {1.6160102122228786`, 
             0.6240929785175601}}], 0.019417689575323693`]}, InsetBox[
           StyleBox["\<\"+\"\>",
            StripOnInput->False,
            FontSize->Larger], {1.505803878776464, 1.1165405524927459}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0., 0.5493533467963883}, 0.019417689575323693], 
          InsetBox[
           StyleBox["1",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {0.019417689575323693, 0.568771036371712}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.8349934782635412, 0.}, 0.019417689575323693], InsetBox[
           StyleBox["2",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {0.8544111678388648, 0.019417689575323693}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.2650294125393894, 1.5142592471402492`}, 
           0.019417689575323693], InsetBox[
           StyleBox["5",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {0.2844471021147131, 1.533676936715573}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.6160102122228786`, 0.6240929785175601}, 
           0.019417689575323693], InsetBox[
           StyleBox["3",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {1.6354279017982023, 0.6435106680928837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.264599867375996, 1.5597906781893678`}, 
           0.019417689575323693], InsetBox[
           StyleBox["4",
            StripOnInput->False,
            FontSize->Larger], 
           Offset[{2, 2}, {1.2840175569513197, 1.5792083677646915}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{137.17578125, Automatic}]], "Text",
  CellChangeTimes->{
   3.689255199584215*^9, 3.689255401245749*^9, 3.68925545755497*^9, 
    3.6892750283712487`*^9, {3.6892754767818966`*^9, 3.68927547823798*^9}, 
    3.762695327473749*^9},
  FontColor->RGBColor[0, 0, 1],
  Background->None,ExpressionUUID->"7654a47e-c01c-491b-88b6-f139face3f27"],
 "\n2) (Unlabelled) ",
 StyleBox["Interaction digraph",
  FontSlant->"Italic"],
 " of a CA rule of radius 1.5 running on a configuration of length 8, with no \
given update schedule:\nCAInteractionGraph[1.5, 8]\n",
 Cell[BoxData[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{3, 4, 1, 2, 5, 6, 7, 
       8}, {{{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 4}, {2, 1}, {5, 6}, {5, 1}, {
        5, 2}, {6, 7}, {6, 2}, {6, 5}, {7, 8}, {7, 5}, {7, 6}, {8, 3}, {8, 
        6}, {8, 7}, {3, 4}, {3, 7}, {3, 8}, {4, 1}, {4, 8}, {4, 3}}, Null}]]}, 
     TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9l3k0VV3cx01JkjRRGkglpRJRonwVRXhMUcoYiooyFZlSVDR4CpVMkXnK
TSHjNQ/JVIbHTFwk4V7upTvoPe9a73rPP2f99jprr7PX3r/P97O32940vszD
xcUlwM3F9b9vpwy9u95DbLRLhawlqc7D/s3dKKtSNmqVPvgezx5ChOEtkS7V
YQzQ1kaeHWAj8cwM5XPgPJz0HPm5K9jwYv00b8I8uP7v0eYdT6GlDyHgS9pv
XaGA/x/fY6gn00fMw/VIQvaHtheKP6v3dgbNg2Il0GryDwd7eztTGhZpuD90
xWnkCgcBoYmifik0/LhzM+SWLwf13BGmwmdpECp+fWnpGQcpZ+sa3i9RYVu8
Jdw9mgMumWmH5+lUiOfLSDclcTCYl/+ScpaKLw2PXyzL4GD5DH3lMGcW20SW
SjdlcrDK6e3nvNRZ6K/Ieikcy8EeZd0Iy8ZxTG3IGuS84YCzR9teQmIcynUd
Yl/COOi+p51i7T4Gklz7Pc9HHCwt1QkG1VOQoNLTJuTFgbSZXDF1GwW8TzJk
wu05COmd3rrKcxRrp+WERYn17bgrFH20bQQtEenXEuU5uBGufal7/whW+258
VJ7NAuUjX+30t3nE9JbmSFxi4evQK+MVrHkk0KskAkVZeGoXJVUnTccpyxN8
Ys1MHJ4RNBQ+R0c85bYafzATzne6+iqD6VBUdNLx1mTCT+JWVW0ZHZ3t1tLR
vEyMxiYLMBeI+sIm1X9r/kC4/UqziiIDD988+3LCmQH/DxdeVcT8gX7T2/b9
CgzEsWhyU71/4O2U1qzIpEM+cP2R3q1M7DsT1edZQ0cOHzvBwZaJHvFtyqIR
dHBNv+hxTGciJXLDtv1X6NCXdu38RGPiVatuaZcqHU2ajXKSaix4syyk5TbQ
8eGOOPyfsDAzWnUmyJCNzTUbTAQPjcDI7nI2/TAbN618PRK7RjDbYPHcbjsb
g57RjAD/UdQHK37uWc3GznZFYfXdFLgF5zy8zMOGi+x4m28bBUXPEudW/mHh
w+pzt7/5jkHA+0Tw9zkW7GK7QnplxpF3qNmcTGPBNDHooELHOB6oSAZ94WIj
aXsJf3zWLCb2S6r08rJRlFa6jcxDRZQvg3v1Sja++pZy4syokFq/+PqSKBtH
y/wahd5TIb+CpvV1FxvJa3TmOnhoaPu8nXrqKBvzBpMn6s/RUGEas7KKWN9u
f3Pe3HQaeHOkcpSc2OD2OC5py6KBJjB9vkCaDeg48xuG9+FS/KOQ6iUWvtde
/1l0qRe7gvnOyH9n4eBY/dIB5R5w+A/biSWxEFjg72Yh1o0AhmVxmCsLSpry
p6f/duF5aaZKhSoLV95N/wqhdWJZ4sOySh4WjCaOjjbPdKBvPmdZYS0T57ii
rc8ttkN0i0eh7qUFbJRynKkLLEPROSHDi1IL6EM6l0pHESYlH3mnDDEQ9E1f
64BZAYzDoiTOxzCgV9gZlCf8CYYdhz9EmBI1PZBawSRhR134+hAhBgJ2Ve/V
O5YFoWrbEOsKOspNxBx301NgZXDouaYHHa1COa+VdrzDDXXlLVYVI5Ds2mbQ
psuB1eul8PHLoxjbGOoacpmDjw6aLoVCFHTcLnQ85cOBxxzpl0seBb/69M8t
PuVAw9l+e4b1GN4nxpNfR3GQIb9Vm2vlOEx+d4dvJjgwqzz6e1XBOOQUag76
pxN96bRV0dluAvYyUldKCC5w731MFpifxbW7njXcbzlojXaQPaBDhav9QKd4
DAcDYlFWovFUqD2W8xV5ycFxA7pPKJ2KCUro0FgIB+sFMybsdGhQVJl6m+TN
Ac3j2DX7OBomzm6qMnbgoPTyCU0rKg37012K2AYcvGW3mkpqzOHjw9XnSYoc
3HxhGiK4agjTQvKc6UwWgjRcqUF3BhE27btoZ83C2IVVXE5fBrBjrVN6/3oW
zAICJ+VXDWCIe0Iu+CsTRQq+RadP9iNHqNE69CETPDemI6Su9YFcF5S6SYOJ
h6s5bqce9GL4QNiCEQ8TN8LkOw9H9KD2Z1eGZfUfuL2z/ys/0oAp5clFK4ID
Ns8CNVp+1uHFsr+ltgQHjNeJqRv31ICryP3ePYIDX5yXn57Lq4JB4a4LfQQH
bD/78C74VWCneJpLGMGBSneVR+YOZaCItTDKCQ4ca5/Xp5AKMVrsKBR4jA4Z
+b8k095PiPiz7xOV4ACv144Bt3w6LIqnjCv3sHFro3/eOl4GPEIv1qZyE329
5HmK9A8DeSvPM352EFx8xbTZ8oqBlQFj9e9SWHAVrpHe38dAO33TsWl3FvrJ
LeKFEguoNvA1nTzOgopEn1qkzQIs23RFCvhYUI2S2psUt4BD0Y91btcz8eTi
+ygqg4mq0tf3Z6wXUCkd83yZAguJ7ksT1ZILeP0o/NXSVRZEpvqGOwYYoGQk
BBfHsRB2jX77TBQDyt1b929tZUH9nrWa9lkGnMyltfiJ/p3TDjjJXsGAz47Z
VHMZNjz2Sv98TvD49eKAGp8BG8/pnd0KrnTkt62yoavPYZ+jhUHgWTbUUvYm
kaZpcJD+va+R4Mi6suX5WtE0eNVXKK3eycYhL6PFX6dpuGS7T9tiLRt6xZ6W
LVQq4qJ7Bkr42BC7sFlnZwwVi0YJgkdZLNzqOOK59TQVW1flO3fSWUhT3dz+
e4bgnOgF5ch5Frr/heUR8wn8IPN2GxMcVMkKejD1fhy9PTF1RwkObvskIbGF
dxzCebpSmoJsXDp1dVTWbAz2F6ZKnTewkdvyV/Deewo2Lvt3KYf4v4U/PcsD
+Cmw/XWpl1uZDZuNbWef2oxi2yvB0fPEumMmPxwUKB1B1OfrWknX2Jh64hPn
0TkP5QftjZlbPsJvftjJYWke02E94BopQKHQ5WzmHjpub7gyKRdSguFnh8LX
X6Bjg2PdquMPy2EVt1L1zRM6SPq2VzblVUK/q7T4GsEb/bBx8R8t1eim/jhy
lTi3nvxGe806asETXzjrdpgBl87QQ2eq61HvRT82FP0Hy+2COcGF3dipZpnS
1vMHrzYr39mX3IN59x8+D7YwMZUf6nAzqBdPeVo6222YUCndF9l0rg+hZIVT
r1OJ+ga335fN/Shu6hh+N8tE/9gKD+q3fnxr5Xf+SvCYHmAt1OkzgIBTh6+M
BxPnI8Tp9HrRQTx4vOujA5uG8pbcG2Fm0eTvFzk7mEROaMvQ1hr+iCe/TJVu
dSRyJPgJhTs8MpHMR1VWoHDTUO/KR7/dlExWOaxukpBFhbreydvZd1PJdMst
uS3nqGg9V3JD6X0aeZdK7OZELiocLall5mbp5NH/nF7pZ8xC/XdLWrFfOvnX
T++nc4T3HBSC5viPVHLHVtNBG8J7Jk41plwLTCULTzWU6BDeI/lXeaXO2xSy
z6CPgBjhPSJuboFCR5LJxnVsCVnCe9L0JC4+0k0kc91qiPt1axQkL/OI/v54
cordZ6mSFiLHa1ofLw1Ek5eFLon8lR3B0BO/q0Z8L8nylJuLpQdHEBBVpWCR
k4AIzXLRNx0jmLhoIWxHSYJIpnNZse8oZMoMOMnRqTi08QyzchcFjkk3ZkNa
01HzTCVfp5WCIf8s1/L7mdBXu8/87TMGlxDpa9ofsjD7IGC3FpH7As/Ni26Y
Z8Nde1h+tn0cQxIqSc0B2dgtIPnz6/tZtKqlg0nJhMJ0LkSXURHspfTO72Em
RB8tGm43p6JcPpHf8l0GrJ9JyBaTqCAl9flLqKTDfZO1xIdlxH7dDTGN0k9F
bOXiYOsFGgwza/6dHUqCji533EQWDZEvv6mH0RIgfnhAum6JBkmqkY2nYCzW
m8fr2j7rg2FqyPX2nhRwLu5UWDTvxWxAgN1AdyaiWs/+E6nQA1JT84xbCgm7
dm7Moa0hcl8yw90s8iOijvio5TK70Dqyznq4PB8aRz2NfX93gmutBPPAtiLc
ebvGcHayA1uy4/U13pfCQYOlmzrXDpcVIrL3CsphcdjlY4RPGfQr/9J/UDtQ
LnZUo7apCE/r+g7kEPMkZV9b52NUgG9k3ob7813wuhboXiXwCUqfNuyuXNaN
WW2nPS/oJKiM7w1olOyBcvvdl06HssDHG4sFzV44fkg3qv+dgvZaOEa69qE+
0yLeZOs7xHo0MdnJ/ZjPzhcQEv+IQTOdNTbCQ9B7n3Lj02ABQjpfjgz4DqKn
a4Jb8UEJVA+tnfdrHkBH9fXjlMByBFttDudbO4Dp2ORtV3Ir8fG3utkPrX5E
RmUz2r5WQ1rKnxrq0ge5ZuKG0lYLm2LLvpCnvTB5mMzrW16PmWE/8YsxPWAu
UiW58rqRqy3kcVPoCxLK/5a4x/fgiJoxT9f6esiYzwU/vNuLjH/4muWW12JO
9rfLJ6M+UOyH1nwYrYLJvBvvPdF+9C7lWce9r4Cg0LZiz6Z+BIcmVjz7Wgb7
1kiNfbcHYHh3o8QK8SJsdK0sVBEZhHT9cPtt7TyQAufebgqKJq+PLfoMwoPi
7d8aFHDiyeKkQq5KwoNIg9nPhgoTyXvkxk4+JzxIRq2E/XM+mexstKJEi/Ag
G+8tgfeyU8m7kzQfBREeFGkkqPHuB9H3Gke6hwWJPr4nofQyPJ184mmmKjOf
qLlyI6jkdPL+xfQGB8KDzJxnvTaFEN9fzXLwJDxIwEmcp+ZgGjn6YNnnZMKD
vG5qcc+fTSW7uio8iyQ8KF7ruOKeuWTy2rQX3FsZVAypfPRVWp1Ezj5S5s6l
SwNJJdn+SHoC+ZfgTLzIWxpcCsx+Kj6IJatWuVZtptEQv/x+4b6iV2TB/6RI
s4QHHRyxLhilJyM7Tuq2agFxjxg4UHGZmQGB0k7vWsIDvDbsTnl1lASvN+MN
evoMkHz02f4HPqI4/brGO8IDZHKvl8hezMdUXPC6GMIDBGreGZcUFaJvpLlR
hMjvRTXHnoP6pSjyrfD5j/CArE2NKUoh5eis8Kn/SnjAyubRdOXxDpDcrno3
0pmIMOtYPjnSCcEUk7y6gyxEv3wSkvarC9HUQWqaIwvWjuH8/3H+gx5tv7h+
LAvrNLp3d27qgeeLTJ7IZhZM7tfXMdV6kR8e5HuVzcLhyW7TSKc+5M9MXkkl
PJ9lfP44O6Efy3Olycr/sPE513LDnsZ4nA5bsW7XyTkEmPK+/M6fhGoBwZmR
GRqet675zq5MwbGGuSbfGBoE5CRP8i+lQVzZds12bRrUrwfUx+ZnoDS0OpNn
jtivkzeCy35l4jgaeUxiqah3C/T+EJMFkviLNi0toqZu6FnVkIWi0ReCa6iz
ULYyKVMKy8T5GY/V0RYTmLDw1xo+mglnGyNnNdI4zGwyT4tYZqBiwLHajG8c
AcoJd06x0+DnmtFrcGEM5bJilUYbU6FlbLQQnEPBc9kVGWdzk9CYORPjuJyC
SD2RovzGBMiqTp43vjQKm59nNC9/jUHommD/NMID/gdX1Ihs
        "], {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          ArrowBox[
           BezierCurveBox[{1, {1.9227678787253564`, 0.8914503402775162}, 2}], 
           0.021007723902814135`], ArrowBox[{1, 3}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{1, {1.45590896300682, 1.4449019376792422`}, 4}], 
           0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{2, {1.6782692428310069`, 0.8942693557145758}, 1}], 
           0.021007723902814135`], ArrowBox[{2, 4}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{
            2, {1.6166026335998962`, 0.17331225709107295`}, 5}], 
           0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{3, {0.9115339288526272, 1.9229783356911028`}, 4}], 
           0.021007723902814135`], ArrowBox[{3, 7}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{3, {0.3580547792358946, 1.4557698155955483`}, 8}], 
           0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{4, {1.6310541140100772`, 1.6167903930947256`}, 1}],
            0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{4, {0.9091795247525617, 1.6784207227183303`}, 3}], 
           0.021007723902814135`], ArrowBox[{4, 8}, 0.021007723902814135`], 
          ArrowBox[{5, 1}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{5, {1.4452068704785344`, 0.34783522629544}, 2}], 
           0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{
            5, {0.8918725965372337, -0.11856260841358919`}, 6}], 
           0.021007723902814135`], ArrowBox[{6, 2}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{6, {0.8944496967636572, 0.12639856230752308`}, 5}],
            0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{6, {0.17310060778017125`, 0.187564747153793}, 7}], 
           0.021007723902814135`], ArrowBox[{7, 5}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{
            7, {0.34764498050454984`, 0.35882833441351647`}, 6}], 
           0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{7, {-0.11935881088943236`, 0.911469246430227}, 8}],
            0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{8, {0.1864288019404319, 1.6309405902266232`}, 3}], 
           0.021007723902814135`], ArrowBox[{8, 6}, 0.021007723902814135`], 
          ArrowBox[
           BezierCurveBox[{8, {0.12528769298334627`, 0.909519346827251}, 7}], 
           0.021007723902814135`]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.021007723902814135], DiskBox[2, 0.021007723902814135], 
          DiskBox[3, 0.021007723902814135], DiskBox[4, 0.021007723902814135], 
          DiskBox[5, 0.021007723902814135], DiskBox[6, 0.021007723902814135], 
          DiskBox[7, 0.021007723902814135], 
          DiskBox[8, 0.021007723902814135]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{146.6328125, Automatic}]],
  CellChangeTimes->{3.763445937612594*^9},ExpressionUUID->
  "aef9c3ea-7b4f-405c-b4da-254007b762d8"]
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689253969097835*^9, 3.6892539691778398`*^9}, {3.689254121536555*^9, 
   3.689254159192708*^9}, {3.6892541912885437`*^9, 3.689254261471558*^9}, {
   3.6892547852525177`*^9, 3.6892547989082975`*^9}, {3.689254847252063*^9, 
   3.689254849092168*^9}, {3.6892549791866093`*^9, 3.689255000578832*^9}, {
   3.7625064207061253`*^9, 3.762506444448762*^9}, {3.762506482140858*^9, 
   3.762506507853328*^9}, {3.762524726977716*^9, 3.7625247288901587`*^9}, {
   3.762525537814044*^9, 3.7625255616411552`*^9}, 3.762525621255343*^9, {
   3.762526221423525*^9, 3.762526224100928*^9}, {3.762695846596596*^9, 
   3.762695888919137*^9}, 3.763283589933532*^9, {3.764174925313177*^9, 
   3.76417493223018*^9}, {3.764235695033324*^9, 3.764235723672027*^9}, {
   3.764236305911143*^9, 3.7642363797982407`*^9}, {3.784919894991661*^9, 
   3.7849199124994397`*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"91150ba9-3d1c-4378-aee3-7e7140a3d52a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CALabelledInteractionGraph", "[", 
     RowBox[{
      RowBox[{"r_", ":", "1"}], ",", "configLen_Integer", ",", "UDS_List"}], 
     "]"}], ":=", 
    RowBox[{"LabelledInteractionGraph", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"First", "[", "x", "]"}], "\[DirectedEdge]", "#"}], 
             ")"}], "&"}], "/@", 
           RowBox[{"Drop", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"RotateLeft", "[", 
               RowBox[{"#", ",", 
                RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "configLen"}], "]"}], ",", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"2", "*", "r"}], "+", "1"}], "]"}], ",", "1", ",", 
               "1"}], "]"}]}]}], "}"}]}], "]"}], "]"}], "]"}], ",", "UDS"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CALabIntGraph", "[", 
     RowBox[{
      RowBox[{"r_", ":", "1"}], ",", "configLen_Integer", ",", "UDS_List"}], 
     "]"}], ":=", 
    RowBox[{"CALabelledInteractionGraph", "[", 
     RowBox[{"r", ",", "configLen", ",", "UDS"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CAInteractionGraph", "[", 
     RowBox[{
      RowBox[{"r_", ":", "1"}], ",", "configLen_Integer"}], "]"}], ":=", 
    RowBox[{"Graph", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"First", "[", "x", "]"}], "\[DirectedEdge]", "#"}], ")"}],
           "&"}], "/@", 
         RowBox[{"Drop", "[", 
          RowBox[{"x", ",", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", "configLen"}], "]"}], ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"2", "*", "r"}], "+", "1"}], "]"}], ",", "1", ",", 
             "1"}], "]"}]}]}], "}"}]}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAIntGraph", "[", 
    RowBox[{
     RowBox[{"r_", ":", "1"}], ",", "configLen_Integer"}], "]"}], ":=", 
   RowBox[{"CAInteractionGraph", "[", 
    RowBox[{"r", ",", "configLen"}], "]"}]}], ";"}]}], "Input",
 CellFrame->1,
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQzRD94fOGmteOYtfi/4FokyUSzBuBdF7BLAEQHfsw
Tx5Ey3yZrQCiI699VwfRftrWGmB1r+aYgehihm/uIPpPWIUPiJZoyA0E0XbJ
goUg2qfSogREG1TrrwfRMRPjNoHod5mbP4Hou0w7foHoBbd3M24C0i9E/4Bp
3f733CD6oXIJH4jWfD/nym4g7b0k7SqItlA915Gz+bVjlJhTP4hWqpkdlsnx
xnH1ub5IEH1oq2cciG66BqHfdC5cWQSkuazeg+kd3xbvfcL5xnHD09ADIPqL
4r4LINqgBUKb3/fnmcH9xvHY30YwPfEB29StQNqpJRFMa/xt/QKiXRw8foBo
mc1df0D0yixXhm1AGgAtn7bC
  "],
 CellLabel->
  "In[283]:=",ExpressionUUID->"b13f1bae-f15e-420f-9175-cfadd6f8a254"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Generation of the weight adjacency matrix of a labelled interaction digraph\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, {
   3.76423649363976*^9, 3.764236585089144*^9}, {3.764437718261294*^9, 
   3.764437745065146*^9}, 3.764501533269506*^9, {3.784920097313512*^9, 
   3.7849201344317007`*^9}},ExpressionUUID->"96dac0d5-e9a7-4e49-a25a-\
43b07253a9b3"],

Cell[TextData[{
 "The native function WeightAdjacencyMatrix[labGraph] outputs the matrix \
according to the sequence of vertices given by VertexList[labGraph], which \
relies on how the graph has been originally constructed. For instance, in the \
example below, VertexList[labGraph] yields {1, 2, 5, 3, 4}, which means that \
the 3rd, 4th and 5th rows of the matrix correspond, respectively, to vertices \
5, 3 and 4. But this is awkward, as it would be more direct that rows 3, 4 \
and 5 would correspond, respectively, to vertices 3, 4 and 5. \
WeightAdjacencyMatrixLabelledGraph makes this correction.\n\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"WeightAdjacencyMatrixLabelledGraph", "[", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 5, 3, 
         4}, {{{1, 2}, {1, 3}, {2, 1}, {2, 4}, {4, 2}, {4, 5}, {5, 4}, {5, 
          3}, {3, 1}, {3, 5}}, Null}, {
         EdgeLabels -> {
           DirectedEdge[3, 4] -> "-", DirectedEdge[4, 5] -> "+", 
            DirectedEdge[2, 1] -> "+", DirectedEdge[2, 3] -> "-", 
            DirectedEdge[4, 3] -> "+", DirectedEdge[5, 1] -> "+", 
            DirectedEdge[5, 4] -> "+", DirectedEdge[1, 5] -> "-", 
            DirectedEdge[1, 2] -> "+", DirectedEdge[3, 2] -> "+"}, 
          EdgeLabelStyle -> {Larger}, 
          EdgeStyle -> {
           DirectedEdge[3, 4] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[1, 5] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[2, 1] -> RGBColor[1, 0, 0], DirectedEdge[4, 5] -> 
            RGBColor[1, 0, 0], DirectedEdge[1, 2] -> RGBColor[1, 0, 0], 
            DirectedEdge[2, 3] -> RGBColor[0., 0.19999999999999996`, 0.], 
            DirectedEdge[4, 3] -> RGBColor[1, 0, 0], DirectedEdge[5, 1] -> 
            RGBColor[1, 0, 0], DirectedEdge[3, 2] -> RGBColor[1, 0, 0], 
            DirectedEdge[5, 4] -> RGBColor[1, 0, 0]}, 
          VertexLabels -> {"Name"}, VertexLabelStyle -> {Larger}, 
          EdgeWeight -> {
           "+", "-", "+", "-", "+", "-", "+", "+", "+", "+"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.616010212222879, 1.0104373313929793`}, {
               1.1081773982763774`, 1.1478070533324807`}, {0.7810167339593377,
                1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.1600587388153611, 1.2266644613127258}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{1.616010212222879, 1.0104373313929793`}, {
               1.6421653531671345`, 0.4844027465975812}, {1.350980799683489, 
               0.045531431049118276`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.5510389189772544, 0.5094323223432915}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0.7810167339593377, 1.5597906781893678`}, {
               1.288849547905843, 1.4224209562498615`}, {1.616010212222879, 
               1.0104373313929793`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.2369682073668555, 1.3435635482696218}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{0.7810167339593377, 1.5597906781893678`}, {
               0.4931346826788376, 1.119313213635799}, {0., 
               0.9356976996718079}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.43419487547589813, 1.1930730175534343}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.350980799683489, 0.045531431049118276`}, {
               1.3248256587392409`, 0.5715660158445294}, {1.616010212222879, 
               1.0104373313929793`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {1.4159520929291136, 0.5465364400988061}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{1.350980799683489, 0.045531431049118276`}, {
               0.8586827948072172, -0.14160439693093846`}, {
               0.3514103448468824, 0.}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.8543827724386239, -0.047204216314003344}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0., 0.9356976996718079}, {0.2878820512805011, 
               1.376175164225374}, {0.7810167339593377, 
               1.5597906781893678`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.3468218584834396, 1.3024153603077417}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0., 0.19999999999999996`, 0.], 
             ArrowBox[
              BezierCurveBox[{{0., 0.9356976996718079}, {0.3295720012949964, 
               0.5256350295104049}, {0.3514103448468824, 0.}}], 
              0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"-\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.24120401140046777, 0.49244757397518585}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0.3514103448468824, 0.}, {0.8437083497231553, 
               0.18713582798005762`}, {1.350980799683489, 
               0.045531431049118276`}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.8480083720917475, 0.09273564736312163}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[1, 0, 0], 
             ArrowBox[
              BezierCurveBox[{{0.3514103448468824, 0.}, {
               0.021838343551884756`, 0.41006267016140496`}, {0., 
               0.9356976996718079}}], 0.019417689575323693`]}, InsetBox[
             StyleBox["\<\"+\"\>",
              StripOnInput->False,
              FontSize->Larger], {0.11020633344641466, 0.44325012569662214}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {
            DiskBox[{1.616010212222879, 1.0104373313929793`}, 
             0.019417689575323693], InsetBox[
             StyleBox["1",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.6354279017982027, 1.029855020968303}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.7810167339593377, 1.5597906781893678`}, 
             0.019417689575323693], InsetBox[
             StyleBox["2",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.8004344235346614, 1.5792083677646915}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.350980799683489, 0.045531431049118276`}, 
             0.019417689575323693], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {1.3703984892588128, 0.06494912062444197}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 0.9356976996718079}, 0.019417689575323693], InsetBox[
             StyleBox["3",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.019417689575323693, 0.9551153892471316}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.3514103448468824, 0.}, 0.019417689575323693], InsetBox[
             StyleBox["4",
              StripOnInput->False,
              FontSize->Larger], 
             Offset[{2, 2}, {0.3708280344222061, 0.019417689575323693}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->{156.06640625, Automatic}], "]"}], "//", "MatrixForm"}]], 
  "Input",
  CellChangeTimes->{{3.784831899997294*^9, 3.78483191325775*^9}, 
    3.784920208583103*^9},ExpressionUUID->
  "ffc39fbd-2628-4097-9687-e475c72ea6df"],
 "\n",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "\<\"+\"\>", "0", "0", "\<\"-\"\>"},
      {"\<\"+\"\>", "0", "\<\"-\"\>", "0", "0"},
      {"0", "\<\"+\"\>", "0", "\<\"-\"\>", "0"},
      {"0", "0", "\<\"+\"\>", "0", "\<\"+\"\>"},
      {"\<\"+\"\>", "0", "0", "\<\"+\"\>", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]], "Output",
  CellChangeTimes->{{3.784831901517105*^9, 3.78483191375871*^9}, 
    3.784832075648706*^9},ExpressionUUID->
  "2466c8ac-03af-4e4e-8bcb-7f98236b1edd"]
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689254052473604*^9, 3.689254068057495*^9}, 3.762506384702429*^9, {
   3.762506420598385*^9, 3.7625065077809777`*^9}, 3.762506540232657*^9, 
   3.762524205346532*^9, {3.762524430337446*^9, 3.7625244501028976`*^9}, {
   3.762524523937942*^9, 3.7625246114631453`*^9}, 3.762525629490725*^9, {
   3.762526178787713*^9, 3.762526188741818*^9}, {3.763283187208085*^9, 
   3.7632831987064877`*^9}, {3.763374285666535*^9, 3.763374286105685*^9}, {
   3.763374318224378*^9, 3.763374387543552*^9}, {3.764174875023448*^9, 
   3.764174890474921*^9}, {3.764235618891621*^9, 3.764235653787075*^9}, {
   3.764236134153439*^9, 3.764236170638291*^9}, {3.76423643539896*^9, 
   3.764236456208552*^9}, {3.784919882889594*^9, 3.784919885496849*^9}, {
   3.7849202265806713`*^9, 3.78492088809306*^9}, {3.78492092476387*^9, 
   3.784920990143285*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"be091cb6-9ada-42a0-b5e8-6107e72b5736"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WeightAdjacencyMatrixLabelledGraph", "[", "labG_Graph", "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "orderedVertices", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"orderedVertices", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"VertexList", "[", "labG", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Normal", "@", 
         RowBox[{"WeightedAdjacencyMatrix", "[", "labG", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "\[Rule]", "#2"}], ")"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Outer", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"List", "[", 
                   RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                 "orderedVertices", ",", "orderedVertices"}], "]"}], ",", 
               "1"}], "]"}], "/.", 
             RowBox[{"MapThread", "[", 
              RowBox[{"Rule", ",", 
               RowBox[{"{", 
                RowBox[{"orderedVertices", ",", 
                 RowBox[{"VertexList", "[", "labG", "]"}]}], "}"}]}], "]"}]}],
             ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{
                 RowBox[{"Normal", "@", 
                  RowBox[{"WeightedAdjacencyMatrix", "[", "labG", "]"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "}"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Outer", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"List", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                  "orderedVertices", ",", "orderedVertices"}], "]"}], ",", 
                "1"}], "]"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellFrame->1,
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.689252767511109*^9, 3.689252850994883*^9}, {
   3.6892528887700443`*^9, 3.689252996826224*^9}, {3.68925311546501*^9, 
   3.689253124873548*^9}, {3.689253183744915*^9, 3.689253185849036*^9}, {
   3.689253300903617*^9, 3.689253439687555*^9}, {3.689253475760618*^9, 
   3.6892535154218864`*^9}, {3.689253768543365*^9, 3.6892537937648067`*^9}, {
   3.689254021125811*^9, 3.689254024340995*^9}, {3.689255331788777*^9, 
   3.689255389460075*^9}, {3.689256671307393*^9, 3.689256754971178*^9}, 
   3.689256787595044*^9, {3.689257115120777*^9, 3.689257117663923*^9}, 
   3.68927501860069*^9, {3.7625064206251783`*^9, 3.762506444290416*^9}, {
   3.762506482060587*^9, 3.76250648206988*^9}, {3.763283498802789*^9, 
   3.763283500311914*^9}, {3.763374256107733*^9, 3.763374276660009*^9}, {
   3.764174914707919*^9, 3.764174916557774*^9}, 3.764235428081939*^9, {
   3.764236047529856*^9, 3.764236077216699*^9}, 3.784920175779584*^9},
 CellLabel->
  "In[287]:=",ExpressionUUID->"7e3cc3ee-cc7d-44c3-aaf8-2f5c5e1ed403"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Time evolution of an arbitrary Boolean network with asynchronous block \
sequential update schedules\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, {
   3.76423649363976*^9, 3.764236585089144*^9}, {3.764437718261294*^9, 
   3.764437745065146*^9}, 3.764501533269506*^9, {3.803806590242039*^9, 
   3.803806636059154*^9}},ExpressionUUID->"aba3a76f-9246-4c5b-9064-\
d6aebacae46c"],

Cell[TextData[{
 StyleBox["AsynchronousBN",
  FontSlant->"Italic"],
 " yields the time evolution of an arbitrary Boolean network, defined as a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " graph object, via the specified asynchronous block sequential update. \n\n\
These are arguments of ",
 StyleBox["AsynchronousBN",
  FontSlant->"Italic"],
 ":",
 StyleBox["\n\n-- rulefunction:",
  FontSlant->"Italic"],
 " Any function f[",
 StyleBox["self",
  FontSlant->"Italic"],
 ", ",
 StyleBox["slist",
  FontSlant->"Italic"],
 "] which receives the state of the vertex (",
 StyleBox["self",
  FontSlant->"Italic"],
 ") as well as those of the neighbouring vertices (",
 StyleBox["slist",
  FontSlant->"Italic"],
 "), and outputs a state. Notice that there is no \
\[OpenCurlyDoubleQuote]positional structure\[CloseCurlyDoubleQuote] in ",
 StyleBox["slist.",
  FontSlant->"Italic"],
 "\n-- ",
 StyleBox["g",
  FontSlant->"Italic"],
 ": A directed graph that must be given in the form Graph[vertexlist, \
edgelist, EdgeWeight \[Rule] edgeweights]. The ",
 StyleBox["vertexlist",
  FontSlant->"Italic"],
 " is used as a reference to the names of the vertices so as not to depend on \
their ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ordering. Also, ",
 StyleBox["edgeweights",
  FontSlant->"Italic"],
 " is the list of states of each vertex, given according to the order they \
appear in ",
 StyleBox["vertexlist",
  FontSlant->"Italic"],
 ". The suggestion is to use vertexlist = Range[1, L].\n-- tsteps: number of \
iterations.\n-- ",
 StyleBox["UDS",
  FontSlant->"Italic"],
 ": Block sequential update schedule given as usual. For example, {{1,3}, \
{2,4,5}} means that vertices 1 and 3 are updated first, followed by the \
update of vertices 2, 4 and 5.\n-- ",
 StyleBox["includeself",
  FontSlant->"Italic"],
 ": Whether or not to include the state of the vertex itself in ",
 StyleBox["slist",
  FontSlant->"Italic"],
 " described above.\n-- ",
 StyleBox["returngraphs",
  FontSlant->"Italic"],
 ": If set to True, it will return the time evolution of the network as a \
list of graph objects. Otherwise, it returns only the states along the time \
evolution.\n-- ",
 StyleBox["colours",
  FontSlant->"Italic"],
 ": Whether or not to colour the vertices according to ",
 StyleBox["colourfunction",
  FontSlant->"Italic"],
 " in the output.\n-- ",
 StyleBox["colourfunction",
  FontSlant->"Italic"],
 ": How to color the vertices according to their states. The default function \
comprises binary states (White for 0 and Black for 1).\n\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \nThe same functionality could have been obtained by an implementation \
based on ",
 StyleBox["CASpatialComposition",
  FontSlant->"Italic"],
 " (which relies on ",
 StyleBox["CellularAutomaton",
  FontSlant->"Italic"],
 "); however, it would not operate on a graph object, as ",
 StyleBox["AsynchronousBN",
  FontSlant->"Italic"],
 " does.\n\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ": \nGeneration of a random binary IC and a graph with the same structure as \
an one-dimensional grid.\n\nrand = RandomInteger[1, 11];\nradius1examplegraph \
= Graph[Range[1,11], EdgeList[CAInteractionGraph[1,11]], \
VertexWeight\[Rule]rand]\n\nThe time evolution of the Boolean network and of \
the equivalent CA:\n\nAsynchronousBN[MajorityRuleBN, radius1examplegraph, 5, \
{{1,2,3}, {4,5,6}, {7,8,9}, {10,11}}, True, True, True, (If[#\[Equal]1, \
Black, White]&)]\nAsynchronousCA[{232,2,1}, rand, 5, {{1,2,3}, {4,5,6}, \
{7,8,9}, {10,11}}] // ArrayPlot\n\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[1], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[0], 8 -> GrayLevel[0], 3 -> GrayLevel[1], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[1]}, 
          VertexWeight -> {0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[1], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[0], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[1], 8 -> GrayLevel[0], 3 -> GrayLevel[0], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[0]}, 
          VertexWeight -> {1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[0], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[0], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[0], 8 -> GrayLevel[0], 3 -> GrayLevel[0], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[0]}, 
          VertexWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[0], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[0], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[0], 8 -> GrayLevel[0], 3 -> GrayLevel[0], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[0]}, 
          VertexWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[0], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[0], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[0], 8 -> GrayLevel[0], 3 -> GrayLevel[0], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[0]}, 
          VertexWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[0], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], ",", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11}, {{{2, 3}, {2, 1}, {3, 4}, {3, 2}, {4, 5}, {4, 3}, {5, 6}, {5, 
          4}, {6, 7}, {6, 5}, {7, 8}, {7, 6}, {8, 9}, {8, 7}, {9, 10}, {9, 
          8}, {10, 11}, {10, 9}, {11, 1}, {11, 10}, {1, 2}, {1, 11}}, Null}, {
         VertexStyle -> {
           6 -> GrayLevel[0], 1 -> GrayLevel[0], 9 -> GrayLevel[1], 2 -> 
            GrayLevel[0], 8 -> GrayLevel[0], 3 -> GrayLevel[0], 4 -> 
            GrayLevel[0], 11 -> GrayLevel[0], 10 -> GrayLevel[1], 7 -> 
            GrayLevel[0], 5 -> GrayLevel[0]}, 
          VertexWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1}}]]}, 
       TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1V3k8Vd/XvtflTucqSpJviVREA6VItJYhlUgKDVJJCWUqyVCGCGlAgwaR
FBEyVoSuOco8E2UWmYfMes/7x+/8cz7P2XuvvfZ69lrPOhJnbQ+f56FQKBep
FMr/v//3FH86KHprFwW9Qw+66CU1wXDQfVG4ycB36munG9aMg5Wpert1DYHr
ZV+pHBTkQcMH3dGO1QRWNCl6ThQzUfYCPSPUnYGucgZyZis4GLfX1v6jIgV/
JPC6+4yyUXzcSjD62TCov6tftD2FD1/MfNFWYVWBVOSLwHucOfifH7FKNz+9
suoFzuRzXwq7CqKFpM4rUXJh9OssX3nIMFB2d0pvMb4FmwcWWNWrqUjRcwip
X3sXcpPzTlkdp2IrhVkU3fAArvcN/Bf6gIrZvKqNLvNP4eL8d7P938nxduWz
L3eHQ5D/vmhdGg8m7kgdzol5A4dsir74KfNgdmDSKd+sGIjvKB1rtOPB8JlN
ooOOCSCy2lBMIooHNYPnPU2VSiGn+ZW+UgAfKqQ4h2iXl4F/jGy3YR4fvuG4
rejVqoDBPCuW7F8+/FJ9euzazkr41OoX8UyKjnHTG3fn7q4Cg6CpS95H6Zj8
+vyeTUbVcPhaMav8Fh3FLRqeLnWvgQRvB4FTyXT8gsE2BWm10GkkvHp5Cx0p
ws6/j598B7VCzZVhvxbAo9tsIcQ4EXy+VvIbXluAfQ9uCLUppsC+GHObNM4C
RDvrRWnnfIDiLYuXMsPnIc4haOuxv59gTl3IyFt+HsJLHstk1KZDi5hzlE3O
HDxin047eioDKk6qmrIOzYFcUbz5noBMqBJa8u5JyyyM3jK/2u9SAIWViue6
b02A3xrTJ/I9BbB8OXc+dskEzBid7eWVKoSU49YSA2Hj0Neq8AqVCyHWeu3R
QZlxaC95btwoXggUyXCd8Y9jkHuLkPzZVAD7HEriNDTGIIxdYu5kUQA3Tq+a
FK8YhcJA8/Y/xfng5ko5WmEyCo9dGVRHehPcPflTZiSUjpzZy1nSFY0wFbyi
7vg5OjquKhvI92qE3aeHRKRk6ahU+rnkmkQj6OkIVrqM8qGUGuO+a0wDbOA+
uuv4mQ/fCyupLF/ZAFY/hBx3efHhpYtO98Oc64HffLFanw4fyv1kfrLPrYMI
GT/h18v5sPDNy8uqMkUwfWlXx53NPFjnK3nc4GEhyIUnHbSZoWKuxKuckpp8
KLl1WfbZVyref9jCnzCUCzRLgwcywVRM3KvhJNqVDeZpnV/BnIo6Pa+r/S5l
gUXVUtkJRSoG1jbcGipKA6LAYq05QUXxK22bpdtToG60cFl8KwUbHk2t2ir6
CxqmCp0LdzAx0i4gXV68FSxPN28JMGOizP7S1xkZrRDXtkD3uc/EKDmNjydO
t4HBzNT9oE9MfHD9rMB7djt4a7m4PPvJRCWbZrVDWe0gxHGN96Gx8O/dJJ96
xw4Q+tenrbGehdBQwVe3oxPebnyd81mLhbG+mgf55wYh0l3/5zYqgYLWj08I
5g6BWKraxOHVBApRJH9UaQ2D3/qqOsYuAnVKRfulE4bhftzl/9QNCDx1PmZF
6YoR2L1Dv3rUisAPUm3g4TMCxpXyARx3Ah/+ruThmRiBzsmzFl6BBDaz3owL
nB8FQYdihu5LAmvzdx4KZ47BzRmWVze5X5r88MxS7iiMPBwvWTXGRsc9lXx6
9qPwXrBqYn0RG9P1g6+7rx4F+nS99X8v2Zgb61NeWzwCdXFGN5c6sXE4ufij
t90IaPUY6q0/wsZAydNCOUtJPN6VZCnHxv4b5TU5KcOQUrhp1+hiNl7SkTXV
ieiGD1fcxZwNmci80GSwr7kLVCCAcUKRiSPVG6ZTBLqgqmRhXeR/TPTYqVzP
wE4o0TrVZsXDxJOsVde5Vh2wMst9w+c/DHzvHb/leFA7/JN4aR1OzhzjKYkx
TG0Dx1nrRxsKGXgmW6pQsaYV9rszJk5/YqDsINfoRvUEfJowGaaLczBvl8S7
b2p/oeqJ7n/V8hyMV19tF5/0F5Tftm4fQw5eOv3LsmPNJOw4cePAKV0Ovl2e
FLDh8SScq2qm8h/loBDri5IKcwqKH5wPnTbh4FL1FRr1rlMgYBfIK36Wg+MH
hFU+Dk2B45Rh7g0zDlJ9DW15jf7Bq8gnP0VJ7AGLM9uL/0FaYKdkgikHT6vR
2rLEKHjmhFCRC2nvgk6r755jFLTNtt/nYcRB0fgodfMgCj62ySrM0+Ggvc/B
3QvFFMz5lEE/QPq7iPN16g+ViiPl36xWkeehXCo1WLSTzKs7XkMaqzlobljN
P6dERfbCt+ctvgQ+f7/mXC05f8j4h62gI6lPsZLUTtKer84+wxFzAgtfaPDu
J/fzfxYLPicIjMk+MbKO9MdEQud2/SECR/fWvHhB+jt1Jm+gbz+BXUa6W8LI
8yR7PfXJ30Mgr+6hHVzDf3BgtqrIXJPASUFBmj0ZD/GDQXHFJHY6fvTjAzJe
TDPNC9u1CFQWPpM4zZgC02dCeZbaBMpQos72PZqEw9s+qZ/TJ7Bg94qBaJKP
jbcu5osbEyh8t3jCieSLomLt/ewCgS0eDR6hJJ8VkqfEv5Lnmcn+XnSM5Pvf
hciQcD8Co7KZPrNDPPgtj2eNQBi5/6bkzHEpGlaKH1LeHkBgzyPrO+tP0zDi
hW1p/A1Sn+t3ado9pqE9U1fF25LA9jTf3KRvNGQXTjvmHybweNMmt+8LNBw2
Cplw3Ulgn6h0WJg8L84U2iemryJQWrOSzW/Gi/tiZ4Tv/2OjlT//mN5SBlpR
XnlbabJwh8foBRUNBi7Wbr7SI8nCqHPrb/nbM9AjIU1WnMrCBuvFrWJhDKwZ
itfY0MxEBdeIpb+KGGiecCdM5AMTs0tpFUkjDKxf523Cd5eJbyO8et1EmHhj
v0sVw5SJ3hUD5ltUmch5FGK/U4GJ+nsqFPeReZO2vU+N9wMD3RrWU/VSGJjU
8GLDrzwGCthf3LrqOgNbT94INq9loPTmUOfqPQwUHHkpFdjLwGW6+rNBAgx0
2jbWr0dhYphsLDg10/FBhL7N0xVM5P+TuDoyho5+W11TTmxnYnkOI2WHEx2V
D47q+Bxh4j3X79/GvtJQZPrAr5hFbMy51W3IeErDKwkCwxu3sFH/VbJSuiUN
ebQVlMb12bj6aXHLWlUavmeB+B9HNub573h3bgkNV2qbFsyGslFRqXYgqJcH
Y6st6Iu/svGQmWFNfi4P8iVeDuKQfdOV7X+MhMJ40PG8/miTGIFiFuXfjC1Y
6KY7JSfcRMeOKBlF8wAW8q3Mpmkl0NGkIUrSKJWFm2w8KBE36aiWHpy0rJ6F
lW9vP9Y0oKNcybKDgZMsJLbf2rF/LR0ffd3xJXkZG/2eKOiUkPr41thc5qI8
G5WNXkr+4fJh+4NZ6RhtNi7kpzfn3eHD7IPWta9CCdx2K3GdQgQPnt5r6mCU
SuBQzK1XXZd4yO/S6g5FBKaXDdoG7OBBo7Bow6FGMg8edWTq/6Oi/d09hlm/
CTz3yFpVl9THwKs8N2rHCRxv0V75+j4VMw4kv5ZbILAuS7vbwZCK7+W2QzEv
ByWd7Rw7/6Pi5teZ3XMuBJ4wvTGr2kJBy3OmLqNHCKx+8EF6EZOsA1u77vFs
ITAWJ2STFahIHJ74p84hkMHoD15sRsWV4GhW9IeNpc7DE+yHVEzTMByLLCXj
vlyt1TefipEJ63wHktgYdqyOaTlJRSunQL+Ep2xs6s3QC5TlwbuZYs0f97Aw
ckMBXXwZHw7kyajybGFhL++wv402H67wMbPtFGXh6lafzHwPPvx7qcPYksXC
96IPbHnS+PCHm9bJkBkmXhFlDtGH+TDz8W0Fr0EmdlbICCRJ0zGI28gv3cVE
2oiM1i9TOoY1GV0OIHX6w3a+j7YhdNxcM2Muu4eDp1ibIm/EL8CsyuXOnwc5
aLp3WEph1wJovRKRrzDk4AyjKXlV0TzIxr+Umz1O1t08YSs3g3l4b7P3ookx
Bzdsqst93joH5aYGi/+S43GtuSc+XZoDrbA7IwXkeg2Bs+Ui07Ng2ZJ6t5y0
X3DwymOazyxMxGyOa2kg8HqLYLSn3ARo2r5Yva6cQDqb0bHzyzhs25qxMTGX
wIun41RouuOwfjZ6m08KgQL+IlniLWOwxql+c+IrAh2vz0XU2IzB8tUZ8Ur3
yPt000rlDM8Y3PbyL5Ml6576N9ls2tNRUHsoqPjkJIE3dTOkFraMggzn1L4v
hWxc6bJS74nxKJi87v7GzmLjCpXjJa2lo7AE0G3FRzZ6uNqqTeIYbNqW7jZI
8nkme6t/cOoYvLMX1LybSOap0RV5F+lxuO3GGz5GjpdF+DwzeTEOS9RLsyTJ
9YpXetbOLZ6AIZ43a0RJ+x8U6k4Jek2A2Q4ZGmcbgQuRijoPG2ZByD4zIF+F
QAdndcEf2nOw7n3ozZ2kjixeG/pJMHMOtnYluJodI9BqWk5xXHYedlh4euwk
+x5ehq4+Pp8HzAmlJrkRuJf661MqfYHsu8tasx4TqJS+SkHQfgGW6+51OpxA
4NT2+yXCjQsQ9nzX42aybkTbXnNu+TkAJf17Vm3wZaNBmUPwBdYALEndc++P
NRt5pzw97yv1w99jlPqth0l8Vbe99NIfOPBe+9xiBTa+X7HpZFhUH0Sv0ud/
uJSNdg8Tta5294JJP31R5TALhe9IWeRv7AXtptyZlu8s7HPTTJ52/g3R9toK
/skMbFOToZwPaYH1dk8GXO8w8GNyTKitZjNUvMWHlmcZeIkv4kjXXBM8cgp3
vKjIQIagloBfQSMoBShzQtgM1H04sUngZQNkBcc0LyHrr9ZeYfpG/3rgXO51
GIyl427txtvuvnUgeoBhpO1Cx78DG9peP6kFT2741E8GHcv+uIZKJDfAEetg
uwdiZN+/2dOM36QJFkUFUyoU6bj8h/k97sIP2EBt/uh3hI4ibeXfMbgFamKD
NsTZ0zH/iUDDyzW/4JrKHQ/pB3RcXeVNddZvhVzrWve+VDo6NfG3biDaoMZ9
xcOWRjpGdg8/Hs9qA6ffQcflx0jd0BQv2mX1B6Z7NcOBzHeFu2ecPy7rB73k
kBl9DRY2nj0X5preD3fadi0/ZMNCtskSlDEcgJ5vrzzFQ1j4O0RZ3vz3AJzN
25oUXczCfjWZPQ2XB2Hp71GR0mkW2mXv89o8Pgh8i2sV7WXZ+NAm/OjKS0Pw
6MiYBe80LyZO7B5jp3+H1xsqXksU82LFbaVnee+LAf4w9mc84UWdmvif/cVf
4cptraeD53ixP5hWE0kUgvewaWSjHC8yuwpT/zrkw/yKO1ohszRUiVI+UEHP
g9cEh+dIAQ0tjheaErk5ZF8YOit+n4bZns/VLd5mw6q6Z0ukr1Mw2+yt5VhJ
EFzinJzaqElBD7cljL0vvOFq3/Wh2wSJp/oktkXbQU26HDXnzT+g2LnIc69q
cCcmPjMi5UlsIRzcRbHjvtnNEuX9sgCUl/GDOnQn7uKbmu/XaJO48JPUZhcX
7qH5/DN76ubB4/t792XG17jeh883D3rMk/8nNzR/JCfChahY89TWeWio85+y
/JoKmyRVVnpqLECzWrj18qA0KOj+ckM0ZgHCM8dvRvJnwhsRPzNNwX9wRtwm
h7aLCykF2yVyXP/BwkEN7WgiB8zbt73T//0PakI+bbM+lAv8Vn4/TshS0OVK
x2GBi3nwef3d/COknp/xXitk3V8Bl4aLfx68SsO35j5LTpyrhLNLYnpG4mmY
flDRLaSwEgZe3jP6r4eGNZ+OykwuqYKfnvuOxIjz4i6D5W2wvwp8TCS+OZ/g
RZEkZzdDyyqoyKB5WD3ixQ+NJrR1V6pgi1ve+uNlvPjtQ1Z4tHkVaLjzdolq
zACFynNWUPUa13GvmZpe+TRQ9peOLBi4cE0srle5G0+Dh1/E+rKma1zDd1SZ
kZ4poExIz/e/tOWWJWqn9DiQeKqrsr5YjcvnVOX/lofEZbQPx9rsQMy7w9Ah
aBIoOhpOyp+9gR7hLxokMQke0qmKZs1B0M1rzhe3MAz7Oht2jsVkQ/+RPB7j
wGHI1JD5HpqfAw3ClbdbJIfh2PWqyrOsPAghbON7Lg+BX3YA7ea1fJDjv12b
HjEIzJf4fM2iQjAO31UWVz8AlEWqNUdKvsKq1b4VSksGIDOg/SZ/UjH80R/N
rzrcDzrsf1FyGd/hqnfyIt/5flj6b03pOBmPRePjhmJdA7Bt41kvAzJeasm5
27JKBkHOc3v2RTKehzeneTelDMHUvsemSMY7UWBp+l+dYWD3eV3pIvlw2n+n
bQd3GGp7Cte6knydUXURtpIbgfjmhpTNJJ9Oq6v1dcNHwCd1tYEyyfeTzEnz
rXmTUMUyqeW3yoMg6+eWXvJTcPIdoWmmlwuR7+62U8KmIN/eTDWMnQMJu6Ie
WzGnYa2xzvIFJS50KT/z9LSbBumwvt5MIhP0RoCPWTcNStkjV08EpMGQvChv
rtIMpGVGifQUpILf007W1acz8OKrdUV4UiL8/ho9K36oGyYbN82FPq+F7M1e
r5n+XcDw3kuj3amD8dQk/dHiTqC9m5DadL8e4hov5OgJdELn6+7Jm68bgJ77
68d9kw6wFQ7bfeZbIwQnaV1bkdwOLVPx5sI8P2BYaKmI4aJ2gAyhtv79zXBJ
qTc14nIbeB33eiDxqgUchC6LvdhQBSK/09wt3X7DdinehKW0SggOeHFcV74X
4oZPjsk2l0ONZGmxwJ9esLnsM3+vrhTCnj2r3hPbB3PWChPuf7/DwJGwGBf7
P7D5b9wyMdVv8Nxl/chO1X7yHt5MtY4tgrrUtwxi0QA0KDdFnVT/ChGSW7Qv
dwzAsTDBOo2qj5C4JstCedsoNKj3fa95kwILtl83eoeMgsCTig8BRYmgen9r
iTh9DA6dnt+r4xYHmQx/qcrLJLZ03iIvFA1+496dBm1jYJduBxcN30C0iPgj
K/1x8FD9KblV8xV8aDJuLM8dh3Bvz/vx+aGQssY3UG37BJzxn/UMrw3hcs+b
1o3enQVx24qgYsWXXBvxJpVNlDk4xBoQ2BoSzq1qkV3Rf2UOBOQVh8V/h3Ob
ih06+nrmYLi1rNHrZjjXR2h6oNN4Hlr9JIc21YZxVfNK7j0un4fsBCl+inoI
l9ngqpGmTtbBttneEN1gLjPzaQfzwwKk1N812GVVBnZi7/X1bIdANizoxMGc
CjDfL1G2cnIQcoIUFlzUqsBqx7cM36uDcGRfkVh2ajU4pVdWN/cNQOi1hl41
0VpQoDjK2RwdALen7JSN9nUwt8hm5cOMfiirtLf/kFYPJfHKv94u74cq/wJF
0eEGeHfKy4ef7B9Cxh7ktNV2wmFJToXClzZQ7ts/vc6yC2pcpf8eIvUyJme8
+s1YFzzumbx1j9RTJVMrfc7VbnjaYTSVSOqtUbtb9eKBbpix0dXZS+rx/uwz
ByyMeyBcQjWriNRrA+1YsxpuD0jHKweuJ/VczHbZWxHR3xBYLkscI/X+/wCd
GGM5
          "], {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.05897156024869311, 2.5524133547586185`}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              1, {0.2332804630413891, 1.5566764340152262`}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.358100611382668, 2.4152460356939383`}, 1}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{2, {0.7489708380041961, 3.347027355035376}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{3, {0.9266090366544291, 3.070294780057032}, 2}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              3, {1.7585563953937104`, 3.6429206999990305`}, 4}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{4, {1.7584013138023704`, 3.31405818106182}, 3}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              4, {2.7674841595118322`, 3.3459401142682226`}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{5, {2.589578641072498, 3.0696261209587883`}, 4}],
              0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              5, {3.4551635294480096`, 2.5503008641276326`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{6, {3.155845483810303, 2.414215153158043}, 5}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              6, {3.6031537123204833`, 1.5086831651811157`}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.2776631000992156`, 1.5560340839708275`}, 6}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              7, {3.1647299588806295`, 0.5518042547116169}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.9161941785086363`, 0.7675232342184773}, 7}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              8, {2.279125772992579, -0.016863995723513454`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {2.186442465119676, 0.29867768685715873`}, 8}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              9, {1.227316282429627, -0.016735241734210055`}, 10}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {1.3200149775892924`, 0.29859571958901726`}, 9}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              10, {0.34310254530560425`, 0.552465651851101}, 11}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {-0.0926487402182971, 1.510425262857867}, 1}], 
             0.03380467341260941], 
            ArrowBox[
             BezierCurveBox[{
              11, {0.5917957432365083, 0.7674340557525466}, 10}], 
             0.03380467341260941]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            {GrayLevel[0], DiskBox[1, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[2, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[3, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[4, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[5, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[6, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[7, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[8, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[9, 0.03380467341260941]}, 
            {GrayLevel[1], DiskBox[10, 0.03380467341260941]}, 
            {GrayLevel[0], DiskBox[11, 0.03380467341260941]}}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None]}], "}"}]], "Output",
  CellChangeTimes->{{3.789919542337309*^9, 3.789919569569358*^9}, {
    3.789919612160405*^9, 3.789919614835822*^9}, 3.789919668681748*^9, 
    3.789919728536004*^9, 3.789919759017063*^9, 3.789920901438465*^9},
  ExpressionUUID->"166ddcf6-2b46-4200-b2f4-0365a792550f"],
 "\n\n",
 Cell[BoxData[
  GraphicsBox[
   RasterBox[{{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 
    1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 
    0}, {0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 
    0}}, {{0, 0}, {11, 6}}, {0, 1}],
   Frame->Automatic,
   FrameLabel->{None, None},
   FrameTicks->{{None, None}, {None, None}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultPlotStyle" -> Automatic}]], "Output",
  CellChangeTimes->{{3.789919542337309*^9, 3.789919569569358*^9}, {
    3.789919612160405*^9, 3.789919614835822*^9}, 3.789919668681748*^9, 
    3.789919728536004*^9, 3.789919759017063*^9, 3.789920901498306*^9},
  ExpressionUUID->"435d8d59-7f15-4528-8f44-64dff49194c7"]
}], "Text",
 CellChangeTimes->{{3.6892535415253806`*^9, 3.68925365814005*^9}, {
   3.689254052473604*^9, 3.689254068057495*^9}, 3.762506384702429*^9, {
   3.762506420598385*^9, 3.7625065077809777`*^9}, 3.762506540232657*^9, 
   3.762524205346532*^9, {3.762524430337446*^9, 3.7625244501028976`*^9}, {
   3.762524523937942*^9, 3.7625246114631453`*^9}, 3.762525629490725*^9, {
   3.762526178787713*^9, 3.762526188741818*^9}, {3.763283187208085*^9, 
   3.7632831987064877`*^9}, {3.763374285666535*^9, 3.763374286105685*^9}, {
   3.763374318224378*^9, 3.763374387543552*^9}, {3.764174875023448*^9, 
   3.764174890474921*^9}, {3.764235618891621*^9, 3.764235653787075*^9}, {
   3.764236134153439*^9, 3.764236170638291*^9}, {3.76423643539896*^9, 
   3.764236456208552*^9}, {3.784919882889594*^9, 3.784919885496849*^9}, {
   3.7849202265806713`*^9, 3.78492088809306*^9}, {3.78492092476387*^9, 
   3.784920990143285*^9}, {3.803806753372492*^9, 3.803806869054839*^9}, {
   3.803806904939167*^9, 3.803806920315564*^9}, {3.803807190687469*^9, 
   3.803807195389076*^9}, 3.803808481992672*^9, {3.803808563643009*^9, 
   3.8038087224987383`*^9}, {3.803808850355978*^9, 3.803809020857567*^9}, {
   3.803809051712136*^9, 3.803809052373575*^9}, {3.803809082787765*^9, 
   3.803809234968416*^9}, {3.803809351272177*^9, 3.803809403584687*^9}, {
   3.8038096897044077`*^9, 3.8038097605472813`*^9}, {3.803809807257008*^9, 
   3.8038099249222107`*^9}, {3.803826413120765*^9, 3.803826453339473*^9}, {
   3.803827020686193*^9, 3.803827046477992*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->None,ExpressionUUID->"6527e169-61d2-4067-a0a0-edd083b8ec68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AsynchronousBN", "[", 
     RowBox[{
     "rulefunction_", ",", "g_Graph", ",", "tsteps_Integer", ",", "UDS_List", 
      ",", 
      RowBox[{"includeself_Symbol", ":", "True"}], ",", 
      RowBox[{"returngraphs_Symbol", ":", "True"}], ",", 
      RowBox[{"colours_Symbol", ":", "True"}], ",", 
      RowBox[{"colourfunction_", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "1"}], ",", "Black", ",", "White"}], 
          "]"}], "&"}], ")"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initialstatelist", "=", 
         RowBox[{
          RowBox[{"AbsoluteOptions", "[", 
           RowBox[{"g", ",", "VertexWeight"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"neighbourslist", "=", 
         RowBox[{"If", "[", 
          RowBox[{"includeself", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{
               RowBox[{"{", "#", "}"}], ",", 
               RowBox[{"VertexInNeighbours", "[", 
                RowBox[{"g", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
            RowBox[{"VertexList", "[", "g", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"VertexInNeighbours", "[", 
              RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"VertexList", "[", "g", "]"}]}]}], "]"}]}], ",", 
        RowBox[{"timeevo", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"tsteps", "+", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "g", "]"}], "]"}], "}"}]}], "]"}]}]}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "timeevo", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "=", "initialstatelist"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "timeevo", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"timeevo", "\[LeftDoubleBracket]", 
            RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"timeevo", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "u"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"rulefunction", "[", 
                RowBox[{
                 RowBox[{"timeevo", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "#"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                  "timeevo", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                  RowBox[{
                  "neighbourslist", "\[LeftDoubleBracket]", "#", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                "]"}], "&"}], "/@", "u"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"u", ",", "UDS"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"tsteps", "+", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[Not]", "returngraphs"}], ",", "\[IndentingNewLine]", 
         "timeevo", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Not]", "colours"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Graph", "[", 
              RowBox[{
               RowBox[{"VertexList", "[", "g", "]"}], ",", 
               RowBox[{"EdgeList", "[", "g", "]"}], ",", 
               RowBox[{"VertexWeight", "\[Rule]", "#"}]}], "]"}], "&"}], "/@",
             "timeevo"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Graph", "[", 
              RowBox[{
               RowBox[{"VertexList", "[", "g", "]"}], ",", 
               RowBox[{"EdgeList", "[", "g", "]"}], ",", 
               RowBox[{"VertexWeight", "\[Rule]", "#"}], ",", 
               RowBox[{"VertexStyle", "\[Rule]", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"Rule", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"VertexList", "[", "g", "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"colourfunction", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "#"}], "}"}]}], "]"}]}], "}"}]}], 
                 "]"}]}]}], "]"}], "&"}], "/@", "timeevo"}]}], "]"}]}], 
        "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Given", " ", "a", " ", "graph", " ", 
     StyleBox["g",
      FontSlant->"Italic"], " ", "and", " ", "a", " ", "vertex", " ", 
     StyleBox["v",
      FontSlant->"Italic"]}], ",", " ", 
    RowBox[{
     RowBox[{
      StyleBox["VertexInNeighbours",
       FontSlant->"Italic"], " ", "gives", " ", "the", " ", "list", " ", "of",
       " ", "vertices", " ", 
      StyleBox["u",
       FontSlant->"Italic"], " ", "in", " ", 
      StyleBox["g",
       FontSlant->"Italic"], " ", "such", " ", "that", " ", 
      StyleBox["u",
       FontSlant->"Italic"]}], " ", "\[Rule]", " ", 
     RowBox[{
      StyleBox["v",
       FontSlant->"Italic"], " ", "is", " ", "an", " ", "edge", " ", "of", 
      " ", 
      StyleBox["v",
       FontSlant->"Italic"], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"that", " ", "is"}], ",", " ", 
         RowBox[{
         "the", " ", "list", " ", "of", " ", "\"\<incoming\>\"", " ", 
          "vertices"}]}], ")"}], "."}]}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VertexInNeighbours", "[", 
    RowBox[{"g_Graph", ",", "v_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "g", "]"}], ",", 
      RowBox[{"_", "\[DirectedEdge]", "v"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.803806700732543*^9, 3.803806731572718*^9}, {
  3.803806934751957*^9, 3.80380693823907*^9}, {3.803807077799735*^9, 
  3.8038071390659323`*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"8495ec63-240d-427c-b68c-1365b01fc1bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Further reduction of the set of representatives of all block sequential \
update schedule classes, when all configurations of a given length are \
considered and/or when taking into account symmetrical rules (only valid for \
CA type networks)\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.764175058868536*^9, 3.764175081772451*^9}, {3.764175216684227*^9, 
   3.764175242580803*^9}, {3.764175355871122*^9, 3.764175463610257*^9}, {
   3.764175759006843*^9, 3.764175766835291*^9}, {3.764176120121572*^9, 
   3.7641761927517242`*^9}, {3.764437799375134*^9, 3.764437812166369*^9}, 
   3.784919741336605*^9, {3.785321046141083*^9, 3.785321046460105*^9}, {
   3.803806631026986*^9, 
   3.80380663272256*^9}},ExpressionUUID->"6cb053e4-46a5-453c-86fd-\
10eaba1bec0c"],

Cell[TextData[{
 StyleBox["Examples of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[": \nNotice the reductions with respect to UDSReps:\n\
{UDSReps[CAInteractionGraph[1,5]] // Length, \
UDSRepAllICs[CAInteractionGraph[1,5]] // Length}  \[Implies]  {181, 37}\n\
{UDSReps[CAInteractionGraph[1,5]] // Length, \
UDSRepSymRules[CAInteractionGraph[1,5]] // Length}  \[Implies]  {181, 95}\n\
{UDSReps[CAInteractionGraph[1,5]] // Length, \
UDSRepAllICsAndSymRules[CAInteractionGraph[1,5]] // Length}  \[Implies]  \
{181, 37}\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Implementation note",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\nIf required to access the entire class of equivalent update \
schedules, it suffices to drop the mapping of function ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["First",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" that appears in the beginning of each function body.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.760268184338049*^9, 3.7602682200714*^9}, {
  3.760268308899928*^9, 3.7602684157196765`*^9}, {3.760268566850062*^9, 
  3.760268751932795*^9}, {3.760275229565459*^9, 3.760275325761459*^9}, {
  3.760275381040137*^9, 3.760275585751474*^9}, {3.760275912305455*^9, 
  3.760275916369091*^9}, {3.761315721089249*^9, 3.7613157705669117`*^9}, {
  3.761315912454286*^9, 3.76131591515316*^9}, {3.764176325189692*^9, 
  3.764176525214443*^9}, {3.764176751802199*^9, 3.7641769021483197`*^9}, {
  3.7641775402093487`*^9, 3.764177543958609*^9}, {3.764235438553537*^9, 
  3.76423544457139*^9}, {3.764236681997422*^9, 3.7642366932477508`*^9}, {
  3.764237362615288*^9, 
  3.76423736802629*^9}},ExpressionUUID->"5aac6b25-d193-4e0c-8d0e-\
099f7697b48e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSRepsAllICs", "[", "intG_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"First", "/@", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"UDSReps", "[", "intG", "]"}], ",", 
      RowBox[{
       RowBox[{"CanonicalRotationUDSForm", "[", "#", "]"}], "&"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.764175957940145*^9, {3.764176057887862*^9, 3.764176070824708*^9}, {
   3.764176199603467*^9, 3.764176221035458*^9}, 3.764176729619544*^9, 
   3.764177550654109*^9},
 CellLabel->
  "In[290]:=",ExpressionUUID->"50c910e8-79d5-42ee-bcfd-062f5da98905"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSRepsSymRules", "[", "intG_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"First", "/@", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"ReflectedUDS", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "/@", 
      RowBox[{"UDSReps", "[", "intG", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764175956636217*^9, 3.764175969517794*^9}, {
   3.76417605203765*^9, 3.764176067460002*^9}, {3.764176233333305*^9, 
   3.764176256506236*^9}, 3.76417673185695*^9, 3.76417755332178*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"c9dd0faa-1a1b-4324-8e17-3326c33b2bbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UDSRepsAllICsAndSymRules", "[", "intG_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"First", "/@", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"ReflectedUDS", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{"UDSReps", "[", "intG", "]"}], ",", 
            RowBox[{
             RowBox[{"CanonicalRotationUDSForm", "[", "#", "]"}], "&"}]}], 
           "]"}]}], ")"}]}], ")"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764175959582694*^9, 3.764175982612692*^9}, {
   3.764176024868078*^9, 3.764176043892941*^9}, 3.764176228360915*^9, {
   3.764176262953201*^9, 3.764176273257746*^9}, 3.7641767335333*^9, 
   3.764177554422455*^9},
 CellLabel->
  "In[292]:=",ExpressionUUID->"d9c51927-9524-4783-ae48-16ae5a416888"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Measures of the degree of asynchronism of a block sequential update schedule\
\>", "Subsection",
 CellChangeTimes->{{3.689264598047776*^9, 3.6892646277914786`*^9}, 
   3.762506444601367*^9, {3.762535536367607*^9, 3.762535542589093*^9}, {
   3.762535618994101*^9, 3.762535687625056*^9}, {3.762693571761728*^9, 
   3.7626936238633966`*^9}, {3.762693658184394*^9, 3.762693686760971*^9}, {
   3.7626951709989223`*^9, 3.762695189430443*^9}, {3.762696478890958*^9, 
   3.762696520701911*^9}, {3.762698262356868*^9, 3.7626982776892433`*^9}, 
   3.762700179534039*^9, {3.762701654752866*^9, 3.762701672712008*^9}, {
   3.762705493936315*^9, 3.76270551944704*^9}, {3.762705550127726*^9, 
   3.762705553477851*^9}, {3.78491978961357*^9, 3.7849197925734997`*^9}, {
   3.785338703651173*^9, 3.785338718825817*^9}, 
   3.803806644912696*^9},ExpressionUUID->"2a7240a1-2a93-42c9-b3e3-\
20f572c9872d"],

Cell[TextData[{
 StyleBox["Given the update schedule ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["UDS",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", the function defines an asynchronism degree associated to every \
individual node of the corresponding labelled interaction digraph, and \
combines them in distinct fashions, so as to yield measures of the degree of \
asynchronism of the given ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["UDS",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[". Three possibilities are currently implemented, defined by the \
maximal, mean or total of the values of the individual nodes.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[0],
 CellChangeTimes->{{3.760268184338049*^9, 3.7602682200714*^9}, {
  3.760268308899928*^9, 3.7602684157196765`*^9}, {3.760268566850062*^9, 
  3.760268751932795*^9}, {3.760275229565459*^9, 3.760275325761459*^9}, {
  3.760275381040137*^9, 3.760275585751474*^9}, {3.760275912305455*^9, 
  3.760275916369091*^9}, {3.761315721089249*^9, 3.7613157705669117`*^9}, {
  3.761315912454286*^9, 3.76131591515316*^9}, {3.762705741424761*^9, 
  3.7627061685467587`*^9}, {3.764174951683486*^9, 3.764174952901456*^9}, {
  3.764235790757232*^9, 3.764235790891261*^9}, {3.764235850765229*^9, 
  3.764236015960046*^9}},ExpressionUUID->"74c7592a-f83b-4b6e-8ff3-\
c5a283b05614"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaximalAsynchronismDegree", "[", 
     RowBox[{"r_", ",", "UDS_List"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Max", "[", 
     RowBox[{"VertexAsynchronismDegree", "[", 
      RowBox[{"r", ",", "UDS"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeanAsynchronismDegree", "[", 
     RowBox[{"r_", ",", "UDS_List"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"N", "@", 
     RowBox[{"Mean", "[", 
      RowBox[{"VertexAsynchronismDegree", "[", 
       RowBox[{"r", ",", "UDS"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TotalAsynchronismDegree", "[", 
     RowBox[{"r_", ",", "UDS_List", ",", 
      RowBox[{"normalised_Symbol", ":", "False"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"Flatten", "[", "UDS", "]"}], "]"}]}], ",", 
        RowBox[{"max", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"VertexAsynchronismDegree", "[", 
           RowBox[{"r", ",", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Flatten", "[", "UDS", "]"}], "]"}]}], "]"}], ",", 
              "1"}], "]"}]}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Not]", "normalised"}], ",", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"VertexAsynchronismDegree", "[", 
           RowBox[{"r", ",", "UDS"}], "]"}], "]"}], "-", "len"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"VertexAsynchronismDegree", "[", 
             RowBox[{"r", ",", "UDS"}], "]"}], "]"}], "-", "len"}], ")"}], 
         "/", "max"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VertexAsynchronismDegree", "[", 
    RowBox[{"r_", ",", "UDS_List"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"depthlist", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"First", "[", "UDS", "]"}], ",", "i"}], "]"}], ",", "1",
             ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"Flatten", "[", "UDS", "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ",", 
       RowBox[{"len", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Flatten", "[", "UDS", "]"}], "]"}]}], ",", 
       RowBox[{"uds", "=", "UDS"}], ",", "aux"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uds", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"uds", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"uds", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"aux", "=", "depthlist"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "aux", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "=", 
            RowBox[{"1", "+", 
             RowBox[{"Total", "[", 
              RowBox[{"depthlist", "\[LeftDoubleBracket]", 
               RowBox[{"GetNeighbours", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"1", ",", "len"}], "]"}], ",", "i", ",", "r"}], 
                "]"}], "\[RightDoubleBracket]"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"First", "[", "uds", "]"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"depthlist", "=", "aux"}], ";", "\[IndentingNewLine]", 
         RowBox[{"uds", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"uds", ",", "1"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "depthlist"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.731859884992066*^9, 3.7318599710520325`*^9}, {
  3.731860015176689*^9, 3.731860128108021*^9}, {3.731860173056024*^9, 
  3.7318601735229373`*^9}, {3.731950574534281*^9, 3.7319505749562025`*^9}, {
  3.731951101749282*^9, 3.7319511090781307`*^9}, {3.731951308449582*^9, 
  3.731951387196074*^9}, {3.7627055376812887`*^9, 3.762705565166192*^9}, {
  3.762705684895255*^9, 3.7627056849290733`*^9}, {3.764174238485668*^9, 
  3.764174239132872*^9}, {3.764174964563801*^9, 3.764174976696322*^9}, {
  3.905254399839894*^9, 3.905254422164525*^9}, {3.905254488078043*^9, 
  3.905254488542063*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"663862e2-b4b7-45b4-a272-5d8678765216"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
18. Asynchronous deterministic neighbourhood update schedules\
\>", "Section",
 CellChangeTimes->{
  3.558189210406275*^9, {3.722674772145262*^9, 3.722674785981222*^9}, {
   3.722676372854486*^9, 3.722676373788073*^9}, {3.762693633742814*^9, 
   3.7626936380706472`*^9}, {3.777394188578011*^9, 3.777394190028127*^9}, {
   3.785338723055581*^9, 3.785338750989949*^9}, {3.785341316238315*^9, 
   3.785341341629226*^9}},ExpressionUUID->"226cd4e4-b245-4ba3-af15-\
860a27666c15"],

Cell[CellGroupData[{

Cell["\<\
All possible independent asynchronous updates by neighbourhood priority \
\>", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489427507217*^9, {3.722674809955167*^9, 3.722674822971421*^9}, {
   3.762693628247183*^9, 3.762693628551799*^9}, {3.784919695105643*^9, 
   3.784919696170861*^9}, {3.7853413889941072`*^9, 3.7853414248805017`*^9}, {
   3.7853417874264407`*^9, 
   3.785341791847267*^9}},ExpressionUUID->"e81a9b9b-855d-41d8-b725-\
20f71dcdddf6"],

Cell[TextData[{
 StyleBox["AllUdsNFromRule",
  FontSlant->"Italic"],
 " gives all independent ",
 StyleBox["UdsN",
  FontSlant->"Italic"],
 " lists (UdsN meaning ",
 StyleBox["U",
  FontWeight->"Bold"],
 "p",
 StyleBox["d",
  FontWeight->"Bold"],
 "ate ",
 StyleBox["s",
  FontWeight->"Bold"],
 "chedule by ",
 StyleBox["N",
  FontWeight->"Bold"],
 "eighbourhood priority) for the given rule, leaving all inactive \
neighbourhoods with irrelevant update priority (i.e., the underscore symbol; \
see explanation of this in the description of function ",
 StyleBox["AsynchronousCAUdsN",
  FontSlant->"Italic"],
 ").\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[": \nAllUdsNFromRule[184, 2, 1]  \[Implies]  {{_,1,1,1,_,1,_,_}, \
{_,1,1,1,_,2,_,_}, {_,1,1,2,_,1,_,_}, ... , {_,4,3,1,_,2,_,_}, \
{_,4,3,2,_,1,_,_}}\n% // Length  \[Implies]  75\n\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) A valid update must display all priorities from 1 to ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", p \[LessEqual] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["k", 
     RowBox[{
      RowBox[{"2", "r"}], "+", "1"}]], "."}], TraditionalForm]],
  ExpressionUUID->"e7d1c357-a69c-4608-9242-258941e8cc25"],
 "\n2) The notion of an ",
 StyleBox["independent",
  FontSlant->"Italic"],
 " update comes from two aspects: (1) A set of updates becomes the same when \
their inactive state transitions are replaced by the underscore; (2) Updates \
with the same priorities over all neighbourhoods are the same, the \
synchronous case.\n3) The functions ",
 StyleBox["AllUdsNFromNTerms, UdsNFromSumList, SumsFromNTerms ",
  FontSlant->"Italic"],
 "and",
 StyleBox[" SumsFromCharList",
  FontSlant->"Italic"],
 " are all auxiliary to ",
 StyleBox["AllUdsNFromRule",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.722674922342995*^9, 3.722675002106193*^9}, {
   3.722675214463908*^9, 3.722675319964234*^9}, {3.722675548340757*^9, 
   3.722675699048366*^9}, {3.722675804033472*^9, 3.722676261806822*^9}, {
   3.76417697561462*^9, 3.764177013400405*^9}, 3.764177213743659*^9, {
   3.78534147140208*^9, 3.785341508075604*^9}, {3.78534164604657*^9, 
   3.7853423070348387`*^9}, {3.785342366425959*^9, 3.785342448752876*^9}, {
   3.785343141868928*^9, 3.785343232206561*^9}, 3.814599453263918*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0489b3d4-e732-434c-8e74-193bfbcd03f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllUdsNFromRule", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"activenhspos", "=", 
         RowBox[{"ActiveNeighbourhoodPositions", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
        RowBox[{"nhmax", "=", 
         RowBox[{"IntegerPart", "[", 
          SuperscriptBox["k", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}]], "]"}]}], ",", "aux", ",", 
        "ans"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "activenhspos"}], "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "activenhspos"}], "\[NotEqual]", "nhmax"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"aux", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AllUdsNFromNTerms", "[", 
               RowBox[{
                RowBox[{"Length", "[", "activenhspos", "]"}], ",", "i"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "activenhspos", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"aux", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"aux", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ans", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"_", ",", 
                RowBox[{"{", "nhmax", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Length", "[", "aux", "]"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ans", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{
                "activenhspos", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"aux", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "aux", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", "activenhspos"}]}], "}"}]}], "]"}], ";",
            "\[IndentingNewLine]", "ans"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AllUdsNFromNTerms", "[", 
               RowBox[{
                RowBox[{"Length", "[", "activenhspos", "]"}], ",", "i"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "activenhspos", "]"}]}], "}"}]}], 
             "]"}], ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Table", "[", 
          RowBox[{"_", ",", 
           RowBox[{"{", "nhmax", "}"}]}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "AllUdsNFromNTerms", " ", "yields", " ", "all", " ", "UdsN", " ", "lists",
      " ", "with", " ", 
     StyleBox["terms",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], "distinct", " ", "update", " ", "priorities", " ",
      "among", " ", "a", " ", 
     StyleBox["total",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], "number", " ", "of", " ", 
     RowBox[{"neighbourhoods", ".", " ", "\[IndentingNewLine]", 
      RowBox[{"Example", ":", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"AllUdsNFromNTerms", "[", 
          RowBox[{"4", ",", "2"}], "]"}], " ", "yields", " ", "all", " ", 
         "radius"}], "-", 
        RowBox[{"0.5", " ", 
         RowBox[{"(", 
          RowBox[{"4", " ", "neighbourhoods"}], ")"}], " ", "UdsN", " ", 
         "lists", " ", "in", " ", "which", " ", "there", " ", "are", " ", "2",
          " ", "distinct", " ", "update", " ", 
         RowBox[{"priorities", ".", "More"}], " ", "precisely"}]}]}]}]}], ",", 
    RowBox[{
     RowBox[{"AllUdsNFromNTerms", "[", 
      RowBox[{"4", ",", "2"}], "]"}], " ", "yields", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}]}], "}"}], 
      "."}]}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllUdsNFromNTerms", "[", 
    RowBox[{"total_Integer", ",", "terms_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Sort", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"UdsNFromSumList", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"SumsFromNTerms", "[", 
        RowBox[{"total", ",", "terms"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], 
  "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "UdsNFromSumList", " ", "gives", " ", "the", " ", "update", " ", "by", 
     " ", "neighbourhood", " ", "priority", " ", "induced", " ", 
     RowBox[{
      StyleBox[
       RowBox[{"by", 
        StyleBox["sumlist",
         FontSlant->"Italic"]}]], ".", " ", "\[IndentingNewLine]", 
      RowBox[{"Example", ":", " ", 
       RowBox[{
        RowBox[{"UdsNFromSumList", "[", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], "]"}], " ", "yields", " ", "all", 
        " ", "the", " ", "valid", " ", "UdsN", " ", "lists", " ", "in", " ", 
        "which", " ", "3", " ", "neighbourhoods", " ", "have", " ", 
        "priority", " ", "1", " ", "and", " ", "1", " ", "neighbourhood", " ",
         "has", " ", "priority", " ", "2.", " ", "More", " ", 
        "precisely"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"UdsNFromSumList", "[", 
      RowBox[{"{", 
       RowBox[{"7", ",", "1"}], "}"}], "]"}], " ", "yields", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}], 
      "."}]}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UdsNFromSumList", "[", "sumlist_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Permutations", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{
          "sumlist", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "sumlist", "]"}]}], "}"}]}], "]"}], "]"}], 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "SumsFromNTerms", " ", "gives", " ", "the", " ", "ways", " ", "to", " ", 
     "obtain", " ", 
     StyleBox["total",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], "by", " ", "adding", " ", 
     StyleBox["terms",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], "positive", " ", 
     RowBox[{"integer", ".", "\[IndentingNewLine]", 
      RowBox[{"Example", ":", 
       RowBox[{"SumsFromNTerms", "[", 
        RowBox[{"4", ",", "2"}], "]"}]}]}]}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], " ", "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SumsFromNTerms", "[", 
     RowBox[{"total_Integer", ",", "terms_Integer"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"total", "\[Equal]", "terms"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", "total", "}"}]}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"terms", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"{", "total", "}"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"SumsFromCharList", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Permutations", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"\"\<*\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"total", "-", "terms"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"\"\<|\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"terms", "-", "1"}], "}"}]}], "]"}]}], "]"}], 
          "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{" ", 
                    RowBox[{
                    RowBox[{
                    "SumsFromCharlist", " ", "decodes", " ", "a", " ", 
                    "sequence", " ", "of", " ", "unities", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[OpenCurlyDoubleQuote]", "*", 
                    "\[CloseCurlyDoubleQuote]"}], ")"}], " ", "and", " ", 
                    "separators", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\[OpenCurlyDoubleQuote]", "|", 
                    "\[CloseCurlyDoubleQuote]"}], ")"}], ".", "  ", "For"}], 
                    " ", "instance"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "\[OpenCurlyDoubleQuote]", "*", 
                    "\[CloseCurlyDoubleQuote]"}], ","}]}]}], 
                    "\[CloseCurlyDoubleQuote]"}], "|"}], 
                    "\[CloseCurlyDoubleQuote]"}], ","}], 
                    "\[CloseCurlyDoubleQuote]"}], "*"}], 
                    "\[CloseCurlyDoubleQuote]"}], ","}], 
                    "\[CloseCurlyDoubleQuote]"}], "*"}], 
                   "\[CloseCurlyDoubleQuote]"}], ","}], 
                 "\[CloseCurlyDoubleQuote]"}], "*"}], 
               "\[CloseCurlyDoubleQuote]"}], ","}], 
             "\[CloseCurlyDoubleQuote]"}], "*"}], 
           "\[CloseCurlyDoubleQuote]"}], ","}], "\[CloseCurlyDoubleQuote]"}], 
        "*"}], "\[CloseCurlyDoubleQuote]"}], "}"}], " ", "represents", " ", 
     "one", " ", "unity", " ", "in", " ", "the", " ", "first", " ", 
     "variable", " ", "and", " ", "five", " ", "unities", " ", "in", " ", 
     "the", " ", "second", " ", "variable"}], ";", " ", 
    RowBox[{"thus", " ", "SumsFromCharList", " ", "yields", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ".", " ", "This"}], " ", "is", " ", 
     "an", " ", "auxiliary", " ", "function", " ", "used", " ", "in", " ", 
     "SumsFromNTerms", " ", 
     RowBox[{"below", "."}]}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SumsFromCharList", "[", "charlist_List", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"terms", ",", "sumlist", ",", 
       RowBox[{"pos", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"terms", "=", 
       RowBox[{"1", "+", 
        RowBox[{"Length", "[", 
         RowBox[{"Cases", "[", 
          RowBox[{"charlist", ",", "\"\<|\>\""}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sumlist", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "terms", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "charlist", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            "\[Equal]", "\"\<*\>\""}], ",", 
          RowBox[{
           RowBox[{
           "sumlist", "\[LeftDoubleBracket]", "pos", 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{
            RowBox[{
            "sumlist", "\[LeftDoubleBracket]", "pos", 
             "\[RightDoubleBracket]"}], "+", "1"}]}], ",", 
          RowBox[{"pos", "=", 
           RowBox[{"pos", "+", "1"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "charlist", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "sumlist"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603185455158346*^9, 3.603185470871022*^9}, 
   3.722674855014784*^9, 3.722675799712514*^9, {3.7226857707435007`*^9, 
   3.72268577922406*^9}, {3.785320904126621*^9, 3.785320907651758*^9}, {
   3.785341458938599*^9, 3.785341460501308*^9}, {3.785342716552935*^9, 
   3.785342772554704*^9}, {3.7853428108628407`*^9, 3.785342825529677*^9}, {
   3.785342889437005*^9, 3.785343083143896*^9}, 3.785343120710176*^9, {
   3.814547968687651*^9, 3.814547969504838*^9}, {3.814547999611271*^9, 
   3.814548015033807*^9}, {3.8145482665778103`*^9, 3.814548358724627*^9}, {
   3.81455085657082*^9, 3.814550858258185*^9}, {3.81455350909085*^9, 
   3.814553509953138*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"a97e8742-cce6-42b6-bd71-377ccedd0b1f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Equivalent synchronous rule of any asynchronous rule \
with update by neighbourhood priority",
 FontColor->GrayLevel[0]]], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489427507217*^9, {3.722674809955167*^9, 3.722674822971421*^9}, {
   3.762693628247183*^9, 3.762693628551799*^9}, {3.784919695105643*^9, 
   3.784919696170861*^9}, {3.7853413889941072`*^9, 3.7853414248805017`*^9}, {
   3.7853417874264407`*^9, 3.785341791847267*^9}, {3.803722759337412*^9, 
   3.8037227597290897`*^9}, {3.803735132467707*^9, 
   3.803735221775934*^9}},ExpressionUUID->"50cb924e-8504-4c82-acc3-\
4295514e8339"],

Cell[TextData[{
 StyleBox["FindUdsNCompositeRule",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" gives the synchronous rule equivalent to applying the given rule \
asynchronously, according to the neighbourhood priorities in ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["udsn",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[". It uses four auxiliary functions, as listed below.\n\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Example of usage",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\[LineSeparator]FindUdsNCompositeRule[{184, 2, 1}, {_, 4, 3, 1, \
_, 2, _, _}]\n\
{13401251411981641777428922396732228914681976960595095160900264105250873609824\
198848228495543004022124770843395298265375360968492197018576691326740409024512\
,2,4}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.803121838554243*^9, 3.803122034241887*^9}, {
   3.803122112828362*^9, 3.8031222822587028`*^9}, {3.803122313825762*^9, 
   3.803122385688631*^9}, 3.803723639422561*^9, {3.8037295418939056`*^9, 
   3.8037295423346586`*^9}, {3.803735108247849*^9, 3.803735112782389*^9}, {
   3.803735237272895*^9, 3.803735374562332*^9}, {3.803735479289109*^9, 
   3.803735511051025*^9}, {3.803742815170547*^9, 3.803742928087276*^9}, {
   3.80374400797758*^9, 
   3.803744024225313*^9}},ExpressionUUID->"a6350b04-53e8-4a49-93d6-\
09b10b3e9af3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindUdsNCompositeRule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", 
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", "udsn_List"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rule", "=", 
        RowBox[{"CompositeRule", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ActiveNeighbourhoodsToRNum", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#"}], 
                "]"}], ",", "r"}], "}"}], "&"}], "/@", 
            RowBox[{"GetNeighbourhoodsProgression", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"k", ",", "r"}], "}"}], ",", "udsn"}], "]"}]}], "]"}], 
          ",", "k"}], "]"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rule", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "rule", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
           "k", ",", 
          RowBox[{
          "rule", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "}"}], ",", "rule"}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "\n", 
    RowBox[{
     StyleBox["ActiveNeighbourhoodsToRnum",
      FontSlant->"Italic"], " ", "gives", " ", "the", " ", "resulting", " ", 
     "rule", " ", "number", " ", "from", " ", "applying", " ", "the", " ", 
     "given", " ", "rule", " ", "only", " ", "to", " ", "the", " ", 
     "neighbourhoods", " ", "in", " ", 
     RowBox[{
      StyleBox["neighbourhoodlist",
       FontSlant->"Italic"], ".", "\n", 
      StyleBox["Example",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["of",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["usage",
       FontWeight->"Bold"], ":", "\n", 
      RowBox[{
       RowBox[{"ActiveNeighbourhoodsToRNum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"184", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "]"}], "  ", 
       "\[Implies]", "  ", "140"}]}]}], "\n", "*)"}],
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ActiveNeighbourhoodsToRNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rnum_Integer", ",", 
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", "neighbourhoodlist_List"}], 
     "]"}], ":=", 
    RowBox[{"RnumFromRuleTable", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"neighbourhoodlist", ",", "#"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"CellularAutomaton", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", "#"}], "]"}],
             "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "+", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "+", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"2", "r"}], "+", "1"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  StyleBox[
   RowBox[{"(*", "\[LineSeparator]", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["GetNeighbourhoodsProgression",
        FontSlant->"Italic"], " ", "organises", " ", "the", " ", 
       StyleBox["k",
        FontSlant->"Italic"]}], "-", 
      RowBox[{"ary", " ", "neighbourhoods", " ", "of", " ", "radius", " ", 
       StyleBox["r",
        FontSlant->"Italic"], "  ", "according", " ", "to", " ", "their", " ",
        "priorities"}]}], ",", " ", 
     RowBox[{"as", " ", "defined", " ", "in", " ", 
      RowBox[{
       StyleBox["udsn",
        FontSlant->"Italic"], ".", "\n", 
       StyleBox["Example",
        FontWeight->"Bold"]}], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      StyleBox["of",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      RowBox[{
       StyleBox["usage",
        FontWeight->"Bold"], ":", "\n", 
       RowBox[{
        RowBox[{"GetNeighbourhoodsProgression", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "_", ",", "3", ",", "3", ",", "1", ",", "_", ",", "2", ",", "_", 
            ",", "_"}], "}"}]}], "]"}], "  ", "\[Implies]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
         "}"}]}]}]}]}], "\n", "*)"}],
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetNeighbourhoodsProgression", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k_Integer", ":", "2"}], ",", 
        RowBox[{"r_", ":", "1"}]}], "}"}], ",", "udsn_List"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"udsn", ",", "NumberQ"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"GetNeighbourhoodsFromPriorities", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"k", ",", "r"}], "}"}], ",", "udsn", ",", "#"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "M"}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["GetNeighbourhoodsFromPriorities",
        FontSlant->"Italic"], " ", "gives", " ", "the", " ", "list", " ", 
       "of", " ", "k"}], "-", 
      RowBox[{
      "ary", " ", "neighbourhoods", " ", "of", " ", "radius", " ", "r", "  ", 
       "with", " ", "the", " ", "priorities"}]}], ",", " ", 
     RowBox[{
      RowBox[{"as", " ", "defined", " ", "in", " ", 
       RowBox[{"udsn", ".", "\n", "Example"}], " ", "of", " ", "usage"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetNeighbourhoodsFromPriorities", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "_", ",", " ", "3", ",", " ", "3", ",", " ", "1", ",", " ", "_", 
           ",", " ", "2", ",", " ", "_", ",", " ", "_"}], "}"}], ",", " ", 
         "3"}], "]"}], "  ", "\[Implies]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetNeighbourhoodsFromPriorities", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "_", ",", " ", "3", ",", " ", "3", ",", " ", "1", ",", " ", "_", 
           ",", " ", "2", ",", " ", "_", ",", " ", "_"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "3"}], "}"}]}], "]"}], " ", "\[Implies]", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetNeighbourhoodsFromPriorities", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "_", ",", " ", "3", ",", " ", "3", ",", " ", "1", ",", " ", "_", 
           ",", " ", "2", ",", " ", "_", ",", " ", "_"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "1"}], "}"}]}], "]"}], " ", "\[Implies]", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], "}"}]}], "}"}]}]}]}], 
    "\[IndentingNewLine]", "*)"}], "Input"], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetNeighbourhoodsFromPriorities", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k_Integer", ",", "r_"}], "}"}], ",", "udsn_List", ",", 
     "priority_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ans", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "priority", "]"}], ",", 
       RowBox[{"ans", "\[LeftDoubleBracket]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"udsn", ",", "priority"}], "]"}], "]"}], 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"udsn", ",", "#"}], "]"}], "]"}], 
          "\[RightDoubleBracket]"}], "&"}], "/@", "priority"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellFrame->1.5,
 CellFrameColor->RGBColor[0.752941, 0.72549, 0.513725],
 CellChangeTimes->{{3.800377521006464*^9, 3.800377531494346*^9}, {
   3.800377822743206*^9, 3.800377936695408*^9}, {3.800378180481884*^9, 
   3.800378183935*^9}, {3.800380696654847*^9, 3.80038075137544*^9}, {
   3.8031197613514767`*^9, 3.803119806682612*^9}, {3.803120587135624*^9, 
   3.803120676793029*^9}, 3.803121078138137*^9, 3.803122072133271*^9, {
   3.803122303996695*^9, 3.803122309043564*^9}, 3.803725541807719*^9, {
   3.803735607049478*^9, 3.803735607672501*^9}, {3.803742210360477*^9, 
   3.803742214911769*^9}, {3.803743927304438*^9, 3.803743992330943*^9}, {
   3.803745951853552*^9, 3.803745957163799*^9}, {3.8037459893779707`*^9, 
   3.803745997849917*^9}, 3.803746294187748*^9, {3.803805583859107*^9, 
   3.803805608885572*^9}, {3.80380563944862*^9, 3.803805914462414*^9}, {
   3.803805947424148*^9, 3.80380594831913*^9}, {3.803806064143299*^9, 
   3.8038061059008923`*^9}, {3.803806152084627*^9, 3.8038061787134943`*^9}},
 Background->RGBColor[
  0.9686274509803922, 0.9411764705882353, 0.8392156862745098],
 CellLabel->
  "In[302]:=",ExpressionUUID->"ad105543-3942-492f-8cf4-40192c2bd937"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["19. Rule table properties", "Section",
 CellChangeTimes->{{3.558189214702158*^9, 3.5581892172542057`*^9}, {
  3.722676378153034*^9, 3.7226763789518003`*^9}, {3.7853413352395906`*^9, 
  3.785341344227848*^9}},ExpressionUUID->"b8605c40-c333-446b-8ede-\
38164eb6601f"],

Cell[CellGroupData[{

Cell["Linearity (or Additivity)", "Subsection",
 CellChangeTimes->{{3.6193724528125*^9, 3.619372455453125*^9}, {
  3.619432750811885*^9, 3.619432757708795*^9}, {3.619432815425974*^9, 
  3.619432819211425*^9}},ExpressionUUID->"fb483c8a-0cdd-4e6b-892b-\
7a6163b2b64e"],

Cell[TextData[{
 "Predicate that establishes whether the given ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule is ",
 StyleBox["linear",
  FontSlant->"Italic"],
 " or ",
 StyleBox["additive",
  FontSlant->"Italic"],
 ", in the sense that the rule can be expressed as a linear combination \
(modulo ",
 StyleBox["k",
  FontSlant->"Italic"],
 ") of the cell states in the neighbourhood (weighed by the possible ",
 StyleBox["k",
  FontSlant->"Italic"],
 " states). Formally: f(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "cdae8c58-79a2-40d7-a978-bbb2c65eaa64"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], ",", " "}], TraditionalForm]],ExpressionUUID->
  "47487027-4d6b-4ae6-9136-fe75a5ea4b86"],
 "..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "a9f658d0-9f71-44cc-806d-9bba3fc2ae4b"],
 ") = Mod[(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "73c37b2f-d34e-4d19-8021-33a9dcdd662f"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "4373ee78-b5a4-4878-99d8-a8e47e6ba5d5"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["s", "2"], 
     SubscriptBox["x", "2"]}], " ", "+", " "}], TraditionalForm]],
  ExpressionUUID->"227bf4b0-424d-4a5b-920e-158c40a2e9d6"],
 "... + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", 
     RowBox[{"\[LeftCeiling]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]], 
    SubscriptBox["x", 
     RowBox[{"\[LeftCeiling]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]]}], 
   TraditionalForm]],ExpressionUUID->"333d514f-6f95-4c77-b5cf-c898c74157de"],
 "), ",
 StyleBox["k",
  FontSlant->"Italic"],
 "] , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "9ecc5883-62e5-4c0b-9eca-eda8d0cd902f"],
 "\[Element] {0, 1, ..., ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1}.\n\nThis definition is in tune with additivity on page 952 NKS and \
additivity or linearity in Ed Powley\[CloseCurlyQuote]s PhD Thesis. \
Therefore, it doesn\[CloseCurlyQuote]t correspond to the definitions of \
additivity and linearity in P. Pal Chaudhuri, D. Roy Chowdhury, S. Nandi, and \
S. Chatterjee. ",
 StyleBox["Additive Cellular Automata: Theory and Applications",
  FontSlant->"Italic"],
 ", VOL. 1. IEEE Computer Society Press, Los Alamitos, California, \
ISBN-0-8186-7717-1, 1997, nor to the definitions in Burt Voorhees. \
\[OpenCurlyDoubleQuote]Additive Cellular Automata\[CloseCurlyDoubleQuote], \
In: R.A. Myers, editor. ",
 StyleBox["Encyclopedia of Complexity and Systems Science",
  FontSlant->"Italic"],
 ", pp.63-80, 2009 (by the way, additivity and linearity are individually \
defined in [Chaudhuri et. al, 1997] in exactly the opposite way of [Voorhees, \
2009]).\n\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\n1) The linear algebraic expressions are given as in the following \
example:  ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["S", 
    RowBox[{"-", "1"}]], "+", 
   RowBox[{"2", " ", 
    SubscriptBox["S", "0"]}], "+", 
   RowBox[{"2", " ", 
    SubscriptBox["S", "1"]}]}]],
  CellChangeTimes->{{3.6207323133772388`*^9, 3.620732338201457*^9}, {
    3.620732370115221*^9, 3.6207323842474756`*^9}, {3.620732424051208*^9, 
    3.620732454107293*^9}, 3.620732512140082*^9, 3.6207325725015593`*^9, 
    3.620732610942809*^9, 3.620732715025284*^9, {3.620732793457855*^9, 
    3.62073279931185*^9}},ExpressionUUID->
  "207de210-86ea-4876-99fd-b090c488cb79"],
 ".\n2) The number of linear rules of a given space is ",
 Cell[BoxData[
  SuperscriptBox["k", 
   RowBox[{"\[LeftFloor]", 
    RowBox[{
     RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]],ExpressionUUID->
  "412ead33-fb26-419e-b1de-e460b20722e9"],
 ".\n3) LinearSolve is the core of LinearRuleAlgebraicRepresentation, since \
the given rule is assumed to be linear, that is, the only condition \
LinearSolve manages to find the target linear combination, which is returned \
as a vector; otherwise LinearSolve gives a ",
 StyleBox["beep",
  FontSlant->"Italic"],
 " to indicate an error.\n4) A version of AllLinearRules could be implemented \
analogously to AllStrictlyLinearRules; this was carried out as a test, but \
the current version of AllLinearRules is way faster than that analogous \
version."
}], "Text",
 CellChangeTimes->{{3.609149609496867*^9, 3.6091496141997347`*^9}, {
   3.619432661063844*^9, 3.619432669273397*^9}, {3.619432829830068*^9, 
   3.619432864947685*^9}, {3.619432923830298*^9, 3.619433037902419*^9}, {
   3.619433137926168*^9, 3.619433138438613*^9}, {3.6194332440999207`*^9, 
   3.61943340691875*^9}, {3.619433447514266*^9, 3.61943350930422*^9}, {
   3.619433546901436*^9, 3.619433624742751*^9}, {3.6194336598627243`*^9, 
   3.619434342629221*^9}, {3.619434939097834*^9, 3.61943495308073*^9}, {
   3.6194349905677156`*^9, 3.619435002530397*^9}, {3.619435075315845*^9, 
   3.619435171621976*^9}, {3.61943520300119*^9, 3.619435301117516*^9}, {
   3.620750516937187*^9, 3.620750632529849*^9}, {3.620751000552865*^9, 
   3.6207510400918097`*^9}, {3.620753646896636*^9, 3.620753694328641*^9}, {
   3.620753727783765*^9, 3.6207537589078083`*^9}, {3.7773755692236443`*^9, 
   3.777375570752048*^9}, 3.777375876589664*^9, {3.7773950062090077`*^9, 
   3.777395184465539*^9}, {3.777396254922777*^9, 3.777396281717799*^9}, 
   3.777396508986521*^9, 3.7774542376872253`*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2e00ac56-746b-4098-814f-bebb5c0f245a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LinearRuleQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "neighbourhoods", ",", "outputs", ",", "variables", ",", 
          "operatedVariables", ",", "equations"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"neighbourhoods", ",", "outputs"}], "}"}], "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"variables", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"x", ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftFloor]", 
                  RowBox[{
                   RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "}"}]}],
                "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
                RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], ",", "1"}], 
               "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"operatedVariables", "=", 
          RowBox[{"Total", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Times", "[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"variables", ",", "#"}], "}"}]}], "]"}], "&"}], "/@",
              "neighbourhoods"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"equations", "=", 
          RowBox[{"And", "@@", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "\[Equal]", "#2"}], ")"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"operatedVariables", ",", "outputs"}], "}"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Solve", "[", 
          RowBox[{"equations", ",", "variables", ",", 
           RowBox[{"Modulus", "\[Rule]", "k"}]}], "]"}]}]}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.619372533078125*^9, 3.619372559171875*^9}, {
   3.6206574338900337`*^9, 3.620657478784547*^9}, {3.620730433665462*^9, 
   3.620730433998118*^9}, 3.620730614774433*^9, 3.620730869634862*^9},
 CellLabel->
  "In[306]:=",ExpressionUUID->"caf40da6-1513-4cf7-b802-f5b1babd590e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllLinearRules", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FromLinearAlgebraicRepresentationToRnum", "[", 
        RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}], "/@", 
      RowBox[{"AllLinearAlgebraicRepresentations", "[", 
       RowBox[{"k", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FromLinearAlgebraicRepresentationToRnum", "[", 
     RowBox[{"algebraicRep_", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "algebraicRepPieces", ",", "variablesInRep", ",", 
        "variableCoefficientsInRep", ",", "neighbourhoods", ",", "outputs"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"algebraicRep", "===", "0"}], ",", "0", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"algebraicRepPieces", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "#", "]"}], "===", "Subscript"}], 
               "\[Or]", 
               RowBox[{
                RowBox[{"Head", "[", "#", "]"}], "===", "Times"}]}], ",", 
              RowBox[{"List", "@", "#"}], ",", 
              RowBox[{"List", "@@", "#"}]}], "]"}], "&"}], "[", 
           "algebraicRep", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"variablesInRep", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], "===", "Times"}], ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", 
                RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}], "&"}], 
           "/@", "algebraicRepPieces"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"variablesInRep", "=", 
          RowBox[{"variablesInRep", "+", 
           RowBox[{"\[LeftCeiling]", 
            RowBox[{"r", "+", "1"}], "\[RightCeiling]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"variableCoefficientsInRep", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], "===", "Times"}], ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "1"}], "]"}], "&"}], "/@", "algebraicRepPieces"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"neighbourhoods", "=", 
          RowBox[{"Reverse", "@", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", "-", "1"}]}], "]"}], ",", 
             RowBox[{"\[LeftFloor]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"outputs", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"Total", "[", "#", "]"}], ",", "k"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"neigh", "=", "#"}], "}"}], ",", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", " ", 
                    RowBox[{
                    "neigh", "\[LeftDoubleBracket]", "#2", 
                    "\[RightDoubleBracket]"}]}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "variableCoefficientsInRep", ",", "variablesInRep"}], 
                   "}"}]}], "]"}]}], "]"}], "&"}], "/@", "neighbourhoods"}], 
            ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"RnumFromRuleTable", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"neighbourhoods", ",", "outputs"}], "}"}], "]"}], ",", 
           "k"}], "]"}]}]}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllLinearAlgebraicRepresentations", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"neighbourhoods", ",", "variables", ",", "equations"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"neighbourhoods", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"variables", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"S", ",", 
             RowBox[{"{", 
              RowBox[{"\[LeftFloor]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
             RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], ",", "1"}], 
            "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Total", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Times", "[", 
                RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"variables", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
           "neighbourhoods"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"Depth", "[", "#", "]"}], "&"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.620749485653834*^9, 3.6207495306288767`*^9}, {
  3.620749763816753*^9, 3.620749772000339*^9}, {3.620749890885252*^9, 
  3.620749896550344*^9}, {3.620750122088766*^9, 3.620750143525957*^9}, {
  3.620750311592024*^9, 3.620750312427257*^9}, {3.777454145540101*^9, 
  3.777454151970265*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"f04151c4-550f-4b24-83ae-8bc912581a7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearRuleAlgebraicRepresentation", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Total", "@", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Times", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LinearRuleEqs", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"S", ",", 
               RowBox[{"{", 
                RowBox[{"\[LeftFloor]", 
                 RowBox[{
                  RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
               RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], ",", "1"}], 
              "]"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinearRuleEqs", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LinearSolve", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"Modulus", "\[Rule]", "k"}]}], "]"}], "&"}], "[", 
    RowBox[{"Transpose", "@", 
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.620589809661638*^9, 3.62058981229024*^9}, {
   3.62058984714339*^9, 3.620589907340714*^9}, {3.620590116569231*^9, 
   3.620590117849664*^9}, {3.620590895502688*^9, 3.620590906554076*^9}, {
   3.62059099868088*^9, 3.620591030104291*^9}, 3.62073021894033*^9, {
   3.620730590969282*^9, 3.62073060430267*^9}, {3.620730822227502*^9, 
   3.620730839104837*^9}, {3.620750318176567*^9, 3.620750319075233*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"9d98227b-76e0-4c62-9081-3297c2ef980d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdditiveRuleQ", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
    RowBox[{"LinearRuleQ", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllAdditiveRules", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
    RowBox[{"AllLinearRules", "[", 
     RowBox[{"k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FromAdditiveAlgebraicRepresentationToRnum", "[", 
     RowBox[{"algebraicRep_", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
    RowBox[{"FromLinearAlgebraicRepresentationToRnum", "[", 
     RowBox[{"algebraicRep", ",", "k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllAdditiveAlgebraicRepresentations", "[", 
     RowBox[{
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
    RowBox[{"AllLinearAlgebraicRepresentations", "[", 
     RowBox[{"k", ",", "r"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AdditiveRuleAlgebraicRepresentation", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", 
   RowBox[{"LinearRuleAlgebraicRepresentation", "[", 
    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.620750276918717*^9, 3.620750321957566*^9}, {
  3.620750410572009*^9, 3.620750412478497*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"e21b9500-85e8-479e-b959-cd26380483f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Strict linearity", "Subsection",
 CellChangeTimes->{{3.6193724528125*^9, 3.619372455453125*^9}, {
  3.619432750811885*^9, 3.619432757708795*^9}, {3.619432815425974*^9, 
  3.619432819211425*^9}, {3.777374912194913*^9, 
  3.777374922173302*^9}},ExpressionUUID->"90d4bddf-ecb1-4778-b1b5-\
233602ed6f33"],

Cell[TextData[{
 "Predicate that establishes whether the given ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius one-dimensional rule is ",
 StyleBox["strictly linear",
  FontSlant->"Italic"],
 ", meaning that the rule can be expressed as a linear combination (modulo ",
 StyleBox["k",
  FontSlant->"Italic"],
 ") of the cell states in the neighbourhood (weighed by the possible ",
 StyleBox["k",
  FontSlant->"Italic"],
 " states) plus an independent state value. Formally: ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "963b01cf-72de-472b-bf00-75faeb053116"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], ",", " "}], TraditionalForm]],ExpressionUUID->
  "2ab1de91-b25f-4a2d-9a56-4b020e8b54f5"],
 "..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "da3ef0ea-8d17-494a-b5f3-a31d97339dd4"],
 ") = Mod[(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "1cb95ddd-1737-460b-a038-e0f30318a190"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "3e7ec018-ee52-4790-adf1-3a182f8f9330"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["s", "2"], 
     SubscriptBox["x", "2"]}], " ", "+", " "}], TraditionalForm]],
  ExpressionUUID->"ffda87bc-901c-4010-b30b-3d1a4315bb65"],
 "... + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", 
     RowBox[{"\[LeftCeiling]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]], 
    SubscriptBox["x", 
     RowBox[{"\[LeftCeiling]", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]]}], 
   TraditionalForm]],ExpressionUUID->"770e14cb-9b00-4f45-9953-0fa94b47dbf4"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{
     RowBox[{"\[LeftCeiling]", 
      RowBox[{"2", "r"}], "\[RightCeiling]"}], "+", "2"}]], TraditionalForm]],
  ExpressionUUID->"e59afa85-b424-456b-87ce-24745a0646c5"],
 "), ",
 StyleBox["k",
  FontSlant->"Italic"],
 "] , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "d82c87a3-7418-4f0d-a3d2-35a3aff04c11"],
 "\[Element] {0, 1, ..., ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1}.\n\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nThe predicate relies on native Mathematica function Solve."
}], "Text",
 CellChangeTimes->{{3.609149609496867*^9, 3.6091496141997347`*^9}, {
   3.619432661063844*^9, 3.619432669273397*^9}, {3.619432829830068*^9, 
   3.619432864947685*^9}, {3.619432923830298*^9, 3.619433037902419*^9}, {
   3.619433137926168*^9, 3.619433138438613*^9}, {3.6194332440999207`*^9, 
   3.61943340691875*^9}, {3.619433447514266*^9, 3.61943350930422*^9}, {
   3.619433546901436*^9, 3.619433624742751*^9}, {3.6194336598627243`*^9, 
   3.619434342629221*^9}, {3.619434939097834*^9, 3.61943495308073*^9}, {
   3.6194349905677156`*^9, 3.619435002530397*^9}, {3.619435075315845*^9, 
   3.619435171621976*^9}, {3.61943520300119*^9, 3.619435301117516*^9}, {
   3.620750516937187*^9, 3.620750632529849*^9}, {3.620751000552865*^9, 
   3.6207510400918097`*^9}, {3.620753646896636*^9, 3.620753694328641*^9}, {
   3.620753727783765*^9, 3.6207537589078083`*^9}, {3.777375008623033*^9, 
   3.777375097690946*^9}, {3.777375172726459*^9, 3.7773753084792647`*^9}, {
   3.777375356383908*^9, 3.777375432928133*^9}, {3.777375470549602*^9, 
   3.777375475161032*^9}, {3.777375592938414*^9, 3.777375602803243*^9}, {
   3.777375637094795*^9, 3.777375775987197*^9}, {3.777375806836557*^9, 
   3.777375870500313*^9}, {3.777378352792642*^9, 3.7773785541561613`*^9}, {
   3.777386543923281*^9, 3.777386572258282*^9}, 3.777396510375395*^9, {
   3.777454075645287*^9, 3.777454088970149*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"0fe82598-c6d0-4b60-a277-371cabf0f8fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StrictlyLinearRuleQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "neighbourhoods", ",", "outputs", ",", "variables", ",", 
          "operatedVariables", ",", "equations"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"neighbourhoods", ",", "outputs"}], "}"}], "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"RuleTable", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"variables", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"x", ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftFloor]", 
                  RowBox[{
                   RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "}"}]}],
                "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
                RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], ",", "1"}], 
               "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"operatedVariables", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Sequence", "@@", 
             RowBox[{"{", 
              RowBox[{"#", "+", "x"}], "}"}]}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Total", "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Times", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"variables", ",", "#"}], "}"}]}], "]"}], "&"}], "/@",
                "neighbourhoods"}], ")"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"equations", "=", 
          RowBox[{"And", "@@", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "\[Equal]", "#2"}], ")"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"operatedVariables", ",", "outputs"}], "}"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"variables", "=", 
          RowBox[{"Prepend", "[", 
           RowBox[{"variables", ",", "x"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Solve", "[", 
          RowBox[{"equations", ",", "variables", ",", 
           RowBox[{"Modulus", "\[Rule]", "k"}]}], "]"}]}]}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.77737762036692*^9, 3.777377620368901*^9}, {
  3.777377691661001*^9, 3.777377694887393*^9}, {3.777377945134785*^9, 
  3.777378090000288*^9}, {3.777378231191181*^9, 3.777378286685082*^9}, {
  3.777378764881996*^9, 3.777378773464697*^9}, {3.777396511559959*^9, 
  3.777396525500241*^9}, {3.777454021421713*^9, 3.777454045871315*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"93d9221f-2d61-4eab-b7d0-8e11fa122e3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AllStrictlyLinearRules", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "coefficients", ",", "neighbourhoodsAndcoefficients", ",", 
       "neighbourhoodsAndoutputs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coefficients", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "}"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", 
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"k", "-", "1"}]}], "]"}], ",", 
              RowBox[{"\[LeftCeiling]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}], 
            ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], ",", "1"}], "]"}], ",", "1"}],
          "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"neighbourhoodsAndcoefficients", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"k", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", 
             RowBox[{"\[LeftCeiling]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}], 
           ",", "coefficients", ",", "1"}], "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"neighbourhoodsAndoutputs", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"GatherBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Times", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "i"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"\[LeftCeiling]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], 
                    "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "}"}]}], 
                  "]"}], "]"}], ",", "k"}], "]"}]}], "}"}], "&"}], "/@", 
           "neighbourhoodsAndcoefficients"}], ",", "First"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "k", ",", "r"}], "}"}], "&"}], "/@", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{"#", ",", "k"}], "]"}], "&"}], "/@", 
         "neighbourhoodsAndoutputs"}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7767017007519736`*^9, 3.776701762186677*^9}, {
   3.7767018277884893`*^9, 3.776702051099522*^9}, {3.776702083963877*^9, 
   3.776702114082862*^9}, {3.7767021603064404`*^9, 3.776702196676128*^9}, {
   3.776702229987103*^9, 3.776702360859853*^9}, {3.7767025251131363`*^9, 
   3.776702593659887*^9}, {3.77670271928869*^9, 3.7767027288946342`*^9}, 
   3.776702781956214*^9, {3.776702815015066*^9, 3.776702929584012*^9}, {
   3.776703020970085*^9, 3.776703023815382*^9}, {3.776703107627335*^9, 
   3.776703157021415*^9}, {3.776703336096155*^9, 3.776703341697223*^9}, {
   3.77670363659647*^9, 3.776703643322328*^9}, {3.776703679188446*^9, 
   3.776703680211445*^9}, 3.776768398978362*^9, {3.777031700138647*^9, 
   3.777031703196899*^9}, 3.77703179341342*^9, {3.777046460701186*^9, 
   3.7770464632953777`*^9}, 3.777370491288824*^9, {3.777376446144777*^9, 
   3.777376517691998*^9}, 3.777396526908407*^9, {3.777454112361288*^9, 
   3.777454112753296*^9}, 3.777454237694165*^9},
 CellLabel->
  "In[318]:=",ExpressionUUID->"093b298b-9f25-4cf1-bc91-ceb4ebb142c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Quiescence", "Subsection",
 CellChangeTimes->{{3.547982554671875*^9, 3.547982555078125*^9}, {
   3.746462053883053*^9, 3.746462075033177*^9}, 3.746462332693243*^9, {
   3.7464630334595327`*^9, 3.746463035597149*^9}, {3.777373104578971*^9, 
   3.777373107420215*^9}, {3.777374188488797*^9, 3.777374190265725*^9}, {
   3.77737454411637*^9, 3.777374545960071*^9}, {3.777374617251882*^9, 
   3.777374628603287*^9}},ExpressionUUID->"66f5b1a7-4ac4-4757-9e74-\
d74c80f95ffe"],

Cell[TextData[{
 "Predicate that establishes whether any homogeneous neighbourhood of the \
given ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius one-dimensional rule respects ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["s",
  FontSlant->"Italic"],
 ", ",
 StyleBox["s",
  FontSlant->"Italic"],
 ", ..., ",
 StyleBox["s",
  FontSlant->"Italic"],
 ") = ",
 StyleBox["s",
  FontSlant->"Italic"],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "i"], " "}], TraditionalForm]],ExpressionUUID->
  "30b47258-3659-4b00-94ab-4099e0a07044"],
 "\[Element] {0, 1, ..., ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-1}."
}], "Text",
 CellChangeTimes->{{3.74646208902814*^9, 3.7464621890081463`*^9}, {
  3.746462236820799*^9, 3.7464622403079033`*^9}, {3.74646229989494*^9, 
  3.74646231325353*^9}, {3.7464630451149693`*^9, 3.7464630943227787`*^9}, {
  3.7464631496729536`*^9, 3.746463174670916*^9}, {3.746463239213801*^9, 
  3.746463243014707*^9}, {3.777372895226966*^9, 3.777372918761855*^9}, {
  3.777372960555813*^9, 3.777373016232628*^9}, {3.777373113916602*^9, 
  3.777373159378432*^9}, {3.777373827621957*^9, 3.777373845036141*^9}, {
  3.777373880709729*^9, 3.7773739301102962`*^9}, {3.777374009191462*^9, 
  3.77737412116965*^9}, {3.77737423862422*^9, 3.7773743098891997`*^9}, {
  3.777374362551423*^9, 3.777374392340825*^9}, {3.77737442259361*^9, 
  3.777374443438801*^9}, {3.777374651047522*^9, 3.777374659631579*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4f4d4c2b-2819-4c63-a9d3-9ab46458f776"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuiescentRuleQ", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "indivQuiescentTransition", "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"indivQuiescentTransition", "=", "#"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"RuleTable", "[", 
                 RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
                "indivQuiescentTransition"}], "]"}]}], ")"}]}], "]"}], "&"}], 
         "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftCeiling]", 
                  RowBox[{
                   RowBox[{"2", "r", " ", "1"}], "+", "1"}], 
                  "\[RightCeiling]"}], "}"}]}], "]"}], ",", "#"}], "}"}], 
            "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "]"}]}], ")"}]}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QuiescentRuleQ", "[", 
    RowBox[{"{", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"QuiescentRuleQ", "[", 
    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.746463098777906*^9, 3.746463103536586*^9}, 
   3.777374478935326*^9, {3.777378647531715*^9, 3.777378669547673*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"b954b1f1-29e0-4aad-88e4-3bfc333277ba"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Symmetry Scoring (for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "=2 only, as yet)"
}], "Subsection",
 CellChangeTimes->{{3.650279465077717*^9, 
  3.65027948442789*^9}},ExpressionUUID->"c301e76b-9d1a-40ee-9b7b-\
5884dea40273"],

Cell[TextData[{
 "CountSymmetry does the actual counting of symmetry scores.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":  \nCountSymmetry[#, 2, 1, {stBWTransform, stLRTransform, \
stBWLRTransform}]& /@ {110, 137, 124, 193}"
}], "Text",
 CellChangeTimes->{{3.609149609496867*^9, 3.6091496141997347`*^9}, {
  3.6502794972421837`*^9, 3.650279533749148*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"848cc5ff-9466-4eb8-b34c-15ee7a60924c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CountSymmetry", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "fn_List"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"CountSymmetry", "[", 
      RowBox[{"rnum", ",", "k", ",", "r", ",", "#"}], "]"}], "&"}], " ", "/@",
     " ", "fn"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CountSymmetry", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "fn_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Intersection", "[", 
       RowBox[{
        RowBox[{"fn", " ", "/@", " ", "#"}], ",", "#"}], "]"}], "]"}], "&"}], 
    " ", "[", 
    RowBox[{"RuleTable", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4844795734110003`*^9, 3.484479629914*^9}, 
   3.515353308441*^9, 3.618046158390884*^9},
 CellLabel->
  "In[321]:=",ExpressionUUID->"6fe6808e-3e8c-4c43-bb7b-2d12ecaf854f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Colour Blindness", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.622245766368889*^9, 
  3.622245773415165*^9}},ExpressionUUID->"c1fd9657-f3e5-48f2-9f1e-\
e4122556e5fd"],

Cell[TextData[{
 "C",
 StyleBox["olour blind",
  FontSlant->"Italic"],
 " CAs are those which are invariant to any permutation of the states; in \
other words, they are those with maximum conjugate symmetry. The concept was \
defined in V.O. Salo and I.A. T\[ODoubleDot]rm\[ADoubleDot]. \
\[OpenCurlyDoubleQuote]Color blind cellular automata\[CloseCurlyDoubleQuote]. \
",
 StyleBox["Journal of Cellular Automata",
  FontSlant->"Italic"],
 ", 9(5-6):477-509, 2014."
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.563011968995101*^9, 
   3.563012091861486*^9}, {3.563012149159842*^9, 3.5630122419748797`*^9}, 
   3.563012276361792*^9, {3.563012334891176*^9, 3.563012338439451*^9}, {
   3.563012714200412*^9, 3.563012725689616*^9}, 3.56301337493045*^9, 
   3.622245780863147*^9, {3.622245994012414*^9, 3.62224599737823*^9}, {
   3.622624830097272*^9, 3.622624939633667*^9}, 3.651146691457633*^9, {
   3.65114742614784*^9, 3.651147553041542*^9}, {3.65114758938533*^9, 
   3.651147664444004*^9}, 3.651148151538459*^9, {3.651148293027549*^9, 
   3.651148293195217*^9}, {3.6512583263138*^9, 3.651258326448668*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"15d41464-61c4-4846-bc21-eec38a056861"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ColourBlindRuleQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateRules", "[", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "===", 
      RowBox[{"{", "rnum", "}"}]}], ",", "True", ",", "False"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.651147821847088*^9, 3.651147840748671*^9}, {
   3.65114807483213*^9, 3.651148075790842*^9}, {3.651148275685734*^9, 
   3.651148278133537*^9}, 3.651483044254196*^9},
 CellLabel->
  "In[323]:=",ExpressionUUID->"295aed9a-d5bb-4817-8a9b-44a812a200ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["Typhlotic rules", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.622245766368889*^9, 3.622245773415165*^9}, {3.6511466222302847`*^9, 
  3.651146632101318*^9}, {3.651254786755931*^9, 
  3.651254791029346*^9}},ExpressionUUID->"a6fc7344-3714-4458-95a1-\
4181181ca320"],

Cell[TextData[{
 StyleBox["Typhlotic",
  FontSlant->"Italic"],
 " CAs CAs are those which are invariant to any mapping of the states (they \
are, therefore, a subset of the blind colour CAs). The concept was defined in \
V.O. Salo and I.A. T\[ODoubleDot]rm\[ADoubleDot]. \
\[OpenCurlyDoubleQuote]Color blind cellular automata\[CloseCurlyDoubleQuote]. \
",
 StyleBox["Journal of Cellular Automata",
  FontSlant->"Italic"],
 ", 9(5-6):477-509, 2014."
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.563011968995101*^9, 
   3.563012091861486*^9}, {3.563012149159842*^9, 3.5630122419748797`*^9}, 
   3.563012276361792*^9, {3.563012334891176*^9, 3.563012338439451*^9}, {
   3.563012714200412*^9, 3.563012725689616*^9}, 3.56301337493045*^9, 
   3.622245780863147*^9, {3.622245994012414*^9, 3.62224599737823*^9}, {
   3.622624830097272*^9, 3.622624939633667*^9}, 3.651146691457633*^9, {
   3.651147339444366*^9, 3.651147405661368*^9}, {3.651147563954118*^9, 
   3.651147564274826*^9}, {3.651148605622753*^9, 3.651148646848227*^9}, {
   3.651258042095216*^9, 3.651258067531563*^9}, {3.651258132488369*^9, 
   3.651258153098452*^9}, {3.651258184260904*^9, 3.6512582848349123`*^9}, {
   3.651258323603777*^9, 3.6512583237147703`*^9}, {3.65125838757139*^9, 
   3.651258393925966*^9}, {3.651433022761354*^9, 3.651433062945369*^9}, {
   3.651482995156851*^9, 3.651482995942859*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"244da615-6a90-4c01-a3dd-3fc1ddb4f16e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TyphloticRuleQ", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"typhloticStateTransitions", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"TyphloticTransform", "[", 
                 RowBox[{"#", ",", "k", ",", "r"}], "]"}], "&"}], " ", "/@", 
               " ", 
               RowBox[{"RuleTable", "[", 
                RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"k", "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "typhloticStateTransitions", "]"}], "===", 
          SuperscriptBox["k", 
           RowBox[{"\[LeftFloor]", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "\[And]", 
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{"typhloticStateTransitions", ",", "k"}], "]"}], "===", 
          "rnum"}]}], ",", "True", ",", "False"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TyphloticTransform", "[", 
     RowBox[{"statetransition_", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"statetransition", " ", "/.", "#"}], ")"}], "&"}], "/@", " ", 
     RowBox[{"AllSymbolMappings", "[", "k", "]"}]}]}], " ", ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllSymbolMappings", "[", 
    RowBox[{"k_Integer", ":", "2"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"#1", "\[Rule]", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], ",", 
         RowBox[{"{", 
          SuperscriptBox["k", "k"], "}"}]}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"k", "-", "1"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"k", "-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651339428791795*^9, 3.651339463719395*^9}, {
   3.651339713476113*^9, 3.6513397239405756`*^9}, 3.651400630615319*^9, {
   3.651400703158*^9, 3.6514007569431453`*^9}, {3.6514008202253704`*^9, 
   3.651400827165021*^9}, {3.65140086995928*^9, 3.651400883306356*^9}, {
   3.651400986492987*^9, 3.6514011809957905`*^9}, 3.651401240404377*^9, {
   3.777374572997566*^9, 3.777374576077139*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"5e8206c0-9f5c-4257-8313-20c0d2e7655f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Balancedness", "Subsection",ExpressionUUID->"3bcb8f8b-e02e-4553-a90c-0460138f70b0"],

Cell[TextData[{
 "A binary rule is balanced if the number of (output bit) 1s is the same as \
the number of 0s. Balancedness is normalised with respect to half of the \
number of possible neighbourhoods,  yielding values from ",
 StyleBox["0",
  FontSlant->"Italic"],
 " to ",
 StyleBox["2",
  FontSlant->"Italic"],
 ", meaning, respectively, that, no output bit in the rule is 1, and all \
output bits in the rule are 1. A balanced rule thus has Balancedness=",
 StyleBox["1.0,",
  FontSlant->"Italic"],
 " meaning that half of the output bits in the rule are 1. \
AbsoluteRuleBalance just provides a frequency of occurrence of each output \
state.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": It only works for k=2. Maybe it can generalised. But the general \
definition of balancedness should be checked (it may be worth bearing in mind \
Corollary 2.2, of [Boccara & Fuks, 2002])."
}], "Text",
 CellChangeTimes->{{3.587029098834312*^9, 3.587029214102689*^9}, {
  3.699456444696494*^9, 3.699456479748675*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"81c0b7d0-e9fa-4f8c-a250-be3c1508c832"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"rnum", ",", "k", ",", 
         SuperscriptBox["k", 
          RowBox[{"\[LeftFloor]", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}], 
       "]"}], "===", 
      RowBox[{
       SuperscriptBox["k", 
        RowBox[{"\[LeftFloor]", 
         RowBox[{
          RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]], "/", "2"}]}], 
     ",", "True", ",", "False"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395130580039032*^9, 3.395130587810207*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"09fc59ee-9c19-4ee1-a240-dcd80e98ac1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Balancedness", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"2", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"rnum", ",", "k", ",", 
         SuperscriptBox["k", 
          RowBox[{"\[LeftFloor]", 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}], 
       "]"}], "/", 
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}]]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.39513059776452*^9, 3.3951306030020514`*^9}, {
  3.395130636099643*^9, 3.395130638443013*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"14aebb1f-1bc8-45c1-9989-c2521e1997e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteRuleBalance", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Tally", "[", 
    RowBox[{"Last", "/@", 
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699456143220508*^9, 3.699456154847156*^9}, {
   3.699456201682631*^9, 3.699456262544117*^9}, 3.699456485924673*^9},
 CellLabel->
  "In[329]:=",ExpressionUUID->"5c885408-77e4-4853-83e1-ca2f4262badf"],

Cell["Works for any k. Check!!", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"6571961e-d4a4-4219-b785-b9e5de82d538"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GKBalancedQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"rnum", ",", "k"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{"k", "-", "1"}]}], "]"}]}], ",", 
          RowBox[{"Round", "[", 
           RowBox[{
            SuperscriptBox["k", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}]], "/", "k"}], "]"}]}], "]"}], 
        "]"}], "===", 
       RowBox[{"k", " ", "-", "1"}]}], " ", "&&", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"rnum", ",", "k"}], "]"}], ",", "0"}], "]"}], 
       "\[LessEqual]", " ", 
       RowBox[{
        SuperscriptBox["k", 
         RowBox[{
          RowBox[{"2", "r"}], "+", "1"}]], "/", "k"}]}]}], ",", "True", ",", 
     "False"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[330]:=",ExpressionUUID->"2becaff6-5678-4075-9919-bb4559d8ef76"]
}, Closed]],

Cell[CellGroupData[{

Cell["Density Balancedness", "Subsection",ExpressionUUID->"284339bc-1344-4cab-9d99-e3aa8aff4bd0"],

Cell[TextData[{
 "This provides a measure of how balanced is a rule, in respect to the number \
of neighbourhoods with a certain (absolute) density of 1s that map to 1s (or, \
equivalently, the number of neighbourhoods with a certain (absolute) density \
of 0s that map to 0s).\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": It only works for k=2. Maybe it can be generalised.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In: ",
  FontSlant->"Italic"],
 "DensityBalancedness[337607298446901146542393000444934784552, 2, 3]\n",
 StyleBox["Out: ",
  FontSlant->"Italic"],
 "{True, {1, 7, 15, 20, 20, 15, 7, 1}}\nThis means that, in that rule, there \
is exactly 1 neighbourhood with 7 ones mapping to one (or, equivalently, 1 \
neighbourhood with 7 zeros mapping to zero); there are exactly 7 \
neighbourhoods with 6 ones mapping to one (or, equivalently, 7 neighbourhoods \
with 6 zeros mapping to zero); and so on..."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"b1d3aed3-cf48-4809-9d36-05cc4685ebfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DensityBalancedness", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "===", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", "True", ",", "False"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Reverse", "@", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
           "}"}], "&"}], "[", 
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "/", "2"}]}], "]"}], "]"}], 
        "]"}], ",", "#"}], "}"}], "&"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}], "]"}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "&"}], "/@", "#"}], ")"}], "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "/", "2"}]}], "]"}], "&"}], 
        "[", 
        RowBox[{"GatherBy", "[", 
         RowBox[{
          RowBox[{"RuleTable", "[", 
           RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              "1"}], "]"}], "&"}]}], "]"}], "]"}], ")"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.575970482385056*^9},
 CellLabel->
  "In[331]:=",ExpressionUUID->"070ff9bc-93ec-4fe6-9d74-cdd587e16cd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DensityBalancedQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"First", "@", 
    RowBox[{"DensityBalancedness", "[", 
     RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[332]:=",ExpressionUUID->"dce0b75d-59ad-4f0e-b333-1b7435d256bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Conservation (Boccara-Fuk\[SHacek]\.b4 algorithm) and Conservation Degree\
\>", "Subsection",
 CellChangeTimes->{{3.590314403215082*^9, 3.590314404771219*^9}, {
  3.590489297788705*^9, 3.590489315547681*^9}, {3.671392895480749*^9, 
  3.67139289849566*^9}},ExpressionUUID->"1e96eff1-75b9-4f5e-86f2-\
d93ede9d35f5"],

Cell[TextData[{
 StyleBox["BFConservativeQ",
  FontSlant->"Italic"],
 " is a predicate that says whether ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " (radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", k ",
 StyleBox["colours",
  FontSlant->"Italic"],
 ") is conservative, according to the algorithm described in N. Boccara and \
H. Fuk\[SHacek], \[OpenCurlyDoubleQuote]Number-conserving cellular automaton \
rules\[CloseCurlyDoubleQuote], ",
 StyleBox["Fundamenta Informaticae",
  FontSlant->"Italic"],
 " 52:1-13, 2002.",
 StyleBox["\nBFConservativeQ",
  FontSlant->"Italic"],
 " derives from the simplification of BF's algorithm, due to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"Schranko", " ", "and", " ", "de", " ", "Oliveira"}]}], 
   TraditionalForm]],ExpressionUUID->"9ea0260b-c521-45ee-8925-908b892129a2"],
 ", 2010], which states that it is tautological to check the state \
transitions f(0, x2, ..., xn), since they necessarily hold for any \
number-conserving CA; also, that if f(0, ..., 0) \[NotEqual] 0, the rule is ",
 StyleBox["not",
  FontWeight->"Bold"],
 " number conserving.\nThe second option for ",
 StyleBox["BFConservativeQ",
  FontSlant->"Italic"],
 ", that has the additional argument ",
 StyleBox["N",
  FontSlant->"Italic"],
 ", is a straightforward modification that allows checking whether a rule \
conserves the sum Mod",
 StyleBox["N",
  FontSlant->"Italic"],
 " of the states in the initial configuration (so, in particular, for binary \
rules and ",
 StyleBox["N",
  FontSlant->"Italic"],
 "=",
 StyleBox["k",
  FontSlant->"Italic"],
 "=2, it checks whether the rule is parity preserving).\n",
 StyleBox["Notes",
  FontWeight->"Bold"],
 ":\n1) The simplifications don\[CloseCurlyQuote]t make sense for working out \
the ConservationDegree. Do they really apply for the extension to Mod",
 StyleBox["N",
  FontSlant->"Italic"],
 "?\n2) In fact, it is also true (from Corollary 2.1, of [Boccara & Fuk\
\[SHacek], 2002]) that, for any number-conserving rule, f(si, ..., si) = si \
for any state si. This should also be introduced in the function to speed up \
rejection of non-number-conserving rules.\n "
}], "Text",
 CellChangeTimes->{{3.391690842129032*^9, 3.391690937926782*^9}, {
   3.391691006084789*^9, 3.391691039643043*^9}, {3.3929839685208864`*^9, 
   3.3929839867571087`*^9}, {3.586948728632986*^9, 3.586948739497006*^9}, {
   3.5869488542177553`*^9, 3.5869488600729837`*^9}, {3.586972174987905*^9, 
   3.586972216114945*^9}, {3.586972618779427*^9, 3.586972662512754*^9}, {
   3.587025768061498*^9, 3.5870257705065203`*^9}, {3.587027236079821*^9, 
   3.587027409671582*^9}, {3.587027480080686*^9, 3.587027563395266*^9}, {
   3.5870276093915*^9, 3.587027903485131*^9}, {3.587373937955623*^9, 
   3.587374187367738*^9}, {3.587374221370523*^9, 3.587374256209979*^9}, {
   3.590489723280487*^9, 3.590489741440403*^9}, {3.590489796232363*^9, 
   3.5904898138817673`*^9}, 3.610911279950131*^9, {3.824796918231395*^9, 
   3.824796945236733*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a204a7f7-7987-4bb7-a5a0-e9073c5a56ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BFConservativeQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"False", "===", 
      RowBox[{"Catch", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RuleOutputFromNeighbourhood", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "}"}]}], "]"}], ",", "rnum", 
            ",", "k", ",", "r"}], "]"}], "\[NotEqual]", "0"}], ",", 
         RowBox[{"Throw", "[", "False", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RuleOutputFromNeighbourhood", "[", 
               RowBox[{"#", ",", "rnum", ",", "k", ",", "r"}], "]"}], 
              "\[NotEqual]", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], "+", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], 
                 RowBox[{"2", "r"}]], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"RuleOutputFromNeighbourhood", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], "]"}], 
                  "-", 
                  RowBox[{"RuleOutputFromNeighbourhood", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], 
                   "]"}]}], ")"}]}]}]}], ",", 
             RowBox[{"Throw", "[", "False", "]"}]}], "]"}], "&"}], "/@", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"AllNeighbourhoods", "[", 
             RowBox[{"k", ",", "r"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x_", "/;", 
               RowBox[{"x", "\[NotEqual]", "0"}]}], ",", "___"}], "}"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ",", "False", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.391467577094758*^9, 3.391467630922158*^9}, {
   3.391467667604905*^9, 3.391467693692417*^9}, 3.391467770392707*^9, 
   3.3914678067549934`*^9, {3.39146784537052*^9, 3.391467915691637*^9}, {
   3.391468073788966*^9, 3.391468229823334*^9}, {3.3914683531606827`*^9, 
   3.391468376013547*^9}, {3.391468426225749*^9, 3.39146845800144*^9}, {
   3.391468518608588*^9, 3.391468518868963*^9}, {3.391468572315816*^9, 
   3.3914685725261183`*^9}, {3.391468707530245*^9, 3.391468710534565*^9}, {
   3.391469697293454*^9, 3.3914697494784927`*^9}, {3.3914697977078433`*^9, 
   3.391469823565024*^9}, {3.391470227786265*^9, 3.391470229408598*^9}, {
   3.3914703639019904`*^9, 3.391470366325475*^9}, 3.391680533966622*^9, 
   3.391681437656064*^9, {3.391681493406229*^9, 3.3916815346956*^9}, {
   3.39168164510436*^9, 3.3916816454148064`*^9}, 3.391681956331883*^9, {
   3.391687343348032*^9, 3.391687372239577*^9}, 3.391691087822322*^9, {
   3.571565193640625*^9, 3.571565193671875*^9}, {3.586971704206622*^9, 
   3.58697172359237*^9}, {3.611051819646703*^9, 3.611051830679913*^9}, {
   3.61105186556192*^9, 3.611051867718925*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b3d66eb3-c9d9-410e-83db-d74438e086ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BFConservativeQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "N_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"False", "===", 
      RowBox[{"Catch", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RuleOutputFromNeighbourhood", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "}"}]}], "]"}], ",", "rnum", 
            ",", "k", ",", "r"}], "]"}], "\[NotEqual]", "0"}], ",", 
         RowBox[{"Throw", "[", "False", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"RuleOutputFromNeighbourhood", "[", 
                 RowBox[{"#", ",", "rnum", ",", "k", ",", "r"}], "]"}], ",", 
                "N"}], "]"}], "\[NotEqual]", " ", "\[IndentingNewLine]", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"First", "[", "#", "]"}], "+", 
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"i", "=", "1"}], 
                   RowBox[{"2", "r"}]], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], "]"}], 
                    "-", 
                    RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], 
                    "]"}]}], ")"}]}]}], ",", "N"}], "]"}]}], ",", 
             RowBox[{"Throw", "[", "False", "]"}]}], "]"}], "&"}], "/@", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"AllNeighbourhoods", "[", 
             RowBox[{"k", ",", "r"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x_", "/;", 
               RowBox[{"x", "\[NotEqual]", "0"}]}], ",", "___"}], "}"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ",", "False", ",", "True"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.391467577094758*^9, 3.391467630922158*^9}, {
   3.391467667604905*^9, 3.391467693692417*^9}, 3.391467770392707*^9, 
   3.3914678067549934`*^9, {3.39146784537052*^9, 3.391467915691637*^9}, {
   3.391468073788966*^9, 3.391468229823334*^9}, {3.3914683531606827`*^9, 
   3.391468376013547*^9}, {3.391468426225749*^9, 3.39146845800144*^9}, {
   3.391468518608588*^9, 3.391468518868963*^9}, {3.391468572315816*^9, 
   3.3914685725261183`*^9}, {3.391468707530245*^9, 3.391468710534565*^9}, {
   3.391469697293454*^9, 3.3914697494784927`*^9}, {3.3914697977078433`*^9, 
   3.391469823565024*^9}, {3.391470227786265*^9, 3.391470229408598*^9}, {
   3.3914703639019904`*^9, 3.391470366325475*^9}, 3.391680533966622*^9, 
   3.391681437656064*^9, {3.391681493406229*^9, 3.3916815346956*^9}, {
   3.39168164510436*^9, 3.3916816454148064`*^9}, 3.391681956331883*^9, {
   3.391687343348032*^9, 3.391687372239577*^9}, 3.391691087822322*^9, {
   3.571565193640625*^9, 3.571565193671875*^9}, {3.586971704206622*^9, 
   3.58697172359237*^9}, {3.587373737730641*^9, 3.587373780900622*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"7263a54b-2bf8-48b9-9c1b-b2d7cb64f73e"],

Cell[TextData[{
 "\nThe following yields the conservation degree of a rule, as defined in \
[Schranko & de Oliveira, 2010], but modified, in that the two become the \
same, by replacing the Union operation in Eqs. 13 and 14 with a MultisetUnion \
operation.\n",
 StyleBox["ConservationDegree",
  FontSlant->"Italic"],
 " is normalised with respect to the number of possible neighbourhoods, so \
that a conservative rule yields ",
 StyleBox["ConservationDegree",
  FontSlant->"Italic"],
 "=1, meaning that the test described in the algorithm holds true for all \
neighbourhoods.\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) Like the the definition in [Schranko & de Oliveira, 2010], \
ConservationDegree also conserves the parameter value across dynamically \
equivalent rules. But it has more granularity in the conservation degree \
values, entails more discrimination between the top 3000 rules of [Wolz & de \
Oliveira, 2008] and a sample of random radius 3 rules; and is much faster to \
run.\n2) The granularity of the function for radius 1 is 14 values. I still \
have to work out this value in general."
}], "Text",
 CellChangeTimes->{{3.391690842129032*^9, 3.391690937926782*^9}, {
  3.391691006084789*^9, 3.391691039643043*^9}, {3.3929839685208864`*^9, 
  3.3929839867571087`*^9}, {3.44534235996875*^9, 3.445342410734375*^9}, {
  3.44534262371875*^9, 3.44534274384375*^9}, {3.586972719649128*^9, 
  3.58697272130451*^9}, {3.587112924116*^9, 3.587112986084*^9}, {
  3.5904894679647007`*^9, 3.590489515401271*^9}, {3.590489646955927*^9, 
  3.590489716836564*^9}, {3.59048983687387*^9, 3.5904900590698833`*^9}, {
  3.590490090455832*^9, 3.5904900931114407`*^9}, {3.590490177143531*^9, 
  3.590490327166481*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"9614afa6-674a-4850-bb73-928d8fb6823c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConservationDegree", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"RuleOutputFromNeighbourhood", "[", 
              RowBox[{"#", ",", "rnum", ",", "k", ",", "r"}], "]"}], 
             "\[Equal]", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "1"}], 
                RowBox[{"2", "r"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], "]"}], 
                 "-", 
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "rnum", ",", "k", ",", "r"}], 
                  "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{"(*", " ", "Reflection", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RuleOutputFromNeighbourhood", "[", 
              RowBox[{
               RowBox[{"Reverse", "@", "#"}], ",", "rnum", ",", "k", ",", 
               "r"}], "]"}], "\[Equal]", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "1"}], 
                RowBox[{"2", "r"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", "rnum", ",", "k", ",", "r"}], 
                  "]"}], "-", 
                 RowBox[{"RuleOutputFromNeighbourhood", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", "rnum", ",", "k", ",", "r"}], 
                  "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{"(*", " ", "Conjugate", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"k", "-", "1", "-", 
              RowBox[{"RuleOutputFromNeighbourhood", "[", 
               RowBox[{
                RowBox[{"k", "-", "1", "-", "#"}], ",", "rnum", ",", "k", ",",
                 "r"}], "]"}]}], "\[Equal]", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "1"}], 
                RowBox[{"2", "r"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1", "-", 
                   RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"k", "-", "1", "-", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", "rnum", ",", "k", ",", "r"}], 
                    "]"}]}], ")"}], "-", 
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1", "-", 
                   RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"k", "-", "1", "-", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", "rnum", ",", "k", ",", "r"}], 
                    "]"}]}], ")"}]}], ")"}]}]}]}], "\[IndentingNewLine]", ",",
             "  ", 
            RowBox[{"(*", " ", 
             RowBox[{"Reflection", "\[SmallCircle]", "Conjugate"}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"k", "-", "1", "-", 
              RowBox[{"RuleOutputFromNeighbourhood", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", 
                 RowBox[{"k", "-", "1", "-", "#"}], "]"}], ",", "rnum", ",", 
                "k", ",", "r"}], "]"}]}], "\[Equal]", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "1"}], 
                RowBox[{"2", "r"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1", "-", 
                   RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"k", "-", "1", "-", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "]"}], ",", "rnum", ",", "k", ",", 
                    "r"}], "]"}]}], ")"}], "-", 
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1", "-", 
                   RowBox[{"RuleOutputFromNeighbourhood", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"k", "-", "1", "-", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"2", "r"}], "-", "i", "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "]"}], ",", "rnum", ",", "k", ",", 
                    "r"}], "]"}]}], ")"}]}], ")"}]}]}]}]}], "}"}], 
          "\[IndentingNewLine]", "&"}], "/@", " ", 
         RowBox[{"AllNeighbourhoods", "[", 
          RowBox[{"k", ",", "r"}], "]"}]}], ",", "1"}], "]"}], ",", "True"}], 
     "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"4.", 
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}]]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.391687330579672*^9, 3.391687335096166*^9}, 
   3.391690736717458*^9, {3.571565193546875*^9, 3.5715651935625*^9}, {
   3.586947280082041*^9, 3.586947280582419*^9}, 3.586947421211371*^9, {
   3.587029583793093*^9, 3.587029625485919*^9}, {3.587029656921547*^9, 
   3.587029658492605*^9}, {3.587029720690215*^9, 3.5870298059942102`*^9}, {
   3.587029844179376*^9, 3.587029903248596*^9}, {3.587030144944355*^9, 
   3.587030164729904*^9}, {3.587030199738257*^9, 3.587030296581146*^9}, {
   3.587030461005389*^9, 3.58703051850648*^9}, {3.58703055284568*^9, 
   3.587030585573467*^9}, {3.587030619640951*^9, 3.58703061997433*^9}, {
   3.587030781268556*^9, 3.587030795521466*^9}, {3.587031047359297*^9, 
   3.587031070327915*^9}, {3.587031127943389*^9, 3.587031144965179*^9}, {
   3.587032178074*^9, 3.587032192505*^9}, {3.587032226970001*^9, 
   3.587032307488*^9}, 3.587032472970001*^9, {3.587032508193*^9, 
   3.58703254504*^9}, 3.587032608833*^9, {3.587032679659*^9, 
   3.587032758129002*^9}, 3.587043771839*^9, {3.587043807126*^9, 
   3.587043840063001*^9}, {3.587044240599*^9, 3.587044242133*^9}, {
   3.5870443084780006`*^9, 3.587044345438001*^9}, {3.587044375742*^9, 
   3.587044379006*^9}, {3.587044975783*^9, 3.587045001894*^9}, {
   3.587045608863*^9, 3.587045651125*^9}, {3.587045898302*^9, 
   3.58704590835*^9}, {3.587045948558*^9, 3.5870459742539997`*^9}, {
   3.58704804883*^9, 3.5870480576940002`*^9}, {3.587054064568*^9, 
   3.587054081745*^9}, 3.587054966909*^9, 3.587055027997*^9, 
   3.587056286416*^9, {3.587056346816*^9, 3.587056418424*^9}, {
   3.587056464319*^9, 3.587056541191*^9}, {3.5870566176540003`*^9, 
   3.587056619423*^9}, {3.587056673406*^9, 3.587056777732001*^9}, {
   3.587056863302*^9, 3.587056867035*^9}, {3.587057312663*^9, 
   3.587057317007*^9}, {3.587057448064*^9, 3.587057475606*^9}, {
   3.58705751388*^9, 3.5870575714780006`*^9}, 3.587057636769*^9, 
   3.587057912976*^9, 3.590489323323875*^9, {3.590489546300116*^9, 
   3.590489557763718*^9}, {3.590490730460311*^9, 3.590490751752939*^9}, {
   3.6180597928896627`*^9, 3.61805979289678*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"8f23bc96-46cb-4d34-9cfe-c53fa30db720"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Reversibility (OBS: There\[CloseCurlyQuote]s a bug in InverseRule, as in \
InverseRule[3915, 2, 1.5].)\
\>", "Subsection",
 CellChangeTimes->{{3.811776079932157*^9, 
  3.811776139493983*^9}},ExpressionUUID->"94492374-fe61-4fbb-986f-\
4a8c491bda89"],

Cell[TextData[{
 "Predicate that says whether ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " (radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 ", ",
 StyleBox["k",
  FontSlant->"Italic"],
 " colour) is reversible. Adapted from the NKS book, page 1017. \n",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": All reversibility related functions should also work for Real-valed \
(multiple of 0.5) ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius. \n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nReversibleRuleQ[3097483878567, 3, 1]  is  True"
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cee68add-214d-414a-a954-a597abc0da08"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReversibleRuleQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxlen", "=", 
       SuperscriptBox["k", 
        RowBox[{"2", "r"}]]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Union", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"CellularAutomaton", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rnum", ",", "k", ",", 
                    RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"i", ",", "k", ",", "len"}], "]"}]}], "]"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{
                   SuperscriptBox["k", "len"], "-", "1"}]}], "}"}]}], "]"}], 
              "]"}], "]"}], "\[NotEqual]", 
            SuperscriptBox["k", "len"]}], ",", 
           RowBox[{"Throw", "[", "False", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"len", ",", "maxlen"}], "}"}]}], "]"}], ";", "True"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.44535500609375*^9, 3.44535500703125*^9}, {
  3.445355042203125*^9, 3.445355067328125*^9}, {3.496773051058*^9, 
  3.496773055017*^9}, {3.498560354037*^9, 3.498560355412*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"b95a9e1a-1d2a-4576-9f98-ab6c2b022825"],

Cell[TextData[{
 "Yields a reversibility measure of the ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, k-",
 StyleBox["colour rnum",
  FontSlant->"Italic"],
 " rule, either as normalised value (default argument ",
 StyleBox["type",
  FontSlant->"Italic"],
 " \"norm\"), or as the absolute value (argument ",
 StyleBox["type",
  FontSlant->"Italic"],
 " \"abs\")\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) The algorithm is directly derived from the ReversibleRuleQ algorithm \
above, and relies on the idea of summing the actual values of  Length[etc] \
that is compared to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "len"], TraditionalForm]],ExpressionUUID->
  "d4c3208a-a842-4c07-a474-d92de699f7cf"],
 ", instead of simply taking into account the number of True's that come out \
of the comparisons.\n2) For k=2, the number of possible values for r=0.5 is \
4, for r=1 is 17, and for r=1.5 is 331 (what's the general form?). With the \
proven upperbound ",
 StyleBox["maxlen",
  FontSlant->"Italic"],
 " =",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["k", 
     RowBox[{"2", "r"}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k", 
       RowBox[{"2", "r"}]], "-", "1"}], ")"}]}], "+", 
   RowBox[{"2", "r"}], "+", "1"}]],
  CellChangeTimes->{{3.445358050546875*^9, 3.445358056296875*^9}, {
   3.445358200109375*^9, 3.44535822603125*^9}},ExpressionUUID->
  "f0308bdb-b640-46cb-b00d-902d75022b76"],
 " (see the NKS book, page 1017), a wider range of ReversibilityDegree values \
would be possible; however, this is not practical, since, for instance, k=2 \
r=2 would entail testing all initial configurations of length up to 245.\n3) \
Non-reversible rules have ReversibilityDegree < ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"len", "=", "1"}], "maxlen"], 
   SuperscriptBox["k", "len"]}]],ExpressionUUID->
  "a367b541-e549-4955-8087-23d5bf73c57d"],
 ". But the ReversibleRuleQ predicate is faster to compute whether a rule is \
not reversible, since it usually does not go over all possible initial \
configurations.\n4) Dyamically equivalent rules seem to yield the same \
ReversibilityDegree value.\n5) No rule is totally non-reversible, the worst \
case being for ",
 StyleBox["rnum ",
  FontSlant->"Italic"],
 "= 0."
}], "Text",
 CellChangeTimes->{{3.445355132890625*^9, 3.445355145296875*^9}, {
  3.44535519778125*^9, 3.445355219359375*^9}, {3.445358260828125*^9, 
  3.445358262890625*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"2f64882e-d36b-4d3d-a937-6551d2fde9eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReversibilityDegree", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_Symbol", ":", "norm"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxlen", "=", 
       SuperscriptBox["k", 
        RowBox[{"2", "r"}]]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{"type", ",", "\[IndentingNewLine]", "norm", ",", 
         RowBox[{"N", "[", 
          RowBox[{"#", "/", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"len", "=", "1"}], "maxlen"], 
            SuperscriptBox["k", "len"]}]}], "]"}], ",", "\[IndentingNewLine]",
          "abs", ",", "#"}], "]"}], "&"}], "[", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"Reap", "[", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"Sow", "@", 
            RowBox[{"Length", "[", 
             RowBox[{"Union", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"CellularAutomaton", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rnum", ",", "k", ",", 
                    RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                  RowBox[{"IntegerDigits", "[", 
                   RowBox[{"i", ",", "k", ",", "len"}], "]"}]}], "]"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{
                   SuperscriptBox["k", "len"], "-", "1"}]}], "}"}]}], "]"}], 
              "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"len", ",", "1", ",", "maxlen"}], "}"}]}], "]"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.44535393903125*^9, 3.445353939203125*^9}, {
  3.445354602546875*^9, 3.445354661390625*^9}, {3.445354861828125*^9, 
  3.4453548715*^9}, {3.44535490446875*^9, 3.44535490596875*^9}, {
  3.496773063731*^9, 3.496773067627*^9}, {3.498560388443*^9, 
  3.498560389579*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"a8f14579-31d3-4076-b3e9-0cab21b9619e"],

Cell[TextData[{
 "Predicate that tells whether the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour rules ",
 StyleBox["rnum1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["rnum2",
  FontSlant->"Italic"],
 ", possibly with different radii (",
 StyleBox["r1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["r2",
  FontSlant->"Italic"],
 ", respectively), are inverse to each other.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nInverseRulesQ[{3097483878567, 3, 1}, {3863160847143, 3, 1}]  yields  \
True\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ":\nThe algorithm just compares the outcomes of the rules on a sufficiently \
long lattice, over a sufficiently high number of timesteps. The default \
values for ",
 StyleBox["length",
  FontSlant->"Italic"],
 " and ",
 StyleBox["timesteps",
  FontSlant->"Italic"],
 " have so far been sufficient, but I cannot guarantee they will remain so \
for any rule, which may entail an increase in their values."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c909b311-b3a0-4d10-9900-c39aa36e6ec9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InverseRulesQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum1_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r1_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rnum2_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r2_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"length_Integer", ":", "10000"}], ",", 
     RowBox[{"timesteps_Integer", ":", "1000"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"forward", "=", 
       RowBox[{"CellularAutomaton", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rnum1", ",", "k", ",", 
           RowBox[{"FlexRadius", "[", "r1", "]"}]}], "}"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}], ",", "length"}], "]"}], ",", 
         "timesteps"}], "]"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"forward", "===", 
        RowBox[{"Reverse", "[", 
         RowBox[{"CellularAutomaton", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum2", ",", "k", ",", 
             RowBox[{"FlexRadius", "[", "r2", "]"}]}], "}"}], ",", 
           RowBox[{"Last", "[", "forward", "]"}], ",", "timesteps"}], "]"}], 
         "]"}]}], ",", "True", ",", "False"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[338]:=",ExpressionUUID->"300aacb4-7192-4436-8473-1369d0b1bf02"],

Cell[TextData[{
 "Yields the inverse rule (if any) of the given ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius, ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour reversible rule; the function returns the number of the inverse \
rule, followed by ",
 StyleBox["k",
  FontSlant->"Italic"],
 " and its radius, which, by the way, may be larger than that of the given \
rule (as happens in the 2nd example below). ",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": This function hasn't been tested extensively; see the implementation \
notes below.\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nInverseRule[3097483878567, 3, 1]  is  {3863160847143, 3, 1}\n\
InverseRule[#, 2, 0.5]& /@ {3, 5, 10, 12} yields  {{85, 2, 1}, {5, 2, 0.5}, \
{10, 2, 0.5}, {170, 2, 1}}\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) This is an heuristic implementation, and, as such, it may yield an \
incorrect answer. Therefore, it is advisable to use InverseRulesQ for \
checking.\n2) The core of the algorithm is based upon evolving the given rule \
for 1 timestep, over an initial configuration defined by a DeBruijn sequence. \
The idea is that this sequence might be smaller as a state sequence sample \
for the derivation of the inverse rule than the sample that would come out \
from a random sequence. I didn't check whether this is really true, but if \
this is correct, this algorithm should be faster than that with the randomly \
generated sequence. \n3) In case of incorrect answer, one possible workaround \
may be to increase the value of the 2nd argument of the \
BinaryDeBruijnSequence function. Currently, it's being assumed to be 2",
 StyleBox["r",
  FontSlant->"Italic"],
 "+3, an heuristic value that has worked fine so far.\n4) The other \
workaround is already accounted for in the code, which is the progressive \
increase of the radius of the inverse rule."
}], "Text",
 CellChangeTimes->{{3.729264962164628*^9, 3.729264963727466*^9}, {
  3.729265018953959*^9, 3.729265352630639*^9}, {3.749912143102076*^9, 
  3.749912144007648*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"27f5ac63-7153-4377-8be7-e33e7e71bb9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InverseRule", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReversibleRuleQ", "[", 
       RowBox[{"rnum", ",", "k", ",", " ", "r"}], "]"}], "===", "True"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"neighbourhoods", ",", "outputs", ",", "transitions", ",", 
         RowBox[{"rinv", "=", "r"}], ",", 
         RowBox[{"smallrinv", "=", "True"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"smallrinv", "==", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"outputs", ",", "neighbourhoods"}], "}"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"#2", ",", 
                    RowBox[{"-", 
                    RowBox[{"\[LeftCeiling]", "rinv", "\[RightCeiling]"}]}]}],
                    "]"}], ",", "#2", ",", 
                  RowBox[{"Take", "[", 
                   RowBox[{"#2", ",", 
                    RowBox[{"\[LeftFloor]", "rinv", "\[RightFloor]"}]}], 
                   "]"}]}], "]"}]}], "}"}], "&"}], "[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"CellularAutomaton", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rnum", ",", "k", ",", 
                  RowBox[{"FlexRadius", "[", "r", "]"}]}], "}"}], ",", 
                RowBox[{"DeBruijnSequence", "[", 
                 RowBox[{"k", ",", 
                  RowBox[{"\[LeftFloor]", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "1", "+", "2"}], 
                   "\[RightFloor]"}]}], "]"}], ",", "1"}], "]"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"transitions", "=", 
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"neighbourhoods", ",", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"#", "+", 
                    RowBox[{"2", "rinv"}]}]}], "}"}]}], "]"}], ",", 
                 RowBox[{
                 "outputs", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "outputs", "]"}], "]"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", 
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "&"}], "/@", "transitions"}], "]"}]}], "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "&"}], "/@", "transitions"}], "]"}], "\[Equal]", 
              SuperscriptBox["k", 
               RowBox[{
                RowBox[{"2", "rinv"}], "+", "1"}]]}], ",", 
             RowBox[{"smallrinv", "=", "False"}], ",", 
             RowBox[{"rinv", "=", 
              RowBox[{"0.5", "+", "rinv"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RnumFromRuleTable", "[", 
           RowBox[{
            RowBox[{"Reverse", "@", "transitions"}], ",", "k"}], "]"}], ",", 
          "k", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Floor", "[", "rinv", "]"}], "<", "rinv"}], ",", "rinv", 
            ",", 
            RowBox[{"Floor", "[", "rinv", "]"}]}], "]"}]}], "}"}]}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     "\"\<The given rule is not reversible.\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729264967766719*^9, 3.729264987389872*^9}, 
   3.74991176243213*^9, 3.74991179456711*^9},
 CellLabel->
  "In[339]:=",ExpressionUUID->"27da23dc-d7aa-4d29-95d9-4c322da43a05"],

Cell["\<\

Partial reversibility classes (PRC) of the elementary space: under \
development...\
\>", "Text",
 CellChangeTimes->{{3.621874103485357*^9, 3.621874180762372*^9}, 
   3.749911748402896*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7527c3be-c1b8-4064-907b-5454bd595a88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"OBS", ":", " ", 
    RowBox[{
     RowBox[{"OutputConjugateRule", "@", "NeighbourhoodConjugateRule"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"NeighbourhoodConjugateRule", "@", "OutputConjugateRule"}], " ", 
     "\[Equal]", " ", "BWEquivalent"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "NeighbourhoodConjugateTransform", "[", "statetransition_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "statetransition", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "0"}], ",", 
          RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", 
       RowBox[{
       "statetransition", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OutputConjugateTransform", "[", "statetransition_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "statetransition", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{
        "statetransition", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OutputConjugateRule", "[", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"RnumFromRuleTable", "[", 
      RowBox[{
       RowBox[{"OutputConjugateTransform", "/@", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "k"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NeighbourhoodConjugateRule", "[", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", "2"}], ",", 
       RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"RnumFromRuleTable", "[", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"NeighbourhoodConjugateTransform", "/@", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], ",", "k"}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PRC", "[", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"k_Integer", ":", " ", "2"}], ",", 
       RowBox[{"r_", ":", " ", "1"}], ",", 
       RowBox[{"type_Symbol", ":", " ", "reps"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"type", ",", "\[IndentingNewLine]", "reps", ",", 
       RowBox[{"{", 
        RowBox[{"rnum", ",", 
         RowBox[{"First", "@", 
          RowBox[{"Sort", "[", 
           RowBox[{"DynamicalEquivalenceClass", "@", 
            RowBox[{"NeighbourhoodConjugateRule", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", "full", ",", 
       RowBox[{"Sort", "@", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"DynamicalEquivalenceClass", "@", 
           RowBox[{"NeighbourhoodConjugateRule", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "rnum"}], 
         "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.608657085125114*^9, 3.608657087787586*^9}, {
   3.609159597025018*^9, 3.609159622086507*^9}, {3.609159723455962*^9, 
   3.609159726669042*^9}, {3.617979633959077*^9, 3.617979645465887*^9}, {
   3.617979773984515*^9, 3.617979813462229*^9}, 3.617979857429556*^9, {
   3.6180462055209084`*^9, 3.618046248450168*^9}, {3.618046399933183*^9, 
   3.618046484577424*^9}, 3.618047516264709*^9, {3.6180485776467743`*^9, 
   3.618048618205851*^9}, {3.618059734856296*^9, 3.618059734882481*^9}, {
   3.618059792856488*^9, 3.618059792870789*^9}, {3.6218740038565683`*^9, 
   3.621874016363854*^9}, {3.621874050892693*^9, 3.62187405999474*^9}, {
   3.6218740923622417`*^9, 3.6218740947584953`*^9}, {3.777824496707354*^9, 
   3.777824555533564*^9}, {3.777888900647404*^9, 3.777888900648328*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"8a85ca80-056b-4e69-828f-64f0aeee60c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Totality", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.56301302889021*^9, 3.563013042229957*^9}, {3.586944153060295*^9, 
  3.586944165883432*^9}, {3.748207789513788*^9, 3.748207791025685*^9}, {
  3.748261356594099*^9, 3.7482613791835318`*^9}, {3.7621019872504187`*^9, 
  3.762101987354382*^9}},ExpressionUUID->"d9648a9c-87a8-4be5-b581-\
c9cdcd3837ea"],

Cell["\<\
A rule is totalistic if the output of all state transitions depend only on \
the sum of the states in all cells of the neighbourhood.\
\>", "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.562583072140625*^9, 
   3.562583101515625*^9}, {3.563012298936698*^9, 3.563012328667257*^9}, {
   3.563012369286828*^9, 3.563012385195709*^9}, {3.563012699431621*^9, 
   3.563012759529418*^9}, 3.563012825022677*^9, 3.5630129977733088`*^9, {
   3.586943825743143*^9, 3.586943911060575*^9}, {3.586943945643607*^9, 
   3.5869439687467003`*^9}, {3.586944175091427*^9, 3.5869442192900248`*^9}, {
   3.74819108549853*^9, 3.748191291252961*^9}, {3.748192404273259*^9, 
   3.748192488278029*^9}, {3.74819298734302*^9, 3.748193036010775*^9}, {
   3.748193675925301*^9, 3.748193692438626*^9}, {3.748261126104333*^9, 
   3.7482612008813963`*^9}, {3.748261232247924*^9, 3.748261241093479*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"18ebe1c4-a5da-41f2-a1f0-dc6c380e06e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TotalisticQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "1", "}"}], "===", 
      RowBox[{"Union", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"(", 
         RowBox[{"Union", "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Total", "@", 
                 RowBox[{"First", "@", "#"}]}], ",", 
                RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
             RowBox[{"RuleTable", "[", 
              RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "&"}]}], "]"}]}], ")"}]}], "]"}]}], ",", "True", ",", "False"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748207161321979*^9, 3.748207164761939*^9}, {
   3.748207210752953*^9, 3.748207230205551*^9}, {3.748207323892517*^9, 
   3.748207343817943*^9}, 3.748207431483883*^9, {3.748207586437138*^9, 
   3.748207603280822*^9}, {3.748207665777137*^9, 3.748207702938785*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"eb3a0d41-5d29-451f-bba0-2721654ecc70"]
}, Closed]],

Cell[CellGroupData[{

Cell["Outer Totality", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.56301302889021*^9, 3.563013042229957*^9}, {3.586944153060295*^9, 
  3.586944165883432*^9}, {3.748191064994676*^9, 3.748191067826198*^9}, {
  3.748261359923263*^9, 3.748261381431074*^9}, {3.762101981851489*^9, 
  3.762101981962379*^9}},ExpressionUUID->"31bbbb38-3eec-4a78-ab3f-\
b7d17aa96a2e"],

Cell[TextData[{
 "Outer totalistic rules are those that depend jointly on the state of the \
central cell and on the sum of the states in the remaining cells; in other \
words, they are totalistic in the neighbourhood, except for the central cell.\
\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": Although it is working for the elementary space, further tests are \
required for other values of ",
 StyleBox["k",
  FontSlant->"Italic"],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.562583072140625*^9, 
   3.562583101515625*^9}, {3.563012298936698*^9, 3.563012328667257*^9}, {
   3.563012369286828*^9, 3.563012385195709*^9}, {3.563012699431621*^9, 
   3.563012759529418*^9}, 3.563012825022677*^9, 3.5630129977733088`*^9, {
   3.586943825743143*^9, 3.586943911060575*^9}, {3.586943945643607*^9, 
   3.5869439687467003`*^9}, {3.586944175091427*^9, 3.5869442192900248`*^9}, {
   3.74819108549853*^9, 3.748191291252961*^9}, {3.748192404273259*^9, 
   3.748192488278029*^9}, {3.74819298734302*^9, 3.748193036010775*^9}, {
   3.748193675925301*^9, 3.748193692438626*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"ff28c7ed-120a-46c2-87ca-5e36c0859e6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OuterTotalisticQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "k", "}"}], "===", 
      RowBox[{"Union", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"Union", "/@", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Total", "@", 
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{"First", "[", "#", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftCeiling]", 
                    RowBox[{"r", "+", "1"}], "\[RightCeiling]"}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{"\[LeftCeiling]", 
                    RowBox[{"r", "+", "1"}], "\[RightCeiling]"}]}], 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"RuleTable", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
          "]"}]}]}], "]"}]}], ",", "True", ",", "False"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.748181941258511*^9, 3.748181952961334*^9}, {
   3.748181986200776*^9, 3.748182048050722*^9}, {3.748182081995124*^9, 
   3.748182111425118*^9}, {3.748182199152346*^9, 3.748182216096328*^9}, {
   3.748182291502329*^9, 3.748182293174815*^9}, {3.748182333008538*^9, 
   3.748182366661661*^9}, {3.748182398555324*^9, 3.748182412796639*^9}, 
   3.748183232860126*^9, {3.748183491160713*^9, 3.748183509914226*^9}, 
   3.74818354500884*^9, {3.748183676021274*^9, 3.748183690252548*^9}, 
   3.748183746788303*^9, {3.74818377841039*^9, 3.748183814216083*^9}, {
   3.748183913014985*^9, 3.748183950364252*^9}, {3.748183993026772*^9, 
   3.748184019788464*^9}, {3.74818407635477*^9, 3.748184087832884*^9}, {
   3.748184128084853*^9, 3.748184129245162*^9}, {3.74818417132067*^9, 
   3.7481841720163236`*^9}, {3.748184340876572*^9, 3.748184384735526*^9}, {
   3.74818459743651*^9, 3.748184598601506*^9}, {3.748184670082223*^9, 
   3.748184673490403*^9}, {3.748184726495253*^9, 3.748184749612953*^9}, {
   3.748185622545326*^9, 3.748185622816671*^9}, {3.748185906118078*^9, 
   3.74818594703102*^9}, {3.748185979465147*^9, 3.7481859949209146`*^9}, {
   3.748186083014727*^9, 3.748186086212016*^9}, {3.748186440273614*^9, 
   3.748186537472674*^9}, 3.748186743578105*^9, {3.748186988835259*^9, 
   3.748187041221327*^9}, {3.748187222950432*^9, 3.748187264554084*^9}, {
   3.748187524822254*^9, 3.748187593149362*^9}, 3.748187638469642*^9},
 CellLabel->
  "In[346]:=",ExpressionUUID->"3702389f-f3fc-4e29-9494-c88938043169"]
}, Closed]],

Cell[CellGroupData[{

Cell["Captivity", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 
  3.562523643883812*^9}},ExpressionUUID->"2e86c404-f3cb-42c1-9ecf-\
27b3dcbf6520"],

Cell[TextData[{
 StyleBox["Captive CA",
  FontWeight->"Bold"],
 ": for state set ",
 StyleBox["S",
  FontSlant->"Italic"],
 " and neighbourhood with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " cells (i.e., (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "c96f850a-e883-45f5-8d85-74c502cdf122"],
 ",..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "0d7ae9f7-d283-4900-8be4-ac22fbf540c5"],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "e1a7e560-a43e-4f8f-91e2-54fe54c4d1c4"],
 "\[Element] ",
 StyleBox["S",
  FontSlant->"Italic"],
 "), all state transitions must respect f(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "42728b64-373e-48f0-b9a1-f8cb4956fb55"],
 ",..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "8f396a91-be47-417a-b105-27ba1c4996e8"],
 ") \[Element] {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "ff3f349c-7bde-4172-895a-eef132b7dbcb"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "c9d9461d-7518-4384-863a-71a29896b4a8"],
 "}."
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.563011968995101*^9, 
   3.563012091861486*^9}, {3.563012149159842*^9, 3.5630122419748797`*^9}, 
   3.563012276361792*^9, {3.563012334891176*^9, 3.563012338439451*^9}, {
   3.563012714200412*^9, 3.563012725689616*^9}, 3.56301337493045*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"011f6207-befc-412b-8ae3-b3e85fd246ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CaptiveQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}], "/@", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", "False"}], "]"}],
      ",", "False", ",", "True"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.562532326168747*^9, {3.5625323811665897`*^9, 3.5625323821336536`*^9}, {
   3.562532704590447*^9, 3.562532708848977*^9}, 3.56258378396875*^9, 
   3.563006710339309*^9, {3.563012819452857*^9, 3.563012822040649*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"b635cb3d-a42e-4fa7-864b-5faaf0240819"]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiset", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
   3.56301302889021*^9, 3.563013042229957*^9}, {3.586944153060295*^9, 
   3.586944165883432*^9}, 
   3.748207795345602*^9},ExpressionUUID->"3e18b540-e190-40e5-82a1-\
26563247963c"],

Cell[TextData[{
 "A CA rule is said to be Multiset if, for state set ",
 StyleBox["S",
  FontSlant->"Italic"],
 " and neighbourhood with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " cells (i.e., (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "9807ca74-4886-4f0e-83fa-2b2f575bd789"],
 ",..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "2e19e1e7-30d9-4484-ac45-044a51a4fb87"],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "ae6e7a7b-6fbf-4dea-8100-ca00ce56e9b6"],
 "\[Element] ",
 StyleBox["S",
  FontSlant->"Italic"],
 "), all state transitions must respect f(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "d4b56997-cae1-4ad6-a07d-c08784827f75"],
 ",..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "d2abf1b9-0b7f-46c7-b180-14e43743a1f3"],
 ") =  f[",
 StyleBox["Permutation",
  FontSlant->"Italic"],
 "(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "1e720b5c-3be6-40fc-aaa9-636877a2e147"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "32b94c46-aa01-413f-bc1d-cbf0ba824fa6"],
 ")]. For k=2, this equates to the rule being Totalistic, but, in general, \
Totalistic rules are a subset of the Multiset rules."
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.562583072140625*^9, 
   3.562583101515625*^9}, {3.563012298936698*^9, 3.563012328667257*^9}, {
   3.563012369286828*^9, 3.563012385195709*^9}, {3.563012699431621*^9, 
   3.563012759529418*^9}, 3.563012825022677*^9, 3.5630129977733088`*^9, {
   3.586943825743143*^9, 3.586943911060575*^9}, {3.586943945643607*^9, 
   3.5869439687467003`*^9}, {3.586944175091427*^9, 3.5869442192900248`*^9}, {
   3.748191348130216*^9, 3.748191348938567*^9}, {3.748193248485637*^9, 
   3.7481932890714426`*^9}, {3.748193858055356*^9, 3.748194103331339*^9}, {
   3.74819416660655*^9, 3.7481941705345716`*^9}, {3.7482078353702188`*^9, 
   3.748207878968047*^9}, {3.748261040026945*^9, 3.748261105101987*^9}, {
   3.748261291128921*^9, 3.748261324876415*^9}, 3.779622113715972*^9, {
   3.811698929255593*^9, 3.8116989643638973`*^9}, {3.811699038595852*^9, 
   3.811699043579802*^9}, {3.811699115734186*^9, 3.811699120211212*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"51caebd7-7682-4f0d-ba91-b8d3126f3f31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MultisetQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "1", "}"}], "===", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Union", "[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Last", "/@", "#"}], ")"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{"RuleTable", "[", 
             RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}], "&"}]}], "]"}]}], ")"}]}], "]"}]}], ",", "True", ",", 
     "False"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.562524104060341*^9, 3.562524127630128*^9}, 
   3.562524315473809*^9, {3.562530909673842*^9, 3.5625309170057945`*^9}, {
   3.562583032390625*^9, 3.5625830359375*^9}, {3.651658257534825*^9, 
   3.651658287017912*^9}, 3.748207799915719*^9},
 CellLabel->
  "In[348]:=",ExpressionUUID->"d4d07f07-6919-4b2a-9345-26adade7f817"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spreading State", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.563013010051322*^9, 
  3.563013015479396*^9}},ExpressionUUID->"9a4e605e-7c88-46c0-9368-\
6fec6c42c724"],

Cell[TextData[{
 StyleBox["Spreading state",
  FontWeight->"Bold"],
 ": for state set ",
 StyleBox["S",
  FontSlant->"Italic"],
 " and neighbourhood with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " cells (i.e., (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "e32ee8bb-d98c-47ac-9eb2-1106696a386a"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "ea3c43cc-7df0-45f8-9fe1-e173acfc4b94"],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "1f6d08c6-6848-40f2-8726-bdb4d53fe17a"],
 "\[Element] ",
 StyleBox["S",
  FontSlant->"Italic"],
 "), ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["s", "s"], "is", " ", 
     StyleBox["a",
      FontSlant->"Plain"], " ", "spreading", " ", "state"}], " ", 
    "\[DoubleLeftRightArrow]", " "}], TraditionalForm]],ExpressionUUID->
  "c9182241-7c12-4078-b600-ad0d6c0205b3"],
 "f(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "804ce064-823b-464c-8f5d-8ec374c65fea"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "d1871cd4-c1e2-4452-86ee-e6a8ccdc1cfc"],
 ") = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "s"], TraditionalForm]],ExpressionUUID->
  "f7d88e8e-db12-4607-94d2-29307bd43133"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"when", " ", 
    SubscriptBox["s", "s"]}], TraditionalForm]],ExpressionUUID->
  "7b2c7869-5ab5-40c8-8c77-49e021f1b7d5"],
 "\[Element] {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "610ab666-6309-4556-910e-7ceb15c0c633"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "c028cf93-82ac-4e59-ae56-c5931b45ff81"],
 "} and f(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "73fc4aac-5039-4c9f-84df-e05645dc37ac"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "d966afde-52b3-48ab-93ed-b5b086bcb953"],
 ") \[NotEqual] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "s"], TraditionalForm]],ExpressionUUID->
  "aa8fc994-52b5-4086-9d6f-0dc8888d02ee"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"when", " ", 
    SubscriptBox["s", "s"]}], TraditionalForm]],ExpressionUUID->
  "0feeeafe-1c53-4eea-bdc6-dc5efafc2803"],
 " \[NotElement] {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "543d00d2-0e14-4f0f-8eb8-b8c6e682e56e"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]],ExpressionUUID->
  "372447ac-459b-41f0-9910-68f2c513031d"],
 "}.\nThe function SpreadingStateQ determines whether the given rule has a \
spreading state, and SpreadingState returns the actual spreading state of the \
rule, if any.  \nOBS: There can only exist a single spreading state, for any \
CA.\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nSpreadingStateQ[128] => True\nSpreadingStateQ[19485, 3, 0.5] => True"
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.562583072140625*^9, 
   3.562583101515625*^9}, 3.562583502796875*^9, {3.563011725262339*^9, 
   3.5630117252632008`*^9}, {3.563012430095622*^9, 3.563012448030507*^9}, {
   3.5630124979314213`*^9, 3.563012596310892*^9}, {3.563012639261064*^9, 
   3.563012675789768*^9}, {3.563012738225553*^9, 3.563012749318764*^9}, 
   3.5630128276537313`*^9, 3.563013006822782*^9, {3.56301341224006*^9, 
   3.563013539279429*^9}, {3.563014597047207*^9, 3.563014642362856*^9}, {
   3.714939848031001*^9, 3.714939879113282*^9}, {3.714939938855174*^9, 
   3.714939972091249*^9}, {3.7149400230271473`*^9, 3.714940026317211*^9}, {
   3.714940078130495*^9, 3.714940108184207*^9}, {3.714940142893229*^9, 
   3.714940171281273*^9}, {3.7149414251783257`*^9, 3.714941451399504*^9}, {
   3.715003943879583*^9, 3.715003946928097*^9}, {3.715004280634262*^9, 
   3.71500432644319*^9}, {3.7150047515780573`*^9, 3.715004775091655*^9}, {
   3.71501170870257*^9, 3.71501177551685*^9}, {3.715011830149475*^9, 
   3.715011892968804*^9}, {3.715011937464392*^9, 3.715012010510754*^9}, {
   3.908894426181636*^9, 3.908894466497993*^9}, {3.908894532658751*^9, 
   3.908894630931774*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4904f319-bc83-4f07-a6ff-dfddb677df4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpreadingStateQ", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", "2"}], ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"outState", "=", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"#", ",", "outState"}], "]"}], "&"}], "/@", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Not]", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"#", ",", "outState"}], "]"}]}], "&"}], "/@", 
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"Tuples", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                  RowBox[{"\[LeftFloor]", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], 
                 "]"}], ",", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "]"}]}], "]"}]}], "}"}]}], "]"}], "&"}], 
       "\[IndentingNewLine]", "/@", 
       RowBox[{"RuleTablePartitioned", "[", 
        RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "True", "}"}], ",", 
        RowBox[{"{", "True", "}"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SpreadingState", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pos", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"outState", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"#", ",", "outState"}], "]"}], "&"}], "/@", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Not]", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", "outState"}], "]"}]}], "&"}], "/@", 
                 RowBox[{"Complement", "[", 
                  RowBox[{
                   RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"\[LeftFloor]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], 
                    "]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Reverse", "@", 
           RowBox[{"RuleTablePartitioned", "[", 
            RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "True", "}"}], ",", 
           RowBox[{"{", "True", "}"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pos", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"pos", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", "1"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.562584497375*^9, 3.562584538296875*^9}, {
   3.56258493159375*^9, 3.562584947109375*^9}, {3.562956389972642*^9, 
   3.562956474103747*^9}, 3.562956505277964*^9, 3.563012786205533*^9, {
   3.5630333235722847`*^9, 3.5630333241971292`*^9}, {3.563359806648669*^9, 
   3.563359808048567*^9}, {3.563359849448983*^9, 3.563359850527698*^9}, {
   3.563359884123788*^9, 3.563359885491333*^9}, 3.715004173825972*^9, {
   3.715004227949678*^9, 3.715004235777534*^9}, {3.715004719100564*^9, 
   3.715004728887439*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"19801db8-a28c-415a-82f9-4bc88c8309b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Permutiveness", "Subsection",
 CellChangeTimes->{{3.5625236364893646`*^9, 3.562523643883812*^9}, {
  3.563013010051322*^9, 3.563013015479396*^9}, {3.8065162801555643`*^9, 
  3.806516282574418*^9}},ExpressionUUID->"7cf1ede9-3dc5-4358-b983-\
b4ad2e1f5a08"],

Cell[TextData[{
 "The CA rule f: ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["S", "n"], TraditionalForm]],ExpressionUUID->
  "37f8697e-179f-49cc-b543-7702fff1c59d"],
 " \[Rule] ",
 StyleBox["S",
  FontSlant->"Italic"],
 " with state set S is ",
 StyleBox["left-",
  FontSlant->"Italic"],
 "permutive, if for any ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "9d6b6505-1f36-4630-a2c6-2dfd816d8708"],
 " \[Element] ",
 StyleBox["S",
  FontSlant->"Italic"],
 " and all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["s", "1"]}], TraditionalForm]],ExpressionUUID->
  "ea14d1f1-87e1-4b72-ab2e-8fc25f5979b5"],
 StyleBox[", ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "f64953b9-bb75-46f2-8edc-a7e3c69d7e93"],
 StyleBox[", ..., ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{"n", "-", "1"}]], TraditionalForm]],ExpressionUUID->
  "faaa5565-cfa5-418e-899a-58aa0fa8c909"],
 ") ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["S", 
    RowBox[{"n", "-", "1"}]], TraditionalForm]],ExpressionUUID->
  "c197b997-6c24-4cc9-bd9c-8ca1105e8be0"],
 ", the map ",
 StyleBox["s",
  FontSlant->"Italic"],
 " \[RightTeeArrow] f",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"s", ",", 
     SubscriptBox["s", "1"]}]}], TraditionalForm]],ExpressionUUID->
  "4c22b3fb-f751-474b-8c62-b084e9962f3e"],
 StyleBox[", ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "47a3f490-ed00-4065-b331-d72cd7007fb0"],
 StyleBox[", ..., ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{"n", "-", "1"}]], TraditionalForm]],ExpressionUUID->
  "4a07c452-9592-4cfc-a949-b8f03b2c408e"],
 ") is a permutation of ",
 StyleBox["S",
  FontSlant->"Italic"],
 ". Analogously, the rule is ",
 StyleBox["right-",
  FontSlant->"Italic"],
 "permutive when the map is ",
 StyleBox["s",
  FontSlant->"Italic"],
 " \[RightTeeArrow] f",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["s", "1"]}], TraditionalForm]],ExpressionUUID->
  "3e9508f6-aee9-4236-a9a3-ade711aad0e8"],
 StyleBox[", ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "b542d950-68c8-4a2b-a429-531e562d61f1"],
 StyleBox[", ..., ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{"n", "-", "1"}]], TraditionalForm]],ExpressionUUID->
  "d6b7bae5-44f2-4db0-8541-ebb96b3bc782"],
 ", ",
 StyleBox["s",
  FontSlant->"Italic"],
 "). The rule is bipermutive when it is both left- and right-permutive.\n\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nIn: Select[Range[0,255], PermutiveQ[#,2,1,left]&];\n     \
GatherBy[%,Sort@DynamicalEquivalenceClass[#,2,1]&]\nOut: \
{{15},{30,135},{45,75},{60,195},{90,165},{105},{120,225},{150},{180,210},{240}\
}\n\nIn: Select[Range[0,255], PermutiveQ[#,2,1,right]&];\n     \
GatherBy[%,Sort@DynamicalEquivalenceClass[#,2,1]&]\nOut: \
{{85},{86,149},{89,101},{90,165},{102,153},{105},{106,169},{150},{154,166},{\
170}}\n\nIn: Select[Range[0,255], BiPermutiveQ[#,2,1]&];\n     \
GatherBy[%,Sort@DynamicalEquivalenceClass[#,2,1]&]\nOut: \
{{90,165},{105},{150}}"
}], "Text",
 CellChangeTimes->{{3.5625236980317597`*^9, 3.5625237394500246`*^9}, {
   3.562524012199008*^9, 3.562524049682925*^9}, {3.562583072140625*^9, 
   3.562583101515625*^9}, 3.562583502796875*^9, {3.563011725262339*^9, 
   3.5630117252632008`*^9}, {3.563012430095622*^9, 3.563012448030507*^9}, {
   3.5630124979314213`*^9, 3.563012596310892*^9}, {3.563012639261064*^9, 
   3.563012675789768*^9}, {3.563012738225553*^9, 3.563012749318764*^9}, 
   3.5630128276537313`*^9, 3.563013006822782*^9, {3.56301341224006*^9, 
   3.563013539279429*^9}, {3.563014597047207*^9, 3.563014642362856*^9}, {
   3.714939848031001*^9, 3.714939879113282*^9}, {3.714939938855174*^9, 
   3.714939972091249*^9}, {3.7149400230271473`*^9, 3.714940026317211*^9}, {
   3.714940078130495*^9, 3.714940108184207*^9}, {3.714940142893229*^9, 
   3.714940171281273*^9}, {3.7149414251783257`*^9, 3.714941451399504*^9}, {
   3.715003943879583*^9, 3.715003946928097*^9}, {3.715004280634262*^9, 
   3.71500432644319*^9}, {3.7150047515780573`*^9, 3.715004775091655*^9}, {
   3.71501170870257*^9, 3.71501177551685*^9}, {3.715011830149475*^9, 
   3.715011892968804*^9}, {3.715011937464392*^9, 3.715012010510754*^9}, {
   3.806516305508851*^9, 3.80651642985557*^9}, {3.806516508049044*^9, 
   3.806516649549699*^9}, {3.806516688059272*^9, 3.806516733021311*^9}, {
   3.806516780940262*^9, 3.806516813941744*^9}, {3.8065168552070417`*^9, 
   3.806517032188752*^9}, {3.806517067894678*^9, 3.806517399924667*^9}, {
   3.80651743118498*^9, 3.806517460555314*^9}, {3.806517555737462*^9, 
   3.806517570367158*^9}, {3.806517746082885*^9, 3.80651780638269*^9}, {
   3.80651789416719*^9, 3.8065180109430027`*^9}, {3.8087348071088057`*^9, 
   3.808734823713798*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"8b5541c1-e4c0-4e8e-b173-0b50121d6ee8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BiPermutiveQ", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"k_Integer", ":", " ", "2"}], ",", 
      RowBox[{"r_", ":", " ", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PermutiveQ", "[", 
        RowBox[{"rnum", ",", "k", ",", "r", ",", "left"}], "]"}], "\[And]", 
       RowBox[{"PermutiveQ", "[", 
        RowBox[{"rnum", ",", "k", ",", "r", ",", "right"}], "]"}]}], ",", 
      "True", ",", "False"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PermutiveQ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", " ", "2"}], ",", 
     RowBox[{"r_", ":", " ", "1"}], ",", 
     RowBox[{"direction_", "/;", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"left", ",", "right"}], "}"}], ",", "direction"}], "]"}]}]}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tuples", ",", "outputs", ",", "perms"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tuples", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"k", "-", "1"}], ",", "0", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"\[LeftCeiling]", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{"direction", ",", "left", ",", 
            RowBox[{"Rest", "[", "#", "]"}], ",", "right", ",", 
            RowBox[{"Most", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputs", "=", 
       RowBox[{"Sort", "/@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RuleOutputFromNeighbourhood", "[", 
            RowBox[{"#", ",", "rnum", ",", "k", ",", "r"}], "]"}], "&"}], ",",
           "tuples", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"perms", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], "\[Equal]", "#"}], ",", 
           "True", ",", "False"}], "]"}], "&"}], "/@", "outputs"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Union", "[", "perms", "]"}], "\[Equal]", 
         RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], "]"}]}]}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.80640041095072*^9, {3.806400827673228*^9, 3.8064010035557*^9}, 
   3.80640111918126*^9, {3.806487988342956*^9, 3.806488057567717*^9}, {
   3.806488101427144*^9, 3.806488113701328*^9}, {3.806488150452748*^9, 
   3.8064881513572397`*^9}, {3.806488225139843*^9, 3.806488275529461*^9}, {
   3.806488322071509*^9, 3.806488374437955*^9}, {3.806488411005655*^9, 
   3.806488438312615*^9}, {3.806488551620604*^9, 3.806488587478505*^9}, {
   3.806488664373409*^9, 3.806488665797368*^9}, {3.808734382950008*^9, 
   3.808734477650633*^9}, {3.808734543137884*^9, 3.808734651442261*^9}, {
   3.808734744729442*^9, 3.808734757046583*^9}, {3.808734831254459*^9, 
   3.808734832131854*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"f8332cfb-118a-41ae-a5cc-7d4e6e48d7b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamical Behaviour", "Subsection",
 CellChangeTimes->{{3.44534209146875*^9, 
  3.445342091953125*^9}},ExpressionUUID->"131d1cd6-af2f-4ebb-a3d4-\
cbf4ec306007"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["AAlpha",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.445341721*^9, 3.445341747890625*^9}, {
   3.445342046765625*^9, 3.445342047703125*^9}, 
   3.445951958796875*^9},ExpressionUUID->"50725f5b-641a-4501-a4cd-\
b123a64b56f8"],

Cell[TextData[{
 "The parameter from: A. Schranko and P.P.B. de Oliveira. \
\[OpenCurlyDoubleQuote]Relationships between local dynamics and global \
reversibility of multidimensional cellular automata with hyper-rectangular \
neigh",
 "bourhood",
 "s\[CloseCurlyDoubleQuote] (unpublished).\n",
 StyleBox["Example of usage",
  FontWeight->"Bold"],
 ":\nAlpha[77, 2, 1] is 0.40625\nAlpha[77, 2, {{0}, {1}, {2}}] is 0.40625\n\
Alpha[6, 2, {{-1}, {0}}] is 0.25\nAlpha[184, 2, {{-1}, {3}, {5}}] is 0.375\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": These are the implementations made by Angelo. Both versions are \
generalised, for any radius, the second one being general even for non-local \
neighbourhoods."
}], "Text",
 CellChangeTimes->{{3.445341828765625*^9, 3.44534184503125*^9}, {
   3.445341908203125*^9, 3.445341945328125*^9}, {3.445342132515625*^9, 
   3.445342167890625*^9}, {3.4453600829375*^9, 3.44536013025*^9}, {
   3.4453627134375*^9, 3.44536272634375*^9}, {3.445363387484375*^9, 
   3.445363450265625*^9}, {3.44536377053125*^9, 3.445363868*^9}, {
   3.445363975015625*^9, 3.44536398175*^9}, {3.445364084515625*^9, 
   3.445364085390625*^9}, {3.445364131375*^9, 3.445364158546875*^9}, {
   3.445419363109375*^9, 3.44541940321875*^9}, {3.445952014*^9, 
   3.445952074953125*^9}, {3.4798379172604*^9, 3.4798379262616*^9}, 
   3.611052805876185*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"40e75df3-89dd-4faf-950a-2157aa4c62ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["AAlpha",
     FontSize->14], "[", 
    RowBox[{"rnum_Integer", ",", " ", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "+", 
                  "1"}], ",", 
                 RowBox[{
                  RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}], "+", 
                  RowBox[{"2", "r"}], "+", "1"}]}], "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rnum", ",", "k", ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "i", "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"2", "r"}]}], "}"}]}], "]"}]}], "}"}], ",", "#"}],
                 "]"}], "&"}], "/@", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"4", "r"}], "+", "1"}]}], "]"}]}], ")"}]}], ",", " ",
            "#"}], "]"}], "&"}], "/@", " ", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"k", "-", "1"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}]}], "]"}]}], "]"}], "]"}], "/", " ", 
     RowBox[{"k", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", "r"}], "+", "1"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.4453561828901253`*^9, 3.4453567952026253`*^9, {3.445359958828125*^9, 
   3.445360002625*^9}, 3.4453600575625*^9, {3.445417697515625*^9, 
   3.44541776815625*^9}, 3.44595194140625*^9},
 CellLabel->
  "In[353]:=",ExpressionUUID->"f65b19e5-0430-4fd0-afcd-33103b222c6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["AAlpha",
     FontSize->14], "[", 
    RowBox[{"rnum_Integer", ",", " ", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", "neighbourhood_List"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"neighlen", "=", 
       RowBox[{"Length", "[", "neighbourhood", "]"}]}], "}"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[LeftCeiling]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"neighlen", "-", "1"}], ")"}], "/", "2"}], 
                    "\[RightCeiling]"}], "+", "1"}], ",", 
                   RowBox[{
                    RowBox[{"\[LeftCeiling]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"neighlen", "-", "1"}], ")"}], "/", "2"}], 
                    "\[RightCeiling]"}], "+", "neighlen"}]}], "}"}]}], "]"}], 
               "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"CellularAutomaton", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"rnum", ",", "k", ",", "neighbourhood"}], "}"}], 
                   ",", "#"}], "]"}], "&"}], "/@", 
                RowBox[{"Tuples", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"neighlen", "-", "1"}], ")"}], "/", "2"}], 
                    ")"}]}], "+", "1"}]}], "]"}]}], ")"}]}], ",", " ", "#"}], 
            "]"}], "&"}], "/@", " ", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"k", "-", "1"}]}], "]"}], ",", "neighlen"}], "]"}]}], 
         "]"}], "]"}], "/", " ", 
       RowBox[{"k", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"neighlen", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "+",
           "1"}], ")"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.4453561828901253`*^9, {3.4453562677182508`*^9, 3.445356286296376*^9}, {
   3.4453563714682503`*^9, 3.4453564121870003`*^9}, {3.445356482546376*^9, 
   3.4453566071870008`*^9}, {3.445356746249501*^9, 3.4453567571088753`*^9}, 
   3.4453567998432503`*^9, {3.44536001878125*^9, 3.445360052109375*^9}, 
   3.4453601439375*^9, {3.445417041640625*^9, 3.445417108296875*^9}, {
   3.445417297234375*^9, 3.4454173479375*^9}, {3.44541754209375*^9, 
   3.4454175441875*^9}, {3.4454176248125*^9, 3.44541762765625*^9}, 
   3.445417660171875*^9, 3.44595194334375*^9},
 CellLabel->
  "In[354]:=",ExpressionUUID->"ac5581b2-f44a-458a-995a-2f6114bf4c82"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Lambda",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"753a3a23-6b0a-49fa-a62d-b6399762d884"],

Cell["Chris Langton\.b4s \"temperature\" or \"activity\" parameter.", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"b3ac961b-9ad1-4992-a066-12c4266cb9d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Lambda", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"29116f37-8737-4b23-b34a-26ae398d86a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LambdaNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"Lambda", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], 
     SuperscriptBox["k", 
      RowBox[{
       RowBox[{"2", "r"}], " ", "+", " ", "1"}]]], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[356]:=",ExpressionUUID->"07775c3e-b087-488d-8917-2d9e4561cc6f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Z",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"ba948599-1067-4e5f-b86a-210cb167cde4"],

Cell[TextData[{
 "Andy Wuensche\.b4s Z parameter, according to the formula presented in ",
 StyleBox["Classifying cellular automata automatically",
  FontSlant->"Italic"],
 ", Santa Fe Institute Working Paper 98-02-018, 1998 (with the correction I \
spotted that Rleft\[LeftDoubleBracket]kk-1\[RightDoubleBracket] and Rright\
\[LeftDoubleBracket]kk-1\[RightDoubleBracket] should be replaced, \
respectively, by Rleft\[LeftDoubleBracket]kk-i\[RightDoubleBracket] and \
Rright\[LeftDoubleBracket]kk-i\[RightDoubleBracket]). Works for integer or \
0.5-radius ",
 StyleBox["r.",
  FontSlant->"Italic"],
 " The function ZZ is just the output of {Z, Zleft, Zright}\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": Only works for k=2. For a correction, ZPatterns should be checked for \
whether Range[0, k-1] is general enough, for k>2.\n",
 StyleBox["Here are some rules for future test, with k=3",
  FontVariations->{"Underline"->True}],
 ":\nr=1, k=3: 111021012100211002220210010\nZleft=0.518519, Zright=0.37037\n\n\
ZZ[FromDigits[IntegerDigits[111021012100211002220210010],3],3,1]\n{0.222222, \
0.}\n\nr=2, k=3: \
122210020011020021201200110200211021102122200221011022010221100122122211012221\
202212011200120221110022222121221111012102202002010000120111100220020000220020\
002220212002012111210100000120022001110100011222122121002022222221212102011102\
120220210\nZleft=0.436214, Zright=0.465021\n\n\
ZZ[FromDigits[IntegerDigits[\
122210020011020021201200110200211021102122200221011022010221100122122211012221\
202212011200120221110022222121221111012102202002010000120111100220020000220020\
002220212002012111210100000120022001110100011222122121002022222221212102011102\
120220210],3],3,2]\n{0.0740741, 0.0740741}"
}], "Text",
 CellChangeTimes->{{3.4459452273125*^9, 3.445945296375*^9}, {
  3.8739836899460287`*^9, 3.873983690994296*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"661e9c04-7881-4dde-ae87-b6756ee63140"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NeighPatterns", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"_", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1", "-", 
              RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], "]"}], 
        "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"AllNeighbourhoods", "[", 
        RowBox[{"k", ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "r", ",", "0.5"}], "]"}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"600e3cb1-74ea-4756-87c8-77564a7fae87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquivNeighPatterns", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", "=", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}],
        ",", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "i", "}"}]}], "]"}], "&"}]}], "]"}]}], "]"}], "&"}], 
    "/@", 
    RowBox[{"MapThread", "[", 
     RowBox[{"List", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}]}], "]"}], ",", 
        RowBox[{"NeighPatterns", "[", 
         RowBox[{"k", ",", "r"}], "]"}]}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.575970482465154*^9},
 CellLabel->
  "In[358]:=",ExpressionUUID->"e5315ff5-4421-4b5f-8b8e-a33250e0ec47"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZPatterns", "[", 
    RowBox[{
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"k", "-", "1"}]}], "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"Reverse", "@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"k", "-", "1"}]}], "]"}]}]}], "}"}]}], "]"}]}], 
           "}"}], "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
      RowBox[{"EquivNeighPatterns", "[", 
       RowBox[{"k", ",", "r"}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[359]:=",ExpressionUUID->"69bb7eb0-2c77-49e8-8f23-e5b55ea885b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", "dir_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Flatten", "[", "#", "]"}], "]"}], "/", 
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}]]}], "&"}], "/@", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"neighbsizeref", "=", "#1"}], ",", 
           RowBox[{"rtableentriesofpattern", "=", "#2"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "]"}], "===", 
              "neighbsizeref"}], ",", "neighbsizeref", ",", "0"}], "]"}], 
           "&"}], "/@", "rtableentriesofpattern"}]}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[LeftCeiling]", 
           SuperscriptBox["k", "i"], "\[RightCeiling]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{"RuleTable", "[", 
                   RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", "#"}], 
                 "]"}], "&"}], "/@", "#"}], ")"}], "&"}], "/@", "#"}], ")"}], 
          "&"}], "/@", 
         RowBox[{"Switch", "[", 
          RowBox[{"dir", ",", "\[IndentingNewLine]", "left", ",", 
           RowBox[{"ZPatterns", "[", 
            RowBox[{"k", ",", "r"}], "]"}], ",", "\[IndentingNewLine]", 
           "right", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", "#"}], 
                 ")"}], "&"}], "/@", "#"}], ")"}], "&"}], "/@", 
            RowBox[{"ZPatterns", "[", 
             RowBox[{"k", ",", "r"}], "]"}]}]}], "]"}]}]}], "}"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[360]:=",ExpressionUUID->"d7cdf3be-382e-49d3-8dab-3d2a1d9f8064"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rleft", "=", 
        RowBox[{"R", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "left"}], "]"}]}], ",", " ", 
       RowBox[{"Rright", "=", 
        RowBox[{"R", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "right"}], "]"}]}], ",", 
       " ", 
       RowBox[{"kk", "=", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]}], ",", "Zleft", ",", "Zright"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Zleft", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{
         "Rleft", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], 
           RowBox[{"kk", "-", "1"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Rleft", "\[LeftDoubleBracket]", 
             RowBox[{"kk", "-", "i"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", 
               RowBox[{"kk", "-", "i", "+", "1"}]}], "kk"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
               "Rleft", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Zright", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{
         "Rright", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], 
           RowBox[{"kk", "-", "1"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Rright", "\[LeftDoubleBracket]", 
             RowBox[{"kk", "-", "i"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", 
               RowBox[{"kk", "-", "i", "+", "1"}]}], "kk"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
               "Rright", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Max", "[", 
       RowBox[{"Zleft", ",", "Zright"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395130729754312*^9, 3.3951307437244*^9}, 
   3.44594519046875*^9},
 CellLabel->
  "In[361]:=",ExpressionUUID->"4b1f0148-650f-4bc4-821b-a0bc0d2b2566"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZZ", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rleft", "=", 
        RowBox[{"R", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "left"}], "]"}]}], ",", " ", 
       RowBox[{"Rright", "=", 
        RowBox[{"R", "[", 
         RowBox[{"rnum", ",", "k", ",", "r", ",", "right"}], "]"}]}], ",", 
       " ", 
       RowBox[{"kk", "=", 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]}], ",", "Zleft", ",", "Zright"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Zleft", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{
         "Rleft", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], 
           RowBox[{"kk", "-", "1"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Rleft", "\[LeftDoubleBracket]", 
             RowBox[{"kk", "-", "i"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", 
               RowBox[{"kk", "-", "i", "+", "1"}]}], "kk"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
               "Rleft", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Zright", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{
         "Rright", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], 
           RowBox[{"kk", "-", "1"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Rright", "\[LeftDoubleBracket]", 
             RowBox[{"kk", "-", "i"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", 
               RowBox[{"kk", "-", "i", "+", "1"}]}], "kk"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
               "Rright", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Zleft", ",", "Zright"}], "]"}], ",", "Zleft", ",", 
        "Zright"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395130729754312*^9, 3.3951307437244*^9}, 
   3.44594518415625*^9},
 CellLabel->
  "In[362]:=",ExpressionUUID->"a10d7ce8-533e-423b-9a53-793f7d436de4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Sensitivity",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"18ad5643-fe09-4e74-8e33-5d16a28c5b83"],

Cell[TextData[{
 StyleBox["Implementation Note",
  FontWeight->"Bold"],
 ": Does not work for k>2, because ",
 "BooleanDerivative uses ",
 "Flip, which is not defined for k>2. Requires generalisation."
}], "Text",
 CellChangeTimes->{{3.40705363784375*^9, 3.407053715828125*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"8854ffe0-7be9-451a-a01e-e7c9af4fe031"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sensitivity", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"pos", "=", "1"}], 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]], 
       RowBox[{"BooleanDerivative", "[", 
        RowBox[{"#", ",", "pos", ",", "rnum", ",", "k", ",", "r"}], "]"}]}], 
      "&"}], "  ", "/@", " ", 
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"b1d3a375-bc8f-4bfc-ab65-1fd930b91e2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SensitivityNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"Sensitivity", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], 
     RowBox[{
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"2", "r"}], " ", "+", " ", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}], ")"}]}]], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"3ce82d53-b3ae-4d92-a566-fd02feabb4b7"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Neighbourhood Dominance",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"fa968454-bf7c-49dc-a14d-9c0ab1c51930"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDominance", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "+", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}]}]}], "]"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "<", 
            RowBox[{"(", 
             RowBox[{"r", "+", "1"}], ")"}]}], " ", "\[And]", " ", 
           RowBox[{
            RowBox[{"RuleOutputFromNeighbourhood", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", "0"}]}], 
          ",", " ", "1", ",", "0"}], "]"}]}], "&"}], "  ", "/@", " ", 
      RowBox[{"RuleTable", "[", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], " ", "+", " ", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "-", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}]}]}], "]"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{"r", "+", "1"}], ")"}]}], " ", "\[And]", " ", 
           RowBox[{
            RowBox[{"RuleOutputFromNeighbourhood", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", "1"}]}], 
          ",", " ", "1", ",", "0"}], "]"}]}], "&"}], " ", "/@", " ", 
      RowBox[{"RuleTable", "[", 
       RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.57156519375*^9, 3.571565193765625*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"6e2e96b7-bb17-4d72-b38b-1dd6dfde8498"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDominanceNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"NDominance", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], 
     RowBox[{"2", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"pos", "=", "0"}], "r"], 
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], ",", "pos"}], "]"}], 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], ",", 
          RowBox[{"pos", "+", "r", "+", "1"}]}], "]"}]}]}]}]], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[366]:=",ExpressionUUID->"75d33f37-cb49-42b9-b6d4-78162e5991b9"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Absolute Activity",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"f2bc2212-75cb-4f3f-a8ea-228952a48d01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteActivity", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RuleOutputFromNeighbourhood", "[", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            "rnum", ",", "k", ",", "r"}], "]"}], "\[NotEqual]", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", 
            RowBox[{"r", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ",", " ", 
         "1", ",", " ", "0"}], "]"}], " ", "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"pos", "=", "1"}], "r"], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RuleOutputFromNeighbourhood", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[NotEqual]", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}]}], " ", 
           "\[Or]", " ", 
           RowBox[{
            RowBox[{"RuleOutputFromNeighbourhood", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[NotEqual]", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "2", "-", "pos"}]}], 
             "\[RightDoubleBracket]"}]}]}], ",", " ", "1", ",", " ", "0"}], 
         "]"}]}]}], "&"}], "\[IndentingNewLine]", "/@", " ", 
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.57156519378125*^9, 3.571565193796875*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"69db24a2-9e9b-4610-825f-36f437f1f52f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteActivityNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"AAmin", ",", "AAmax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AAmin", " ", "=", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"pos", "=", "1"}], 
              RowBox[{"r", "+", "1"}]], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "0"}], " ", "\[Or]", " ", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "2", "-", "pos"}]}], 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}]}], ",", " ", 
               "1", ",", " ", "0"}], "]"}]}], ",", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"pos", "=", "1"}], 
              RowBox[{"r", "+", "1"}]], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "1"}], " ", "\[Or]", " ", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "2", "-", "pos"}]}], 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", " ", 
               "1", ",", " ", "0"}], "]"}]}]}], "]"}], "&"}], "  ", "/@", " ", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AAmax", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"pos", "=", "1"}], 
              RowBox[{"r", "+", "1"}]], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "0"}], " ", "\[Or]", " ", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "2", "-", "pos"}]}], 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}]}], ",", " ", 
               "1", ",", " ", "0"}], "]"}]}], ",", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"pos", "=", "1"}], 
              RowBox[{"r", "+", "1"}]], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "1"}], " ", "\[Or]", " ", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"2", "r"}], "+", "2", "-", "pos"}]}], 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", " ", 
               "1", ",", " ", "0"}], "]"}]}]}], "]"}], "&"}], "  ", "/@", " ", 
         RowBox[{"RuleTable", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"N", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"AbsoluteActivity", "[", 
          RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], "-", "AAmin"}], 
        RowBox[{"AAmax", " ", "-", " ", "AAmin"}]], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[368]:=",ExpressionUUID->"bd261c61-b019-44e1-98da-fd118165357f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Activity Propagation",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"52c35891-908b-4dd1-aa7d-d6b723a81b96"],

Cell[TextData[{
 StyleBox["Implementation Note",
  FontWeight->"Bold"],
 ": Does not work for k>2, because ",
 "BooleanDerivative uses ",
 "Flip, which is not defined for k>2. Requires generalisation."
}], "Text",
 CellChangeTimes->{{3.40705363784375*^9, 3.407053715828125*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"04db76ed-76a7-44d3-a561-753a76be5550"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ActivityPropagation", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"pos", "=", "1"}], 
        RowBox[{
         RowBox[{"2", "r"}], "+", "1"}]], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], "<", 
              RowBox[{"(", 
               RowBox[{"r", "+", "1"}], ")"}]}], " ", "\[And]", " ", 
             RowBox[{
              RowBox[{"RuleOutputFromNeighbourhood", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", "1"}]}],
             " ", "\[Or]", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}], "\[GreaterEqual]", 
              RowBox[{"(", 
               RowBox[{"r", "+", "1"}], ")"}]}], " ", "\[And]", " ", 
             RowBox[{
              RowBox[{"RuleOutputFromNeighbourhood", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", 
              "0"}]}]}], ")"}], " ", "\[And]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "]"}], "-", 
                RowBox[{"2", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}]}]}], 
               "<", "r"}], " ", "\[And]", " ", 
              RowBox[{
               RowBox[{"RuleOutputFromNeighbourhood", "[", 
                RowBox[{
                 RowBox[{"Flip", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "pos"}], "]"}], ",", 
                 "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", "1"}]}], 
             ")"}], " ", "\[Or]", "  ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "]"}], "-", 
                RowBox[{"2", 
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "pos"}], "\[RightDoubleBracket]"}]}]}], 
               "\[GreaterEqual]", "r"}], " ", "\[And]", " ", 
              RowBox[{
               RowBox[{"RuleOutputFromNeighbourhood", "[", 
                RowBox[{
                 RowBox[{"Flip", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "pos"}], "]"}], ",", 
                 "rnum", ",", "k", ",", "r"}], "]"}], "\[Equal]", "0"}]}], 
             ")"}]}], ")"}]}], ",", "1", ",", "0"}], "]"}]}], "&"}], "  ", "/@",
      " ", 
     RowBox[{"RuleTable", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.57156519384375*^9, 3.571565193859375*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"2d2db05e-a30f-4fc6-a495-1463ed5f056d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ActivityPropagationNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"ActivityPropagation", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], 
     RowBox[{
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"2", "r"}], " ", "+", " ", "1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "r"}], "+", "1"}], ")"}]}]], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[370]:=",ExpressionUUID->"32d4663f-9535-4f4c-8c99-b7788ad00017"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Wentian Li\.b4s Z",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,ExpressionUUID->"0a0cfb4c-582c-40ae-aa02-c058a7b984ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Zwl", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"pos", "=", "1"}], "r"], 
          RowBox[{"BooleanDerivative", "[", 
           RowBox[{"#", ",", "pos", ",", " ", "rnum", ",", "r", ",", "k"}], 
           "]"}]}], "&"}], "  ", "/@", " ", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], "/", "2"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"pos", "=", 
            RowBox[{"r", "+", "2"}]}], 
           RowBox[{
            RowBox[{"2", "r"}], "+", "1"}]], 
          RowBox[{"BooleanDerivative", "[", 
           RowBox[{"#", ",", "pos", ",", " ", "rnum", ",", "r", ",", "k"}], 
           "]"}]}], "&"}], "  ", "/@", " ", 
        RowBox[{"RuleTable", "[", 
         RowBox[{"rnum", ",", "k", ",", "r"}], "]"}]}], "]"}], "/", "2"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[371]:=",ExpressionUUID->"a3e4bd2a-0c69-4903-ac34-91b60a79207b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZwlNorm", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"Zwl", "[", 
      RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], 
     RowBox[{
      SuperscriptBox["k", "r"], 
      RowBox[{"(", 
       RowBox[{"2", "r"}], ")"}]}]], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[372]:=",ExpressionUUID->"8cc9caa3-32e3-4089-b2d3-65046d074f55"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boolean representation of a (one-dimensional) binary rule", "Subsection",
 CellChangeTimes->{{3.619372502765625*^9, 
  3.61937251915625*^9}},ExpressionUUID->"7593d931-65a4-47ad-b765-\
3ed23e3317b9"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["DNF with lists of bits and ",
  FontSize->14],
 StyleBox["don\[CloseCurlyQuote]t-cares",
  FontSize->14,
  FontSlant->"Italic"]
}], "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.445341721*^9, 3.445341747890625*^9}, {
   3.445342046765625*^9, 3.445342047703125*^9}, 3.445951958796875*^9, {
   3.650904752357015*^9, 3.650904769444167*^9}, {3.650904907706778*^9, 
   3.650904944955742*^9}, {3.809860014116954*^9, 
   3.809860034326467*^9}},ExpressionUUID->"f371d1b9-3fe3-4937-8e74-\
3610400d3f42"],

Cell[TextData[{
 "Boolean minimisation of a binary cellular automaton rule, with the result \
given in ",
 StyleBox["D",
  FontWeight->"Bold"],
 "isjunctive ",
 StyleBox["N",
  FontWeight->"Bold"],
 "ormal ",
 StyleBox["F",
  FontWeight->"Bold"],
 "orm. The option ",
 StyleBox["stateRef",
  FontSlant->"Italic"],
 " allows to select the set of state transitions that should be taken into \
account for minimisation: if it\[CloseCurlyQuote]s simply a state (as, by \
default 1), only the state transitions leading to it are minimised; it it\
\[CloseCurlyQuote]s a list, either {0,1} or {1,0}, then all ",
 "active",
 " state transitions from 0 to 1 or from 1 to 0, respectively, are \
considered. \nSince the function relies upon the native ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function BooleanMinimize, which only yields a single result, out of others \
generally possible, RuleMinDNF also has the same restriction.\nIt works by \
converting the binary format into the Boolean format (based on Boolean \
variables) required by BooleanMinimize, which is the real responsible for the \
minimisation. After that, VarsToBits converts the Boolean format back to the \
binary format.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nRuleMinDNF[{254, 1}, 1]  ==> {{1, _, _}, {_, 1, _}, {_, _, 1}}\n\
RuleMinDNF[{254, 1}, 0]  ==> {{0, 0, 0}}\nRuleMinDNF[{254, 1}, {0,1}]  ==> \
{{1, 0, _}, {_, 0, 1}}\nRuleMinDNF[{254, 1}, {1,0}]  ==> {}"
}], "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
   3.391421793809389*^9, 3.391421839695369*^9}, {3.3914218756871233`*^9, 
   3.391421883448283*^9}, {3.395131425384579*^9, 3.395131537315528*^9}, 
   3.528023824462317*^9, {3.543426918692121*^9, 3.543427053327829*^9}, {
   3.543427095821964*^9, 3.54342713709724*^9}, {3.543427224454305*^9, 
   3.543427258370571*^9}, {3.543427697097385*^9, 3.54342790036314*^9}, {
   3.543428639898782*^9, 3.543428656690482*^9}, 3.651863192165091*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7bda0016-0326-446d-9622-d740eb8ebb90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleMinDNF", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"stateRef_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"stateRef", "===", 
      RowBox[{"{", "}"}]}], ",", 
     "\"\<Option {} makes no sense and therefore is invalid!\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", "2"}], ",", 
         RowBox[{"vars", "=", 
          RowBox[{"Symbol", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"FromCharacterCode", "[", 
               RowBox[{"96", "+", "#"}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"\[LeftFloor]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "]"}]}], 
            ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"VarsToBits", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BooleanMinimize", "[", "\[IndentingNewLine]", 
          RowBox[{"Or", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"And", "@@", "#"}], ")"}], "&"}], "/@", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Switch", "[", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "I", 
                    "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
                    "0", ",", 
                    RowBox[{"\[Not]", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "I", 
                    "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                    "1", ",", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "I", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"I", ",", "1", ",", 
                    RowBox[{"Length", "@", "vars"}]}], "}"}]}], "]"}], "&"}], 
               "/@", "\[IndentingNewLine]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "&"}], "/@", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"\[Not]", 
                    RowBox[{"ListQ", "[", "stateRef", "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"RuleTable", "[", 
                    RowBox[{"rnum", ",", "k", ",", "r"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "===", "stateRef"}], ")"}], 
                    "&"}]}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"ActiveStateTransitions", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"rnum", ",", "k", ",", "r"}], "}"}], ",", 
                    "stateRef"}], "]"}]}], "]"}]}], ")"}]}], ")"}]}], ")"}]}],
           "]"}], ",", "r"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.543342120035068*^9, 3.54334212917902*^9}, {
   3.543421906467051*^9, 3.543421928976863*^9}, {3.54342197677078*^9, 
   3.543421981858773*^9}, {3.543422588315816*^9, 3.54342261184193*^9}, {
   3.543422652316675*^9, 3.543422777341665*^9}, 3.54342286250112*^9, 
   3.5434229247197247`*^9, 3.651863169637328*^9, 3.746440537080264*^9},
 CellLabel->
  "In[373]:=",ExpressionUUID->"88f09886-6c53-47d7-a85d-3237e030e2f7"],

Cell["\<\
VarsToBits converts the Boolean format back to the binary format (for \
additional clarification, refer to comments written above for RuleMinDNF). \
The following examples represent all (hopefully!) possibilities that had to \
be accounted for:
RuleMinDNF[{0, 1}] ==> False
RuleMinDNF[{1, 1}] ==> ! a && ! b && ! c
RuleMinDNF[{15, 1}] ==> ! a
RuleMinDNF[{85, 1}] ==> a
RuleMinDNF[{184, 1}] ==> (a && ! b) || (b && c)
RuleMinDNF[{254, 1}] ==> a || b || c
RuleMinDNF[{255, 1}] ==> True\
\>", "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
   3.391421793809389*^9, 3.391421839695369*^9}, {3.3914218756871233`*^9, 
   3.391421883448283*^9}, {3.395131425384579*^9, 3.395131537315528*^9}, 
   3.528023824462317*^9, {3.543426918692121*^9, 3.543427053327829*^9}, {
   3.543427095821964*^9, 3.54342713709724*^9}, {3.543427224454305*^9, 
   3.543427258370571*^9}, {3.543427697097385*^9, 3.543428027791328*^9}, {
   3.543428285011169*^9, 3.543428408337141*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3f6c0202-1750-4395-a375-4b34d22f27c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VarsToBits", "[", 
    RowBox[{"booleanExp_", ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"booleanExp", ",", "\[IndentingNewLine]", "True", ",", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"_", ",", 
        RowBox[{"{", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{
           RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "}"}]}], "]"}], 
      "}"}], ",", "\[IndentingNewLine]", "False", ",", 
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "_", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", "2"}], ",", 
         RowBox[{"vars", "=", 
          RowBox[{"Symbol", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"FromCharacterCode", "[", 
               RowBox[{"96", "+", "#"}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"\[LeftFloor]", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}], "]"}]}], 
            ")"}]}]}], ",", "instantiatedPart", ",", "uninstantiatedPart"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"Head", "[", "booleanExp", "]"}], ",", 
          "\[IndentingNewLine]", "Or", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"instantiatedPart", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], "===", "And"}], ",", 
                RowBox[{"Apply", "[", 
                 RowBox[{"List", ",", "#"}], "]"}], ",", "#"}], "]"}], "&"}], 
             " ", "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"List", ",", "booleanExp"}], "]"}], "/.", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Not]", "#"}], ")"}], "[", "0", "]"}]}], ")"}], 
                   "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{"Not", "/@", "vars"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "1", "]"}]}], ")"}], "&"}], "/@", 
                  "vars"}]}], "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"uninstantiatedPart", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "_", "]"}], "&"}], "/@", "#"}], ")"}], 
              "&"}], "/@", 
             RowBox[{"Apply", "[", 
              RowBox[{"List", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Complement", "[", 
                  RowBox[{"vars", ",", 
                   RowBox[{"BooleanVariables", "[", "#", "]"}]}], "]"}], 
                 "&"}], "/@", "booleanExp"}]}], "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", "And", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"instantiatedPart", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"List", ",", "#"}], "]"}], "&"}], " ", "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"List", "[", "booleanExp", "]"}], "/.", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Not]", "#"}], ")"}], "[", "0", "]"}]}], ")"}], 
                   "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{"Not", "/@", "vars"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "1", "]"}]}], ")"}], "&"}], "/@", 
                  "vars"}]}], "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"uninstantiatedPart", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "_", "]"}], "&"}], "/@", "#"}], ")"}], 
              "&"}], "/@", 
             RowBox[{"Apply", "[", 
              RowBox[{"List", ",", 
               RowBox[{"{", 
                RowBox[{"Complement", "[", 
                 RowBox[{"vars", ",", 
                  RowBox[{"BooleanVariables", "[", "booleanExp", "]"}]}], 
                 "]"}], "}"}]}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"x_", "/;", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Symbol", ",", "Not"}], "}"}], ",", "x"}], "]"}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"instantiatedPart", "=", 
            RowBox[{
             RowBox[{"List", "[", "booleanExp", "]"}], "/.", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"#", "\[Rule]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Not]", "#"}], ")"}], "[", "0", "]"}]}], ")"}], 
                 "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Not", "/@", "vars"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"#", "\[Rule]", 
                   RowBox[{"#", "[", "1", "]"}]}], ")"}], "&"}], "/@", 
                "vars"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"uninstantiatedPart", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "_", "]"}], "&"}], "/@", "#"}], ")"}], 
              "&"}], "/@", 
             RowBox[{"Apply", "[", 
              RowBox[{"List", ",", 
               RowBox[{"{", 
                RowBox[{"Complement", "[", 
                 RowBox[{"vars", ",", 
                  RowBox[{"BooleanVariables", "[", "booleanExp", "]"}]}], 
                 "]"}], "}"}]}], "]"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "@", 
              RowBox[{"Level", "[", 
               RowBox[{"#", ",", "1"}], "]"}]}], "&"}], "/@", "#"}], ")"}], 
          "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Union", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "1"}], "]"}]}], "&"}], "/@", 
           RowBox[{"MapThread", "[", 
            RowBox[{"List", ",", 
             RowBox[{"{", 
              RowBox[{"instantiatedPart", ",", "uninstantiatedPart"}], 
              "}"}]}], "]"}]}], ")"}]}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.543333904018749*^9, 3.543333946717924*^9}, {
   3.543333989200563*^9, 3.543334092844749*^9}, {3.543334165014909*^9, 
   3.543334311353444*^9}, {3.543334356714759*^9, 3.543334361434832*^9}, 
   3.543335290974403*^9, {3.543335349359691*^9, 3.543335352661515*^9}, {
   3.543335515820962*^9, 3.543335556801982*^9}, {3.5433355917358*^9, 
   3.543335661461871*^9}, {3.543335711001795*^9, 3.54333583508141*^9}, {
   3.543335879026195*^9, 3.543335902273801*^9}, {3.5433359399502497`*^9, 
   3.543335946577887*^9}, {3.543335998072431*^9, 3.543336035063902*^9}, {
   3.543336132140431*^9, 3.543336136008533*^9}, {3.543336177694034*^9, 
   3.543336188824477*^9}, {3.543336266374064*^9, 3.543336267425937*^9}, {
   3.543336383572315*^9, 3.543336407794688*^9}, {3.543336516144894*^9, 
   3.543336571634347*^9}, {3.543336611008381*^9, 3.543336625430056*^9}, {
   3.543336666098198*^9, 3.543336673737911*^9}, {3.5433367356732*^9, 
   3.543336736697949*^9}, {3.543336792651765*^9, 3.5433367942485*^9}, {
   3.543337313521091*^9, 3.543337314186095*^9}, 3.543337377985033*^9, {
   3.543337412959087*^9, 3.54333744526024*^9}, {3.543337532879766*^9, 
   3.543337757230628*^9}, {3.543337788918619*^9, 3.543337839243711*^9}, {
   3.543337870333021*^9, 3.543337919448117*^9}, {3.543337957107085*^9, 
   3.5433379726903*^9}, {3.543338005000674*^9, 3.543338147613365*^9}, {
   3.54333827492649*^9, 3.543338299185124*^9}, {3.543338332222945*^9, 
   3.543338349678339*^9}, {3.543338444559493*^9, 3.543338489949689*^9}, {
   3.543338542697919*^9, 3.543338548932021*^9}, {3.543338617621881*^9, 
   3.543338648876702*^9}, {3.543338692219708*^9, 3.543338701961944*^9}, {
   3.543338797280064*^9, 3.543338819408067*^9}, {3.54333887141648*^9, 
   3.543339064250094*^9}, {3.543339123214113*^9, 3.543339155322918*^9}, {
   3.543339191823615*^9, 3.543339197735289*^9}, {3.543339341409597*^9, 
   3.543339361632971*^9}, 3.543339449870621*^9, 3.54334165723431*^9, {
   3.543342301890424*^9, 3.543342315682108*^9}, 3.5433423912550697`*^9, 
   3.543342461733321*^9, 3.543342530376338*^9, {3.543342587368355*^9, 
   3.543342594998298*^9}, {3.543342674961515*^9, 3.543342676336462*^9}, 
   3.543342741269691*^9, 3.543342832179297*^9, {3.543342923054287*^9, 
   3.543343029105483*^9}, {3.543343084836138*^9, 3.5433431332805967`*^9}, {
   3.543343178990651*^9, 3.543343197812728*^9}, {3.543343339293821*^9, 
   3.543343340557545*^9}, {3.543343444677265*^9, 3.543343526371604*^9}, {
   3.543343570681178*^9, 3.543343682051063*^9}, {3.543344709575378*^9, 
   3.543344712775023*^9}, {3.543344771675393*^9, 3.543344775646869*^9}, {
   3.5433449640920486`*^9, 3.543345154526733*^9}, 3.543345243443738*^9, {
   3.543345912032052*^9, 3.543345970144638*^9}, {3.543346035843842*^9, 
   3.543346057810979*^9}, {3.543346243865476*^9, 3.543346260336537*^9}, 
   3.543346726448373*^9, {3.5433923646955442`*^9, 3.543392366775507*^9}, {
   3.5433924642381477`*^9, 3.54339249984368*^9}, {3.543392703777189*^9, 
   3.543392708832363*^9}, {3.543392961418272*^9, 3.5433929844738607`*^9}, {
   3.543393231037532*^9, 3.543393251244911*^9}, 3.543393445255476*^9, {
   3.543393483448683*^9, 3.543393535028438*^9}, {3.543393699124093*^9, 
   3.54339373399019*^9}, {3.54339377929429*^9, 3.543393794149517*^9}, {
   3.543393840581143*^9, 3.543393854779442*^9}, {3.543393946666697*^9, 
   3.543393997677232*^9}, {3.543394059199609*^9, 3.543394116112041*^9}, {
   3.543394173144695*^9, 3.5433941739269366`*^9}, {3.543394357551052*^9, 
   3.543394374701214*^9}, 3.543394465588599*^9, {3.543394516680184*^9, 
   3.54339465302754*^9}, {3.543394711157834*^9, 3.543394740675312*^9}, 
   3.543394851451911*^9, {3.543395041056178*^9, 3.543395043484662*^9}, {
   3.7464405503302307`*^9, 3.746440557824915*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"749fa2e7-5a3a-4e63-9e6e-cb8cc89fb40f"],

Cell[TextData[{
 "Checks whether the minimisation is really working. It just checks whether \
the given rule ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " can be minimised and regenerated back. Just like in MinimisedFormToRnum, \
it only makes sense here to have ",
 StyleBox["stateRef",
  FontSlant->"Italic"],
 " as a direct state, not a list."
}], "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
  3.391421738670102*^9, 3.3914217541223216`*^9}, {3.54133280120016*^9, 
  3.541333030300341*^9}, {3.5413330644308376`*^9, 3.541333140355653*^9}, {
  3.543170522204807*^9, 3.54317055167155*^9}, {3.543227177427197*^9, 
  3.543227291111994*^9}, {3.54342345766238*^9, 3.543423472227358*^9}, {
  3.543427596660801*^9, 3.543427620170356*^9}, {3.54342859868552*^9, 
  3.543428599828981*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e4f86f26-de0c-4ac5-b33d-1dfb267eec68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleMinimisationCorrectQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rnum_Integer", ",", 
       RowBox[{"r_", ":", "1"}]}], "}"}], ",", 
     RowBox[{"stateRef_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "[", "stateRef", "]"}], ",", 
     "\"\<It makes no sense to have a list as an option and therefore it is \
invalid!\>\"", ",", 
     RowBox[{
      RowBox[{"MinimisedFormToRnum", "[", 
       RowBox[{
        RowBox[{"RuleMinDNF", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rnum", ",", "r"}], "}"}], ",", "stateRef"}], "]"}], ",", 
        "stateRef", ",", "r"}], "]"}], "===", "rnum"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.543170655009204*^9, 3.543170663552278*^9}, {
   3.543170695864884*^9, 3.543170715910774*^9}, {3.543171046792835*^9, 
   3.543171047198482*^9}, {3.543171095065184*^9, 3.543171138666518*^9}, {
   3.543226135670297*^9, 3.543226138158124*^9}, {3.543226540097197*^9, 
   3.543226561761402*^9}, 3.543226826081992*^9, {3.543331135028784*^9, 
   3.543331135688916*^9}, {3.543331310999337*^9, 3.543331311395623*^9}, 
   3.543339699839706*^9, {3.54339508170335*^9, 3.543395098251807*^9}, {
   3.543395262318619*^9, 3.543395266243535*^9}, 3.543423405176374*^9, {
   3.543425814778247*^9, 3.543425816447759*^9}, {3.543426515499702*^9, 
   3.543426522175988*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"1ed1e9a6-0ede-46e6-8ac6-ab068570b466"],

Cell[TextData[{
 "Used only by RuleMinimisationCorrectQ. This function is the reverse of \
RuleMinDNF: yields the rule number represented by ",
 StyleBox["minimisedForm",
  FontSlant->"Italic"],
 ". Here, it only makes sense to have ",
 StyleBox["stateRef",
  FontSlant->"Italic"],
 " as a direct state, not a list."
}], "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
  3.391421738670102*^9, 3.3914217541223216`*^9}, {3.54133280120016*^9, 
  3.541333030300341*^9}, {3.5413330644308376`*^9, 3.541333140355653*^9}, {
  3.543170522204807*^9, 3.54317055167155*^9}, {3.543171203061883*^9, 
  3.543171329373259*^9}, {3.54322616371607*^9, 3.543226180818947*^9}, {
  3.543227005927661*^9, 3.543227020021162*^9}, {3.54322706497821*^9, 
  3.543227065961899*^9}, {3.54342729161617*^9, 3.543427341301856*^9}, {
  3.543427569108728*^9, 3.543427580711046*^9}, {3.543427650256933*^9, 
  3.543427668171259*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4e58a997-e675-4472-99a3-daaedfb5b230"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinimisedFormToRnum", "[", 
    RowBox[{"minimisedForm_List", ",", 
     RowBox[{"stateRef_", ":", "1"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "[", "stateRef", "]"}], ",", 
     "\"\<It makes no sense to have a list as an option and therefore it is \
invalid!\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", "2"}], ",", "tuplesToOne", ",", "tuplesToZero", 
         ",", "allTuples", ",", "allSTs"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"allTuples", "=", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"\[LeftCeiling]", 
            RowBox[{
             RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "stateRef", ",", "\[IndentingNewLine]", "1", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tuplesToOne", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Cases", "[", 
                  RowBox[{"allTuples", ",", "#"}], "]"}], "&"}], "/@", 
                "minimisedForm"}], ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tuplesToZero", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{"allTuples", ",", "tuplesToOne"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tuplesToZero", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Cases", "[", 
                  RowBox[{"allTuples", ",", "#"}], "]"}], "&"}], "/@", 
                "minimisedForm"}], ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tuplesToOne", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{"allTuples", ",", "tuplesToZero"}], "]"}]}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"allSTs", "=", 
         RowBox[{"Reverse", "@", 
          RowBox[{"Union", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "1"}], "}"}], "&"}], "/@", "tuplesToOne"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", "0"}], "}"}], "&"}], "/@", 
              "tuplesToZero"}]}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"RnumFromRuleTable", "[", 
         RowBox[{"allSTs", ",", "k"}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.543394292347575*^9, 3.543394298265888*^9}, 
   3.543424999454546*^9, {3.543425091835832*^9, 3.543425214109978*^9}, {
   3.54342536271686*^9, 3.543425387067802*^9}, {3.543425420313148*^9, 
   3.543425483676781*^9}, {3.543425526763059*^9, 3.543425647309394*^9}, {
   3.543425700796463*^9, 3.543425712097539*^9}, 3.543426440271408*^9},
 CellLabel->
  "In[376]:=",ExpressionUUID->"f8c0db5c-ea3e-4292-badf-d3e6e0b39ec7"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Full Boolean form (in ANF and in DNF)",
 FontSize->14]], "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.445341721*^9, 3.445341747890625*^9}, {
   3.445342046765625*^9, 3.445342047703125*^9}, 3.445951958796875*^9, {
   3.650904792641941*^9, 3.6509048062542152`*^9}, {3.650905937323153*^9, 
   3.650905938493471*^9}, {3.769361076750917*^9, 
   3.769361084197946*^9}},ExpressionUUID->"922691b5-e96b-4876-aaf0-\
b19e680bd460"],

Cell[TextData[{
 "RuleMinDNF and RuleMinANF are analogous to the previous (bit and don\
\[CloseCurlyQuote]t-care list) form, but the output is generated as a real \
Boolean expression in DNF or in ANF (although only for ",
 StyleBox["stateRef",
  FontSlant->"Italic"],
 "=1). This has been done to replicate the table on pages 516-521, of \
\[OpenCurlyDoubleQuote]Tables of Cellular Automaton Properties\
\[CloseCurlyDoubleQuote], in ",
 ButtonBox["https://content.wolfram.com/uploads/sites/34/2020/07/cellular-\
automaton-properties.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://content.wolfram.com/uploads/sites/34/2020/07/cellular-\
automaton-properties.pdf"], None},
  ButtonNote->
   "https://content.wolfram.com/uploads/sites/34/2020/07/cellular-automaton-\
properties.pdf"],
 ", which is in DNF. DNF is the Boolean \[OpenCurlyDoubleQuote]Disjunctive \
Normal Form\[CloseCurlyDoubleQuote], whereas ANF is the Boolean \
\[OpenCurlyDoubleQuote]Algebraic Normal Form\[CloseCurlyDoubleQuote].\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nRuleMinDNF[254, 1]  \[Implies] ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"-", "1"}]], "||", 
   SubscriptBox["x", "0"], "||", 
   SubscriptBox["x", "1"]}]],
  CellChangeTimes->{3.650901011027185*^9, 3.6509052890832777`*^9},
  ExpressionUUID->"4ab9efcc-12de-4239-8cad-5ba7ebad5491"],
 " \nRuleMinDNF[150, 1]  \[Implies]",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox["x", "0"], "&&", 
     SubscriptBox["x", "1"]}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox[
      RowBox[{"!", "x"}], "0"], "&&", 
     SubscriptBox[
      RowBox[{"!", "x"}], "1"]}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      RowBox[{"!", "x"}], 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox["x", "0"], "&&", 
     SubscriptBox[
      RowBox[{"!", "x"}], "1"]}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      RowBox[{"!", "x"}], 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox[
      RowBox[{"!", "x"}], "0"], "&&", 
     SubscriptBox["x", "1"]}], ")"}]}]],
  CellChangeTimes->{
   3.650901011027185*^9, 3.6509052890832777`*^9, {3.65090584461276*^9, 
    3.650905852080952*^9}},ExpressionUUID->
  "8ba59c48-ef06-4eb0-bdb1-83fb549cb6cf"],
 "\nRuleMinANF[254, 1]  \[Implies] ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox["x", "0"]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox["x", "1"]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "0"], "&&", 
     SubscriptBox["x", "1"]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], "&&", 
     SubscriptBox["x", "0"], "&&", 
     SubscriptBox["x", "1"]}], ")"}], "\[Xor]", 
   SubscriptBox["x", 
    RowBox[{"-", "1"}]], "\[Xor]", 
   SubscriptBox["x", "0"], "\[Xor]", 
   SubscriptBox["x", "1"]}]],
  CellChangeTimes->{3.650901011027185*^9, 3.6509052890832777`*^9},
  ExpressionUUID->"61ca87d0-c971-474f-bf96-561a78af8dd7"],
 " \nRuleMinANF[150, 1]  \[Implies] ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"-", "1"}]], "\[Xor]", 
   SubscriptBox["x", "0"], "\[Xor]", 
   SubscriptBox["x", "1"]}]],
  CellChangeTimes->{3.927031970089913*^9},ExpressionUUID->
  "72091983-9cf1-4e1e-aa17-2a4af673bb87"],
 "\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) The symbol \[Xor] that appears in ANF represents the XOR operation.\n\
2) Notice that the name RuleMinDNF is the same as the one defined earlier, \
but not the format of its arguments. Notice also that it relied on the \
original RuleMinDNF[{rnum,r},1].\n3) The native function BooleanConvert can \
be used to convert the output to various other Boolean forms. But there seems \
to be a problem with BooleanConvert, as I noticed in the following \
conversion: BooleanConvert[RuleMinDNF[150], \[OpenCurlyDoubleQuote]ESOP\
\[CloseCurlyDoubleQuote]] , which should be ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["x", 
     RowBox[{"-", "1"}]], "\[Xor]", " ", 
    SubscriptBox["x", "0"], "\[Xor]", " ", 
    SubscriptBox["x", "1"]}], ")"}]],
  CellChangeTimes->{
   3.650901011027185*^9, 3.6509052890832777`*^9, {3.65090584461276*^9, 
    3.650905852080952*^9}},ExpressionUUID->
  "9e32edb5-0b1b-4d69-989a-3be38af8c258"],
 ", but is not what comes out of the conversion."
}], "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
   3.391421793809389*^9, 3.391421839695369*^9}, {3.3914218756871233`*^9, 
   3.391421883448283*^9}, {3.395131425384579*^9, 3.395131537315528*^9}, 
   3.528023824462317*^9, {3.543426918692121*^9, 3.543427053327829*^9}, {
   3.543427095821964*^9, 3.54342713709724*^9}, {3.543427224454305*^9, 
   3.543427258370571*^9}, {3.543427697097385*^9, 3.54342790036314*^9}, {
   3.543428639898782*^9, 3.543428656690482*^9}, {3.650905020207157*^9, 
   3.650905169855527*^9}, {3.650905234284801*^9, 3.650905270116417*^9}, {
   3.65090530747744*^9, 3.65090531179368*^9}, {3.650905687371171*^9, 
   3.650905730514023*^9}, {3.650905793864484*^9, 3.6509058156768208`*^9}, {
   3.650905864701421*^9, 3.650905899737275*^9}, {3.650905949136431*^9, 
   3.650906311815913*^9}, {3.650906373120096*^9, 3.650906401973671*^9}, {
   3.650906452655565*^9, 3.650906607175513*^9}, 3.769359265741485*^9, {
   3.769359304549856*^9, 3.769359323293343*^9}, {3.76935942628296*^9, 
   3.769359428826996*^9}, {3.769360772740399*^9, 3.769360829927388*^9}, {
   3.769360910458134*^9, 3.769361050636802*^9}, {3.769361109621993*^9, 
   3.769361149830566*^9}, {3.769361182696682*^9, 3.7693612346468782`*^9}, {
   3.809860354052556*^9, 3.809860415368365*^9}, {3.809860469925095*^9, 
   3.809860504202164*^9}, {3.927031845096591*^9, 3.927031859741626*^9}, {
   3.92703211189155*^9, 3.927032112185841*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"221bd82e-1e7b-4d09-b599-22cd6ecf00c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleMinDNF", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ruleMinDNFwithVariables", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Switch", "[", 
              RowBox[{
              "#3", ",", "0", ",", "#2", ",", "1", ",", "#1", ",", "_", ",", 
               "_"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
               RowBox[{"CellIndices", "[", "r", "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Not]", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", "#"}], "]"}]}], "&"}], "/@", 
               RowBox[{"CellIndices", "[", "r", "]"}]}], ",", "#"}], "}"}]}], 
           "]"}], "&"}], "/@", 
         RowBox[{"RuleMinDNF", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rnum", ",", "r"}], "}"}], ",", "1"}], "]"}]}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", "#"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "@", "#"}], "\[Equal]", "Subscript"}], 
                 "\[Or]", 
                 RowBox[{
                  RowBox[{"Head", "@", "#"}], "\[Equal]", "Not"}]}], ")"}], 
               "&"}]}], "]"}], "&"}], "/@", "ruleMinDNFwithVariables"}], 
          ")"}]}], ")"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleMinANF", "[", 
     RowBox[{"rnum_Integer", ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xVariables", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"\[LeftCeiling]", 
                RowBox[{
                 RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}], "}"}]}],
              "]"}], ",", 
            RowBox[{"CellIndices", "[", "r", "]"}]}], "}"}]}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"BooleanConvert", "[", 
         RowBox[{
          RowBox[{"BooleanFunction", "[", 
           RowBox[{"rnum", ",", 
            RowBox[{"\[LeftCeiling]", 
             RowBox[{
              RowBox[{"2", "r"}], "+", "1"}], "\[RightCeiling]"}]}], "]"}], 
          ",", "\"\<ANF\>\""}], "]"}], ")"}], "[", 
       RowBox[{"Sequence", "@@", "xVariables"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CellIndices", "[", 
    RowBox[{"r_", ":", "1"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"raux", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}], "<", "r"}], ",", 
         "r", ",", 
         RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Not]", 
         RowBox[{"IntegerQ", "[", "raux", "]"}]}], ",", 
        RowBox[{"List", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[LeftCeiling]", "r", "\[RightCeiling]"}]}], ",", 
           RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], "]"}]}], ",", 
        RowBox[{"List", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[LeftFloor]", "r", "\[RightFloor]"}]}], ",", "r"}], 
          "]"}]}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.650895922617105*^9, 3.65089594882864*^9}, {
   3.65089597991398*^9, 3.650896009680141*^9}, {3.650896040326966*^9, 
   3.65089609216514*^9}, {3.650896206477213*^9, 3.650896212845052*^9}, {
   3.650897795625762*^9, 3.650897807266062*^9}, {3.650897867881696*^9, 
   3.650897868454857*^9}, {3.65089791197141*^9, 3.650897939489325*^9}, {
   3.650897970629153*^9, 3.650898023592451*^9}, {3.650898642546231*^9, 
   3.6508986679016113`*^9}, {3.650898710628493*^9, 3.650898839251871*^9}, 
   3.6508995056340427`*^9, {3.650899551650288*^9, 3.6508997307146397`*^9}, {
   3.650904990666872*^9, 3.650904991872829*^9}, {3.650905615691914*^9, 
   3.65090564085164*^9}, 3.650906639699629*^9, {3.769359407656648*^9, 
   3.769359411394807*^9}, 3.769359495233757*^9, {3.769359988262748*^9, 
   3.769359990817491*^9}, {3.927125376251985*^9, 3.927125378322568*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"aa0cec6f-8079-48e1-87c4-ccf1ba65aace"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Algebraic representation of a (one-dimensional) binary rule (IMPORTANT: There\
\[CloseCurlyQuote]s a bug with DNF2AlgebraicForm since the logic Or function \
is being replaced by Plus, which should not be the case.)\
\>", "Subsection",
 CellChangeTimes->{{3.619372502765625*^9, 3.61937251915625*^9}, {
  3.7500682545425262`*^9, 3.750068257628444*^9}, {3.92703689165729*^9, 
  3.9270369985068073`*^9}},ExpressionUUID->"58eb140e-1063-4a60-b0ae-\
929ca410df70"],

Cell[TextData[{
 "It takes the full Boolean representation of the rule, either the outcome of \
functions RuleMinDNF or RuleMinANF above), and turns it into an algebraic \
representation. \nNotice that ANF2AlgebraicForm[RuleMinANF[",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", ",
 StyleBox["r",
  FontSlant->"Italic"],
 "]] leads to more compact expressions than DNF2AlgebraicForm[RuleMinDNF[",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", ",
 StyleBox["r",
  FontSlant->"Italic"],
 "]].  \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["In",
  FontSlant->"Italic"],
 ":  DNF2AlgebraicForm[RuleMinDNF[150]]\n",
 StyleBox["Out",
  FontSlant->"Italic"],
 ": ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["x", "0"]}], ")"}], " ", 
     RowBox[{"(", 
      SubscriptBox[
       RowBox[{"1", "-", "x"}], "1"], ")"}], " ", 
     SubscriptBox["x", 
      RowBox[{"-", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox[
       RowBox[{"1", "-", "x"}], 
       RowBox[{"-", "1"}]], ")"}], " ", 
     RowBox[{"(", 
      SubscriptBox[
       RowBox[{"1", "-", "x"}], "1"], ")"}], " ", 
     SubscriptBox["x", "0"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox[
       RowBox[{"1", "-", "x"}], 
       RowBox[{"-", "1"}]], ")"}], " ", 
     RowBox[{"(", 
      SubscriptBox[
       RowBox[{"1", "-", "x"}], "0"], ")"}], " ", 
     SubscriptBox["x", "1"]}], "+", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"-", "1"}]], " ", 
     SubscriptBox["x", "0"], " ", 
     SubscriptBox["x", "1"]}]}]}]],ExpressionUUID->
  "5dc0a0eb-56fc-4bec-98ad-f6e5e99f0aa0"],
 "\n",
 StyleBox["In",
  FontSlant->"Italic"],
 ": ANF2AlgebraicForm[RuleMinANF[150]]\n",
 StyleBox["Out",
  FontSlant->"Italic"],
 ": ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"-", "1"}]], "+", 
   SubscriptBox["x", "0"], "+", 
   SubscriptBox["x", "1"]}]],
  CellChangeTimes->{3.769360064943061*^9},ExpressionUUID->
  "3d903abc-edcc-4950-8c0a-c5783f0fae5d"],
 "\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ": \n1) Important: The outcome of ANF2AlgebraicForm is a sum modulo 2, since \
the Xor function is being replaced by Plus. However, in the outcome of \
DNF2AlgebraicForm\n2) The algebraic expressions in ",
 ButtonBox["http://atlas.wolfram.com/01/01/views/173/TableView.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://atlas.wolfram.com/01/01/views/173/TableView.html"], None},
  ButtonNote->"http://atlas.wolfram.com/01/01/views/173/TableView.html"],
 " is essentially those obtained with ANF2AlgebraicForm[RuleMinANF[",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", 1]]."
}], "Text",
 CellChangeTimes->{{3.3914216592659245`*^9, 3.3914216905809536`*^9}, {
   3.391421793809389*^9, 3.391421839695369*^9}, {3.3914218756871233`*^9, 
   3.391421883448283*^9}, {3.395131425384579*^9, 3.395131537315528*^9}, 
   3.528023824462317*^9, {3.543426918692121*^9, 3.543427053327829*^9}, {
   3.543427095821964*^9, 3.54342713709724*^9}, {3.543427224454305*^9, 
   3.543427258370571*^9}, {3.543427697097385*^9, 3.54342790036314*^9}, {
   3.543428639898782*^9, 3.543428656690482*^9}, 3.651863192165091*^9, {
   3.750068327668912*^9, 3.750068554840156*^9}, {3.7500685919684687`*^9, 
   3.750068612586856*^9}, {3.750068685046318*^9, 3.750068799102338*^9}, {
   3.769360118342538*^9, 3.769360191131064*^9}, {3.769360232786915*^9, 
   3.769360281758687*^9}, 3.7693603244690437`*^9, {3.769360473944283*^9, 
   3.769360534838751*^9}, {3.769360576030493*^9, 3.769360618716895*^9}, {
   3.769360688713786*^9, 3.76936075380674*^9}, {3.7693608134568453`*^9, 
   3.76936083528694*^9}, {3.769360870835587*^9, 3.769360895261343*^9}, {
   3.9270366173380413`*^9, 3.92703672657669*^9}, {3.927036758706599*^9, 
   3.927036831614723*^9}, 3.927036974862166*^9, {3.9270374830382547`*^9, 
   3.927037485825685*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"40b433cc-ac03-4d7f-88a0-fa6b4d9ce5c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AlgebraicRepresentation", "[", 
    RowBox[{"rnum_Integer", ",", 
     RowBox[{"r_", ":", "1"}], ",", "form_Symbol"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{"form", ",", "\[IndentingNewLine]", "DNF", ",", 
     RowBox[{"DNF2AlgebraicForm", "[", 
      RowBox[{"RuleMinDNF", "[", 
       RowBox[{"rnum", ",", "r"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     "ANF", ",", 
     RowBox[{"ANF2AlgebraicForm", "[", 
      RowBox[{"RuleMinANF", "[", 
       RowBox[{"rnum", ",", "r"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777394337595793*^9, 3.777394425718865*^9}, {
   3.777394462134706*^9, 3.777394509834873*^9}, 3.777394607462775*^9, 
   3.779622235661948*^9},
 CellLabel->
  "In[380]:=",ExpressionUUID->"5dd17e8f-bef9-434c-aa6e-42e11999768c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DNF2AlgebraicForm", "[", "dnfForm_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", "dnfForm"}], "]"}], ",", 
     "dnfForm", ",", 
     RowBox[{"dnfForm", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Or", "\[Rule]", "Plus"}], ",", 
        RowBox[{"And", "\[Rule]", "Times"}], ",", 
        RowBox[{
         RowBox[{"\[Not]", "x_"}], "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}]}]}], "}"}]}], ",", "2"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.777394633336985*^9, {3.779621715847689*^9, 3.779621716740718*^9}, 
   3.779621754569817*^9, {3.809862105592566*^9, 3.809862219557198*^9}, {
   3.927125552081588*^9, 3.927125556346627*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"88fd0f67-3f94-4ebe-956d-4041aae07772"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ANF2AlgebraicForm", "[", "anfForm_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "anfForm", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"And", "\[Rule]", "Times"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Xor", "\[Rule]", "Plus"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Not]", "x_"}], "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.927036872900219*^9, 3.927037099149695*^9, 
  3.927037249739695*^9, 3.927123387125166*^9},
 CellLabel->
  "In[382]:=",ExpressionUUID->"15754cf2-e756-459d-913a-c8fb6115cb95"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["20. Rule analyses", "Section",
 CellChangeTimes->{
  3.5581892215496883`*^9, {3.722676382810686*^9, 3.722676383654402*^9}, {
   3.785341348245101*^9, 
   3.7853413484017153`*^9}},ExpressionUUID->"054d4c40-956f-482a-a8d1-\
01fa193d8d12"],

Cell[CellGroupData[{

Cell["Comparison between Rule Tables", "Subsection",ExpressionUUID->"0e6a3d59-428b-4b79-a2b5-b0508ec2101e"],

Cell[TextData[{
 "Checks how each ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary ouput representing a ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " compares to the corresponding ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary output from rule number ",
 StyleBox["rnumref",
  FontSlant->"Italic"],
 ". When the compaired outputs are the same, the number identifying the \
neighbourhood at issue (its position) is returned associated to the output \
value; otherwise, it is returned associated to the symbol ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". With the default ",
 StyleBox["nonclassified",
  FontSlant->"Italic"],
 " type, the neighbourhood identifiers are returned in decreasing order, from \
(",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["k", 
      RowBox[{
       RowBox[{"2", "r"}], "+", "1"}]], "-", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"a5209d89-266b-4ea7-aaef-c46ee2e6b4ad"],
 " down to 0; otherwise (i.e., with the ",
 StyleBox["classified",
  FontSlant->"Italic"],
 " type), the neighbourhood identifiers are sorted in classes of the number \
of ",
 StyleBox["1s",
  FontWeight->"Bold"],
 " involved in the neighbourhood, and each class is interspersed by the dummy \
separator pair {",
 StyleBox["_, s",
  FontSlant->"Italic"],
 "}. Within each class (delimited by the separators), the neighbourhood \
identifiers are sorted in decreasing order of their values.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nRnumComparison[150, MajorityRule[1], 2, 1, nonclassified]\t\t",
 StyleBox["Out",
  FontSlant->"Italic"],
 ": {{7, 1}, {6, x}, {5, x}, {4, x}, {3, x}, {2, x}, {1, x}, {0, 0}}\n\
RnumComparison[150, MajorityRule[1], 2, 1, classified]\t\t",
 StyleBox["Out",
  FontSlant->"Italic"],
 ":  {{7, 1}, {_, s}, {6, x}, {5, x}, {3, x}, {_, s}, {4, x}, {2, x}, {1, x}, \
{_, s}, {0, 0}}\n",
 StyleBox["Implementation note: ",
  FontWeight->"Bold"],
 "The implementation is currently biased for k=2. That is why the \
classification is made in terms of the number of 1s, instead of the number of \
an arbitrary colour. "
}], "Text",
 CellChangeTimes->{{3.669629598254536*^9, 3.669629604384539*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"7a6f3084-96f1-4dee-b109-96f18c0c31cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RnumComparison", "[", 
    RowBox[{"rnum_Integer", ",", "rnumref_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "nonclassified"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "type", ",", "\[IndentingNewLine]", "nonclassified", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "===", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           "x"}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}]], "-", "1"}], ",", "0", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"rnum", ",", "k", ",", 
            SuperscriptBox["k", 
             RowBox[{"\[LeftFloor]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}], 
          ",", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"rnumref", ",", "k", ",", 
            SuperscriptBox["k", 
             RowBox[{"\[LeftFloor]", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]]}], "]"}]}], 
         "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", "classified", ",", 
     RowBox[{"Most", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"GatherBy", "[", 
             RowBox[{
              RowBox[{"RnumComparison", "[", 
               RowBox[{
               "rnum", ",", "rnumref", ",", "k", ",", "r", ",", 
                "nonclassified"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "k", ",", 
                   RowBox[{"\[LeftFloor]", 
                    RowBox[{
                    RowBox[{"2", "r"}], "+", "1"}], "\[RightFloor]"}]}], 
                  "]"}], ",", "1"}], "]"}], "&"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"_", ",", "s"}], "}"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "r"}], "+", "2"}], "}"}]}], "]"}]}], "}"}]}], 
         "]"}], ",", "2"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.395131019791365*^9, 3.395131044396746*^9}, 
   3.575970482551919*^9},
 CellLabel->
  "In[383]:=",ExpressionUUID->"2752b94d-70c4-474b-8962-0bc3ff2b2cb2"],

Cell[TextData[{
 "Displays the comparison between the ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary ouput representing a ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rule number ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " compares to the corresponding ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ary output from rule number ",
 StyleBox["rnumref",
  FontSlant->"Italic"],
 ". Colour map utilised: ",
 StyleBox["black",
  FontSlant->"Italic"],
 " for common output 1; ",
 StyleBox["white",
  FontSlant->"Italic"],
 " for common output 0; ",
 StyleBox["red",
  FontSlant->"Italic"],
 " for distinct outputs; and ",
 StyleBox["yellow",
  FontSlant->"Italic"],
 " for the dummy separator pair {",
 StyleBox["_, s",
  FontSlant->"Italic"],
 "}.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ": \nDisplayRnumComparison[{150}, MajorityRule[1], 2, 1, classified]\n\
DisplayRnumComparison[150, MajorityRule[1], 2, 1, classified]\n",
 StyleBox["Implementation note: ",
  FontWeight->"Bold"],
 "The colour map is currently accounting only for k=2."
}], "Text",
 CellChangeTimes->{{3.669629825266799*^9, 3.669629949420131*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3c8b4129-2df7-43d0-b214-8851d99295d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DisplayRnumComparison", "[", 
   RowBox[{"rnumlist_List", ",", "rnumref_Integer", ",", 
    RowBox[{"k_Integer", ":", "2"}], ",", 
    RowBox[{"r_", ":", "1"}], ",", 
    RowBox[{"type_", ":", "nonclassified"}]}], "]"}], ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}],
          ")"}], "/@", "#1"}], "&"}], ")"}], "/@", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RnumComparison", "[", 
         RowBox[{"#1", ",", "rnumref", ",", "k", ",", "r", ",", "type"}], 
         "]"}], "&"}], ")"}], "/@", "rnumlist"}]}], ",", 
    RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[Rule]", "White"}], ",", 
       RowBox[{"1", "\[Rule]", "Black"}], ",", 
       RowBox[{"x", "\[Rule]", "Red"}], ",", 
       RowBox[{"s", "\[Rule]", "Yellow"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayRnumComparison", "[", 
    RowBox[{"rnumlist_Integer", ",", "rnumref_Integer", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}], ",", 
     RowBox[{"type_", ":", "nonclassified"}]}], "]"}], ":=", 
   RowBox[{"DisplayRnumComparison", "[", 
    RowBox[{
     RowBox[{"{", "rnumlist", "}"}], ",", "rnumref", ",", "k", ",", "r", ",", 
     "type"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"7b4c8110-806a-463c-a223-1739e80c2e13"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hamming Distance between Binary Rule Tables", "Subsection",
 CellChangeTimes->{{3.651862233032387*^9, 
  3.651862234108348*^9}},ExpressionUUID->"3045f9d2-5fb5-4c58-9ee8-\
196ee8426f2c"],

Cell["\<\
Yields the Hamming distance between 2 rule numbers with 2 colours and any \
radius.\
\>", "Text",
 CellChangeTimes->{{3.621868362308927*^9, 3.621868363217236*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"c8c93458-4e69-49e1-9405-ce1cf84820e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleHammingDistance", "[", 
    RowBox[{"rnum1_Integer", ",", "rnum2_Integer"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Total", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"BitXor", "[", 
       RowBox[{"rnum1", ",", "rnum2"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.4956280971265*^9},
 CellLabel->
  "In[386]:=",ExpressionUUID->"66d52623-183e-4607-bf81-103d3e58562c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Various Analyses between Rule Tables", "Subsection",ExpressionUUID->"fa6365a1-2ca1-40f6-aee3-a6cb7ecea87f"],

Cell[TextData[{
 "Argument ",
 StyleBox["rnumdata",
  FontSlant->"Italic"],
 " can be either a list of rule numbers, or a list of pairs of the type {",
 StyleBox["rnum",
  FontSlant->"Italic"],
 ", ",
 StyleBox["evaluation",
  FontSlant->"Italic"],
 "}, where ",
 StyleBox["evaluation",
  FontSlant->"Italic"],
 " refers to the efficacy of ",
 StyleBox["rnum",
  FontSlant->"Italic"],
 " in some task (say, DCT)."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"76e33e22-d816-440b-be7d-d77c1c1620f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AnalyseRules", "[", 
    RowBox[{"rnumdata_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Depth", "@", "rnumdata"}], "===", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Rule", ",", "Bal", ",", "DensBal", ",", "BFCons", ",", "DistToMaj", 
         ",", "Sensit", ",", "NeighbDom", ",", "AbsAct", ",", "ActProp", ",", 
         "BW", ",", "LR", ",", "BWLR", ",", "EqClassLen"}], "}"}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"Balancedness", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"DensityBalancedness", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"BFConservationDegree", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"RuleHammingDistance", "[", 
              RowBox[{"#", ",", 
               RowBox[{"MajorityRule", "[", "r", "]"}]}], "]"}], ",", 
             RowBox[{"SensitivityNorm", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"NDominanceNorm", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"AbsoluteActivityNorm", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"ActivityPropagationNorm", "[", 
              RowBox[{"#", ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"CountSymmetry", "[", 
               RowBox[{"#", ",", "k", ",", "r", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "stBWTransform", ",", "stLRTransform", ",", 
                  "stBWLRTransform"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"Length", "@", 
              RowBox[{"DynamicalEquivalenceClass", "[", 
               RowBox[{"#", ",", "k", ",", "r"}], "]"}]}]}], "}"}], "&"}], "/@",
           "rnumdata"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Rule", ",", "Eval", ",", "Bal", ",", "DensBal", ",", "BFCons", ",", 
         "DistToMaj", ",", "Sensit", ",", "NeighbDom", ",", "AbsAct", ",", 
         "ActProp", ",", "BW", ",", "LR", ",", "BWLR", ",", "EqClassLen"}], 
        "}"}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Balancedness", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"DensityBalancedness", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"BFConservationDegree", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"RuleHammingDistance", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"MajorityRule", "[", "r", "]"}]}], "]"}], ",", 
             RowBox[{"SensitivityNorm", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"NDominanceNorm", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"AbsoluteActivityNorm", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"ActivityPropagationNorm", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", "k", ",", "r"}], "]"}], ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"CountSymmetry", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "k", ",", "r", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "stBWTransform", ",", "stLRTransform", ",", 
                  "stBWLRTransform"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"Length", "@", 
              RowBox[{"DynamicalEquivalenceClass", "[", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", "k", ",", "r"}], "]"}]}]}], "}"}], "&"}], "/@", 
          "rnumdata"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4956280972985*^9, 3.4956280974705*^9}, {
  3.609149697705933*^9, 3.60914970947662*^9}, {3.777824568520924*^9, 
  3.777824571229738*^9}, {3.777888900650901*^9, 3.777888900652521*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"f6863726-c1a1-4b8b-b6d9-7cb04e240dd0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rule Sorting According to their Parameter Values", "Subsection",ExpressionUUID->"28f983bd-0810-4722-bf1c-e936478e7cbb"],

Cell[TextData[{
 "Returns a list of all ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-colour, ",
 StyleBox["r",
  FontSlant->"Italic"],
 "-radius rules referred to in the argument ",
 StyleBox["rulespec, ",
  FontSlant->"Italic"],
 "that share the same values of the parameters specified in the ",
 StyleBox["pars",
  FontSlant->"Italic"],
 " list. By default, ",
 StyleBox["rulespec",
  FontSlant->"Italic"],
 " refers to the entire space at issue, in which case the results are given \
in terms of the representatives of each class of dynamical behaviour (instead \
of in terms of each and every individual rule of the space). However, ",
 StyleBox["rulespec",
  FontSlant->"Italic"],
 " can also be given as a list of specific rule numbers of the space at \
issue. With the default value ",
 StyleBox["output ",
  FontSlant->"Italic"],
 "= ",
 StyleBox["sorted",
  FontSlant->"Italic"],
 ", the returned list is sorted; the unsorted option can be set by ",
 StyleBox["output ",
  FontSlant->"Italic"],
 "= ",
 StyleBox["unsorted.",
  FontSlant->"Italic"],
 "  \nThe ",
 StyleBox["pars",
  FontSlant->"Italic"],
 " list may include a parameter name only, a condition that is valid only for \
parameters whose arguments have the form [",
 StyleBox["rnum, k, r",
  FontSlant->"Italic"],
 "]. Otherwise, the general case should be used, in which the parameter may \
have any other type or quantity of arguments, with the only constraint being \
that the rule number field in the parameter specification be filled in by the \
slot # symbol, and that the & symbol be appended to the parameter \
specification (as happens in SortPars[{Alpha[#, 2, 1, 2]&}]).  \n",
 StyleBox["Note",
  FontWeight->"Bold"],
 ": It is reccomended to append the command with // MatrixForm, so as to \
obtain an organised display of the results.\n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 ":\nSortPars[{Alpha, Z}] and SortPars[{Alpha, Z}, 2, 1] are equivalent forms \
that sort all rules of the elementary space in terms of those that share the \
same values of Alpha and Z, organised from the smallest to the highest values \
of Alpha and Z, respectively.  ",
 StyleBox["\n",
  FontWeight->"Bold"],
 "SortPars[{Z}, 2, 1] or SortPars[{Z}] both yield the dynamical classes of \
the ECA space, according to the Z values of the rules from each class.  ",
 StyleBox["\n",
  FontWeight->"Bold"],
 "SortPars[{Alpha, Alpha[#, 2, 1, 2]&, Alpha[#, 2, 1, 3]&}] sorts the entire \
ECA space according to the values of Alpha of 1st, 2nd and 3 order, \
respectively. ",
 StyleBox["\nImplementation notes",
  FontWeight->"Bold"],
 ": \n1) The sorting of the rules is given according to the parameter \
sequence specified in the ",
 StyleBox["pars",
  FontSlant->"Italic"],
 " list. Therefore, SortPars[{Alpha, Z}] yields a different display of the \
sorted ECA space from SortPars[{Z, Alpha}].\n2) The redundancy for ",
 StyleBox["k",
  FontSlant->"Italic"],
 " and ",
 StyleBox["r",
  FontSlant->"Italic"],
 " in  SortPars[{Alpha[#, 2, 0.5, 2]&}, 2, 0.5] is not elegant and would \
rather be ammended.\n3) The code List[#1, If[Depth[#2] === 2, #2, #2\
\[LeftDoubleBracket]1\[RightDoubleBracket]]]&  is required for generality of \
the function, so that it can also account for parameters that are defined in \
terms of a list of values (e.g., Cyclic",
 "PreimagePattern",
 "), instead of a single value (e.g., Z)."
}], "Text",
 CellChangeTimes->{{3.449137014296875*^9, 3.449137240984375*^9}, {
   3.484163944643*^9, 3.484163945851*^9}, {3.484163977394*^9, 
   3.48416414644*^9}, {3.484164186233*^9, 3.4841641900550003`*^9}, {
   3.4841642683460007`*^9, 3.484164312366*^9}, 3.490377842462688*^9, 
   3.498406903435294*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"43d4f2d0-14d0-49d0-a662-5a114e71eba9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SortPars", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortPars", "[", 
    RowBox[{"pars_List", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", " ", 
     RowBox[{"r_", ":", "1"}], ",", " ", 
     RowBox[{"rulespec_", ":", "All"}], ",", 
     RowBox[{"output_Symbol", ":", "sorted"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", "rulesandpars"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rules", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"rulespec", "===", "All"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"AllEquivalenceRuleClasses", "[", 
           RowBox[{"k", ",", "r"}], "]"}]}], ",", "rulespec"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesandpars", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"List", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Depth", "[", "#2", "]"}], "===", "2"}], ",", "#2", 
              ",", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"rules", ",", 
           RowBox[{"Transpose", "@", 
            RowBox[{"Outer", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Depth", "[", "#1", "]"}], ">", "1"}], ",", 
                 RowBox[{"#1", "[", 
                  RowBox[{"#2", ",", "k", ",", "r"}], "]"}], ",", 
                 RowBox[{"#1", "[", "#2", "]"}]}], "]"}], "&"}], ",", "pars", 
              ",", "rules", ",", "1"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"output", ",", "\[IndentingNewLine]", "sorted", ",", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "&"}], "/@", "#"}], ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
            "&"}], "/@", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"rulesandpars", ",", 
             RowBox[{
              RowBox[{"Rest", "@", "#"}], "&"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "&"}]}], "]"}], ",", "\[IndentingNewLine]", "unsorted", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "&"}], "/@", "#"}], ",", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
          "&"}], "/@", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"rulesandpars", ",", 
           RowBox[{
            RowBox[{"Rest", "@", "#"}], "&"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "_", ",", 
        "\"\<Unknown selection option!\>\""}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.449086335453125*^9, {3.44908637721875*^9, 3.44908638415625*^9}, {
   3.4490865710625*^9, 3.449086577109375*^9}, {3.449134807453125*^9, 
   3.449134827578125*^9}, {3.44913563478125*^9, 3.44913565678125*^9}, {
   3.449135687578125*^9, 3.449135707140625*^9}, {3.449135755609375*^9, 
   3.449135761484375*^9}, {3.44913580584375*^9, 3.449135811390625*^9}, {
   3.449135859234375*^9, 3.44913589559375*^9}, {3.44913611175*^9, 
   3.44913611428125*^9}, {3.48416372659*^9, 3.484163916119*^9}, {
   3.484164160269*^9, 3.484164163901*^9}, {3.484164196903*^9, 
   3.484164197616*^9}, {3.484164230438001*^9, 3.484164254203*^9}, {
   3.484164332468*^9, 3.484164332651*^9}, 3.484217174644*^9, {
   3.5759704826499043`*^9, 3.5759704827180758`*^9}, 3.746809320117439*^9, 
   3.813857803198924*^9},
 CellLabel->
  "In[388]:=",ExpressionUUID->"34421639-855d-4cf9-805b-bc4dcbcfae4c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["21. Evaluation of binary, one-dimensional cellular automata", "Section",
 CellChangeTimes->{{3.722676385533415*^9, 3.72267638905437*^9}, 
   3.785341351641938*^9},ExpressionUUID->"22fb3ec3-6816-4c95-bbf4-\
1d1d50be9882"],

Cell[CellGroupData[{

Cell["Master functions", "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489378483823*^9},ExpressionUUID->"cbf1d016-e9c6-45f4-b66c-\
f72825d81dff"],

Cell[TextData[{
 "Evaluates a list of (",
 StyleBox["Lato Sensu",
  FontSlant->"Italic"],
 ") rule number specifications on the specified ",
 StyleBox["problem",
  FontSlant->"Italic"],
 ", when run with the CA-type function ",
 StyleBox["fCA",
  FontSlant->"Italic"],
 " from a list of ICs. The ",
 StyleBox["fCA",
  FontSlant->"Italic"],
 " type functions are CellularAutomaton,  CASpatialComposition and \
ECATemporalComposition, and they can run with any of their possible arguments \
(collectively assigned to ",
 StyleBox["args",
  FontSlant->"Italic"],
 "); naturally, since each function requires their rule numbers to be \
organised in a certain way, that's why I'm referring to them ",
 StyleBox["Lato Sensu",
  FontSlant->"Italic"],
 ".\nThe current problems are the DCT and the PP tasks (although others can \
be easily accounted for). The result is a list {rnum, score} which is written \
in ",
 StyleBox["outfile",
  FontSlant->"Italic"],
 " and on the screen; if ",
 StyleBox["outfile",
  FontSlant->"Italic"],
 " \"screen\" specified, the result is only be printed on the screen. In \
either case, the results are printed provided that score achieved by the rule \
is at least as many as ",
 StyleBox["minscore ",
  FontSlant->"Italic"],
 "(in %). If no printing on the screen is required, it suffices to add a \
semi-colon (;) to the end of the function call.\nThe ",
 StyleBox["problem",
  FontSlant->"Italic"],
 " name is enclosed in a list, together with its (0 or more) arguments, \
defined in ",
 StyleBox["probargs",
  FontSlant->"Italic"],
 ". The ",
 StyleBox["scoringtype",
  FontSlant->"Italic"],
 "  argument is ",
 StyleBox["f",
  FontSlant->"Italic"],
 " or ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", representing ",
 StyleBox["full",
  FontSlant->"Italic"],
 " (the default) or ",
 StyleBox["partial ",
  FontSlant->"Italic"],
 "scoring, respectively.  Partial scoring means that an IC may entail a score \
to the rule at issue, even if it the problem is not perfectly solved for that \
IC; notice that, while in full scoring each IC may entail 0 or 1score \
increase, with partial scoring the increase can be any number in the interval \
[0, 1]. The way partial scoring is implemented, scoring occurs basically \
through a stair function, such that the number of stairs (argument ",
 StyleBox["nstairs",
  FontSlant->"Italic"],
 "), all with the same size, entail that every (aproximately) ",
 StyleBox["len/nstairs",
  FontFamily->"Courier New"],
 " 1s in the final configuration contributes (aproximately) ",
 StyleBox["1/(nstairs-1)",
  FontFamily->"Courier New"],
 " in the scoring count. For instance, for an odd-parity IC, ",
 StyleBox["len",
  FontSlant->"Italic"],
 " stairs mean that every 1 in the final configuration contributes \
(aproximately) 1/len in the scoring count; 11 stairs mean that  every len/10 \
1s in the final configuration contributes 1/10 in the scoring count; and 5 \
stairs mean that every len/5 1s in the final configuration contributes 1/4 in \
the scoring count. Full scoring is specified, for instance, by",
 StyleBox[" ",
  FontWeight->"Bold"],
 "{DCT, f} or simply {DCT}; on its part, partial scoring is achieved with \
{DCT, p, nstairs}.\n",
 StyleBox["ICs",
  FontSlant->"Italic"],
 " can be a list, or should have the form ",
 Cell[BoxData[
  RowBox[{"IntervalICs", "[", 
   RowBox[{"ICmin", ",", " ", "ICmax", ",", "nbits", ",", "filters_List"}], 
   "]"}]],ExpressionUUID->"414f8063-b89d-4839-8562-77e30989c0f4"],
 ", in which case all ",
 StyleBox["nbits",
  FontSlant->"Italic"],
 "-long ICs in the interval ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"ICmin", ",", " ", "ICmax"}], "}"}]],ExpressionUUID->
  "c4968c25-3dc2-41f6-b69a-fabc64af361e"],
 "that pass the list of ",
 StyleBox["filters",
  FontSlant->"Italic"],
 " are enumeratively taken, where ",
 Cell[BoxData["ICmin"],ExpressionUUID->"c749182e-8b84-4e50-9c3b-3d5b131c02dc"],
 " and ",
 Cell[BoxData["ICmax"],ExpressionUUID->"a03ce1dd-aea2-4a34-b477-f3524bb1aaab"],
 " are expressed in terms of their numbers in the space of possible ICs (from \
0 up to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     StyleBox["nbits",
      FontSlant->"Italic"]], "-", "1"}], TraditionalForm]],ExpressionUUID->
  "6858e874-60a6-4ed8-91e4-33a1fc8c8133"],
 "). A filter works by allowing to pass through it only the IC that is the \
last one, in lexicographic order, of its equivalence class.  By default, ",
 StyleBox["filters",
  FontSlant->"Italic"],
 "=={} and ",
 StyleBox["icweight",
  FontSlant->"Italic"],
 "==1, which means that all ICs in the interval are taken.\n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) If ",
 StyleBox["scoringtype",
  FontSlant->"Italic"],
 " is ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", but ",
 StyleBox["nstairs",
  FontSlant->"Italic"],
 " is not specified, evaluation behaves as in full scoring.\n2) I haven\
\[CloseCurlyQuote]t tested yet the following, but it should work: \n\
EvalRules[{AsynchronousCA, {{33357284, 2, 2}, {226, 2, 1}}, \
UniformICs[1000,55], 200}, {DCT}, {100, \[OpenCurlyDoubleQuote]screen\
\[CloseCurlyDoubleQuote]}]\n",
 StyleBox["Examples of usage (notice that the rule number is expressed as {n, \
k, r}):",
  FontWeight->"Bold"],
 "\nEvalRules[{CellularAutomaton, {{33357284, 2, 2}, {226, 2, 1}}, \
UniformICs[1000,55], 200}, {DCT}, {100, \"screen\"}]\n\
EvalRules[{CASpatialComposition, {Table[Random[Integer, {14, 89}], {55}], \
Table[Random[Integer, {30, 157}], {55}]}, UniformICs[10, 55], 200}, {DCT, f}, \
{100, \"screen\"}]\nEvalRules[{ECATemporalComposition, {{{184, 30}, {232, \
30}}, {{184, 30}, {232, 30}}}, UniformICs[1000,55]}, {DCT, p, 11}, {100, \
\"screen\"}]\nEvalRules[{CellularAutomaton, {{33357284, 2, {1, 1}}, {226, 2, \
{1, 1}}}, HNDfamilies, 200}, {HNDP, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], TraditionalForm]],ExpressionUUID->
  "fb2c808d-6833-4da5-abca-8980be22b448"],
 "}, {100, \"screen\"}]\nEvalRules[{CellularAutomaton, {{33357284, 2, {1, \
1}}, {226, 2, {1, 1}}}, HNDfamilies, 200}, {HNDP}, {100}]"
}], "Text",
 CellChangeTimes->{{3.530637389065094*^9, 3.530637392375905*^9}, {
  3.530637430583008*^9, 3.530637430583079*^9}, {3.72268011995051*^9, 
  3.722680122174382*^9}, {3.72268015650238*^9, 3.72268020755009*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"808ad1e1-3b8f-4c2a-bb52-cfafdddb27d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvalRules", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fCA_Symbol", ",", "args__"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"problem_Symbol", ",", "probargs___"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"minscore_Integer", ",", 
       RowBox[{"outfile_String", ":", "\"\<screen\>\""}]}], "}"}]}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"score", ",", 
       RowBox[{"ICs", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{"problem", ",", "\[IndentingNewLine]", "PP", ",", "   ", 
           RowBox[{"score", "=", " ", 
            RowBox[{"EvalRuleInPP", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"fCA", ",", "#", ",", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Rest", "[", 
                  RowBox[{"{", "args", "}"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", "probargs", "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "DCT", ",", " ", 
           RowBox[{"score", "=", 
            RowBox[{"EvalRuleInDCT", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"fCA", ",", "#", ",", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Rest", "[", 
                  RowBox[{"{", "args", "}"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", "probargs", "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "HNDP", ",", 
           RowBox[{"score", "=", 
            RowBox[{"EvalRuleInHNDP", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"fCA", ",", "#", ",", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Rest", "[", 
                  RowBox[{"{", "args", "}"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", "probargs", "}"}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{"problem", ",", "\[IndentingNewLine]", "HNDP", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"score", "\[GreaterEqual]", "minscore"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"outfile", "===", "\"\<screen\>\""}], ",", " ", 
                 RowBox[{"Print", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", " ", "score"}], "}"}], "]"}], ",", " ", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", " ", ",", " ", "score"}], "}"}], ",", " ", 
                   "outfile"}], "]"}]}], "]"}], ";", 
               RowBox[{"{", 
                RowBox[{"#", " ", ",", " ", "score"}], "}"}]}], ")"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"#", " ", ",", " ", "score"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "_", ",", "   ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"score", "\[GreaterEqual]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Head", "[", "ICs", "]"}], "===", "IntervalICs"}], 
                  ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "ICs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ICs", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ")"}], ",", 
                  RowBox[{"Length", "[", "ICs", "]"}]}], "]"}], "*", 
                RowBox[{"minscore", "/", "100"}]}], ")"}]}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"outfile", "===", "\"\<screen\>\""}], ",", " ", 
                 RowBox[{"Print", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", " ", "score"}], "}"}], "]"}], ",", " ", 
                 RowBox[{"PutAppend", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", " ", ",", " ", "score"}], "}"}], ",", " ", 
                   "outfile"}], "]"}]}], "]"}], ";", 
               RowBox[{"{", 
                RowBox[{"#", " ", ",", " ", "score"}], "}"}]}], ")"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"#", " ", ",", " ", "score"}], "}"}]}], "]"}]}], 
          "]"}]}], ")"}], "&"}], " ", "\[IndentingNewLine]", "/@", " ", 
      RowBox[{
       RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[390]:=",ExpressionUUID->"709994a5-c0aa-49fb-99c7-936b37e2722f"],

Cell["\<\
NewScore is used by DCT and PP for computing the score count due to an IC \
that is being probed. It is basically the StairFunction, except that, for \
full scoring it simply returns 1 or 0, depending on the problem being (fully) \
solved or not for the IC at issue. This is just a way to allow for full and \
partial scoring to be handled in the same way.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"1b6715a7-7e4d-455d-8b1d-dc490efbd465"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewScore", "[", 
    RowBox[{"x_", ",", "nstairs_", ",", "xmax_", ",", "ymax_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nstairs", ">", "0"}], ",", 
     RowBox[{"StairFunction", "[", 
      RowBox[{"x", ",", "nstairs", ",", "xmax", ",", "ymax"}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "===", "xmax"}], ",", "1", ",", "0"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[391]:=",ExpressionUUID->"0bd94125-9b31-4d1d-9ff6-cdc931b85f01"],

Cell[TextData[{
 "Used in DCT and PP, the function yields the weight of an IC, when \
IntervalICs is being used, according to the list of ",
 StyleBox["filters",
  FontSlant->"Italic"],
 ". If ",
 StyleBox["icweight",
  FontSlant->"Italic"],
 "==0 the IC is simply skipped over (that is, it is not used as input to \
evaluate a CA rule); ",
 StyleBox["icweight",
  FontSlant->"Italic"],
 "==1 correspond to the standard usage of the IC; all ",
 StyleBox["icweight",
  FontSlant->"Italic"],
 ">1 entail that the IC at issue has been considered the representative of \
the class jointly expressed by the list of ",
 StyleBox["filters",
  FontSlant->"Italic"],
 ", its weight being the number of members in that class. At the moment, only \
CyclicClass is known that can be used for filtering out ICs (even though ",
 StyleBox["filters",
  FontSlant->"Italic"],
 " was conceived as a list).\n",
 StyleBox["NB",
  FontWeight->"Bold"],
 ": Depending on the Length[",
 StyleBox["bitsequence",
  FontSlant->"Italic"],
 "] and the number of time steps an IC is to be iterated, it may not be worth \
to filter it out, as the time to compute its class may be comparatively as \
time consuming as using the IC at issue as input of a rule."
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"705caf1c-3a36-4bc6-86f5-f755f4fd4c7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ICWeight", "[", 
    RowBox[{"filters_List", ",", "bitsequence_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"'", 
      RowBox[{
       RowBox[{"Cases", "[", "]"}], "'"}], " ", "act", " ", "over", " ", "a", 
      " ", "list", " ", 
      RowBox[{"with", ":", " ", 
       RowBox[{"the", " ", "classes", " ", "in", " ", "which", " ", 
        StyleBox["bitsequence",
         FontSlant->"Italic"], " ", "is", " ", "the", " ", "last", " ", 
        "member"}]}]}], ",", " ", 
     RowBox[{"or", " ", "Null", " ", 
      RowBox[{"otherwise", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Length", "@", 
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"bitsequence", "===", 
              RowBox[{"Last", "[", "#", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{"Apply", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", "bitsequence", "}"}]}], "]"}], "]"}], "&"}], "/@",
             "filters"}], ")"}]}], ",", 
         RowBox[{"Except", "[", "Null", "]"}]}], "]"}], ",", "1"}], "]"}], 
     "]"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[392]:=",ExpressionUUID->"32a8b600-9058-4b4a-9f56-53ef24a4761f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "DCT: evaluation in the ",
 StyleBox["Density Classification Task",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.54348937304515*^9},ExpressionUUID->"52c3bf48-99a4-4daf-aaad-\
ab67ad3badc7"],

Cell[TextData[{
 "The function evaluates a single rule number specification (in any of its \
various possible forms) on the DCT, when run with the CA-type function ",
 StyleBox["fCA",
  FontSlant->"Italic"],
 " from a list of ICs. It can also be called by the master function ",
 StyleBox["EvalRules",
  FontSlant->"Italic"],
 " (see details in the description of the ",
 StyleBox["EvalRules",
  FontSlant->"Italic"],
 "). It simply returns the ",
 StyleBox["score",
  FontSlant->"Italic"],
 " of the rule under evaluation.\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 "\nEvalRuleInDCT[{CellularAutomaton, {33357284, 2, 3}, UniformICs[1000, 55], \
200}, {}]\nEvalRuleInDCT[{CellularAutomaton, {33357284, 2, 3}, IntervalICs[0, \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "13"], "-", "1"}], ",", "13", ",", 
    RowBox[{"{", "CyclicClass", "}"}]}], TraditionalForm]],ExpressionUUID->
  "98ec5995-a43c-4240-a714-ec88d2ae1d04"],
 "], 200}, {}]\nEvalRuleInDCT[{CellularAutomaton, {33357284, 2, 3}, \
UniformICs[1000, 55], 200}, {f}]\nEvalRuleInDCT[{CASpatialComposition, \
Table[Random[Integer, {14, 89}], {55}], UniformICs[10, 55], 200}, {p, 5}]\n\
EvalRuleInDCT[{ECATemporalComposition, {{184, 30}, {232, 30}}, \
UniformICs[1000, 55]}, {p, 11}]\n\
EvalRuleInDCT[{AsynchronousCA,{WdO1,2,3},Tuples[{0,1},7],100,{{1},{2},{3},{4},\
{5},{6},{7}}},{}]\nEvalRuleInDCT[{AsynchCASpatialComposition, {{232, 2, 1}, \
{4276676736, 2, 2}, {232, 2, 1}, {4276676736, 2, 2}, {232, 2, 1}}, Tuples[{0, \
1}, 5], 35, {{2, 4}, {1, 3, 5}}}, {}]\n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": It is a very general function and, therefore, can be made faster with a \
more specific code. See just below for an example."
}], "Text",
 CellChangeTimes->{{3.722680092316082*^9, 3.722680093621864*^9}, {
   3.76228084391736*^9, 3.762281008102276*^9}, 3.763369796872393*^9, 
   3.763369845530675*^9, {3.763370258470414*^9, 3.763370314748483*^9}, {
   3.763445606485145*^9, 3.763445608196286*^9}, {3.763445702002785*^9, 
   3.763445733361155*^9}, {3.763445783687478*^9, 3.763445822428699*^9}, {
   3.763445917036704*^9, 3.763445917908617*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"06ed10b5-80b8-4404-993d-d1f37e4fbe2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvalRuleInDCT", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fCA_Symbol", ",", "args__"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"scoringtype_Symbol", ":", "f"}], ",", 
       RowBox[{"nstairs_Integer", ":", "0"}]}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ICs", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"aux", "=", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "args", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", "len", ",", 
       RowBox[{"score", "=", "0"}], ",", "icnumber", ",", "ic", ",", 
       "initblacks", ",", "finalblacks", ",", 
       RowBox[{"ns", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"scoringtype", "===", "f"}], ",", "0", ",", "nstairs"}], 
         "]"}]}], ",", "filters", ",", "icweight"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "ICs", "]"}], "===", "IntervalICs"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"len", "=", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"filters", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ICs", "]"}], "===", "4"}], ",", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"icnumber", "=", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"icnumber", "\[LessEqual]", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"icnumber", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ic", "=", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"icnumber", ",", "2", ",", "len"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"icweight", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"filters", "===", 
                RowBox[{"{", "}"}]}], ",", "1", ",", 
               RowBox[{"ICWeight", "[", 
                RowBox[{"filters", ",", "ic"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"icweight", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"initblacks", "=", 
                RowBox[{"Count", "[", 
                 RowBox[{"ic", ",", "1"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"finalblacks", "=", 
                RowBox[{"Total", "[", 
                 RowBox[{"Last", "[", 
                  RowBox[{"fCA", "[", 
                   RowBox[{"rnum", ",", " ", "ic", ",", 
                    RowBox[{"Sequence", "@@", "aux"}]}], "]"}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"len", "-", "initblacks"}], ")"}], ">", 
                  "initblacks"}], ",", 
                 RowBox[{"score", "+=", 
                  RowBox[{
                   RowBox[{"NewScore", "[", 
                    RowBox[{
                    RowBox[{"len", "-", "finalblacks"}], ",", "ns", ",", 
                    "len", ",", "1"}], "]"}], "icweight"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"initblacks", ">", 
                    RowBox[{"(", 
                    RowBox[{"len", "-", "initblacks"}], ")"}]}], ",", " ", 
                   RowBox[{"score", "+=", 
                    RowBox[{
                    RowBox[{"NewScore", "[", 
                    RowBox[{"finalblacks", ",", "ns", ",", "len", ",", "1"}], 
                    "]"}], "icweight"}]}]}], "]"}]}], "]"}]}]}], "]"}]}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"len", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "ICs", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"initblacks", "=", 
              RowBox[{"Count", "[", 
               RowBox[{"#", ",", "1"}], "]"}]}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"finalblacks", "=", 
              RowBox[{"Total", "[", 
               RowBox[{"Last", "[", 
                RowBox[{"fCA", "[", 
                 RowBox[{"rnum", ",", " ", "#", ",", 
                  RowBox[{"Sequence", "@@", "aux"}]}], "]"}], "]"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"len", "-", "initblacks"}], ")"}], ">", 
                "initblacks"}], ",", 
               RowBox[{"score", "+=", 
                RowBox[{"NewScore", "[", 
                 RowBox[{
                  RowBox[{"len", "-", "finalblacks"}], ",", "ns", ",", "len", 
                  ",", "1"}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"initblacks", ">", 
                  RowBox[{"(", 
                   RowBox[{"len", "-", "initblacks"}], ")"}]}], ",", " ", 
                 RowBox[{"score", "+=", 
                  RowBox[{"NewScore", "[", 
                   RowBox[{"finalblacks", ",", "ns", ",", "len", ",", "1"}], 
                   "]"}]}]}], "]"}]}], "]"}]}], ")"}], "&"}], " ", "/@", " ", 
          "ICs"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "@", "score"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[393]:=",ExpressionUUID->"d478a4e2-a0f4-4401-9fcb-a3ff568ab9d0"],

Cell[TextData[{
 "\nJust a fast evaluation of a specific rule in DCT, with asynchronous \
update.\n",
 StyleBox["Example of usage:",
  FontWeight->"Bold"],
 " fastAsynchronousEvalRuleInDCT[{WdO1, 2, 3}, Tuples[{0,1}, 7], 100, \
{{1,2,3,4}, {5,6,7}}] \n",
 StyleBox["Implementation note",
  FontWeight->"Bold"],
 ": \n1) It could be made even faster, by using fastAsynchronousCA..."
}], "Text",
 CellChangeTimes->{
  3.722679049610424*^9, {3.7226790828221493`*^9, 3.722679125838334*^9}, {
   3.722680038361322*^9, 3.722680039630023*^9}, {3.72268353686665*^9, 
   3.72268355720407*^9}, {3.722683717203633*^9, 3.722683733592494*^9}, {
   3.7226837683786182`*^9, 3.722683829094718*^9}, {3.722683893906997*^9, 
   3.722684048966448*^9}, {3.746379399197089*^9, 3.746379431857475*^9}, {
   3.746379564482498*^9, 3.746379662066066*^9}, {3.7463796952857237`*^9, 
   3.746379702800007*^9}, {3.762280225209255*^9, 3.762280346439905*^9}, {
   3.762280611200558*^9, 3.762280655491448*^9}, {3.7622806942584968`*^9, 
   3.7622807076459713`*^9}, {3.762281030275617*^9, 3.762281033627963*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"32cb0f3a-d793-40b5-860f-db1858c69e55"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fastAsynchronousEvalRuleInDCT", "[", 
    RowBox[{
    "rule_List", ",", "iclist_List", ",", "tsteps_Integer", ",", "UDS_List"}],
     "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Union", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"FixedPoint", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"AsynchronousCA", "[", 
                RowBox[{"rule", ",", "#", ",", "UDS"}], "]"}], "&"}], ",", 
              "#", ",", "tsteps"}], "]"}], "&"}], "/@", "iclist"}], ")"}]}]}],
        ",", 
       RowBox[{"pre", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Commonest", "[", "#", "]"}], "&"}], "/@", "iclist"}]}]}], 
      "}"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "ans", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
           "\[Equal]", 
           RowBox[{
           "pre", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}], 
          ",", "1", ",", "0"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "pre", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.762280100678785*^9, 3.762280163390415*^9}, {
  3.7641749781638*^9, 3.764174979031056*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"c55ff303-109c-4361-b219-1be14f9d7abc"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "PP: evaluation in the ",
 StyleBox["Parity Problem",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489368604719*^9},ExpressionUUID->"7514c03c-39e8-4076-bf48-\
d4ab65833f4c"],

Cell[TextData[{
 StyleBox["Parity Problem",
  FontWeight->"Bold"],
 ": if the number of 1s in an IC is even the CA has to converge to all 0s; \
otherwise, it has to converge to all 1s. \nThe function evaluates a single \
rule number specification (in any of its various possible forms) on the \
Parity Problem (PP), when run with the CA-type function ",
 StyleBox["fCA",
  FontSlant->"Italic"],
 " from a list of ICs. It can also be called by the master function ",
 StyleBox["EvalRules",
  FontSlant->"Italic"],
 " (see details in the description of the ",
 StyleBox["EvalRules",
  FontSlant->"Italic"],
 ").\nSee also further details in the description of the functions EvalRules \
and EvalRuleInDCT."
}], "Text",
 CellChangeTimes->{{3.7634454319776278`*^9, 3.763445437902358*^9}, {
  3.763445852322411*^9, 3.763445884270619*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"39baa570-2d08-4063-9ed8-b9f7161ae621"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvalRuleInPP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fCA_Symbol", ",", "args__"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"scoringtype_Symbol", ":", "f"}], ",", 
       RowBox[{"nstairs_Integer", ":", "0"}]}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"ICs", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"aux", "=", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "args", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", "len", ",", 
       RowBox[{"score", "=", "0"}], ",", "icnumber", ",", "ic", ",", 
       "initblacks", ",", "finalblacks", ",", 
       RowBox[{"ns", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"scoringtype", "===", "f"}], ",", "0", ",", "nstairs"}], 
         "]"}]}], ",", "filters", ",", "icweight"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "ICs", "]"}], "===", "IntervalICs"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"len", "=", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"filters", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ICs", "]"}], "===", "4"}], ",", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"icnumber", "=", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"icnumber", "\[LessEqual]", 
            RowBox[{
            "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"icnumber", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ic", "=", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"icnumber", ",", "2", ",", "len"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"icweight", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"filters", "===", 
                RowBox[{"{", "}"}]}], ",", "1", ",", 
               RowBox[{"ICWeight", "[", 
                RowBox[{"filters", ",", "ic"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"icweight", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"initblacks", "=", 
                RowBox[{"Count", "[", 
                 RowBox[{"ic", ",", "1"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"finalblacks", "=", 
                RowBox[{"Total", "[", 
                 RowBox[{"Last", "[", 
                  RowBox[{"fCA", "[", 
                   RowBox[{"rnum", ",", " ", "ic", ",", 
                    RowBox[{"Sequence", "@@", "aux"}]}], "]"}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"EvenQ", "[", "initblacks", "]"}], ",", 
                 RowBox[{"score", "+=", 
                  RowBox[{
                   RowBox[{"NewScore", "[", 
                    RowBox[{
                    RowBox[{"len", "-", "finalblacks"}], ",", "ns", ",", 
                    "len", ",", "1"}], "]"}], "icweight"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"OddQ", "[", "initblacks", "]"}], ",", 
                   RowBox[{"score", "+=", 
                    RowBox[{
                    RowBox[{"NewScore", "[", 
                    RowBox[{"finalblacks", ",", "ns", ",", "len", ",", "1"}], 
                    "]"}], "icweight"}]}]}], "]"}]}], "]"}]}]}], "]"}]}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"len", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "ICs", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"initblacks", "=", 
              RowBox[{"Count", "[", 
               RowBox[{"#", ",", "1"}], "]"}]}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"finalblacks", "=", 
              RowBox[{"Total", "[", 
               RowBox[{"Last", "[", 
                RowBox[{"fCA", "[", 
                 RowBox[{"rnum", ",", " ", "#", ",", 
                  RowBox[{"Sequence", "@@", "aux"}]}], "]"}], "]"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"EvenQ", "[", "initblacks", "]"}], ",", 
               RowBox[{"score", "+=", 
                RowBox[{"NewScore", "[", 
                 RowBox[{
                  RowBox[{"len", "-", "finalblacks"}], ",", "ns", ",", "len", 
                  ",", "1"}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"OddQ", "[", "initblacks", "]"}], ",", 
                 RowBox[{"score", "+=", 
                  RowBox[{"NewScore", "[", 
                   RowBox[{"finalblacks", ",", "ns", ",", "len", ",", "1"}], 
                   "]"}]}]}], "]"}]}], "]"}]}], ")"}], "&"}], " ", "/@", " ", 
          "ICs"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "@", "score"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[395]:=",ExpressionUUID->"94f05cbe-ce0b-4d5f-ac4e-15c84e5b5846"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "HNDP: evaluation in ",
 StyleBox["Handwritten Numerical Digit Prototyping",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.392755616600544*^9, 3.392755617171365*^9}, {
   3.392755647334738*^9, 3.3927556478655*^9}, {3.3930974337798805`*^9, 
   3.3930974354522867`*^9}, {3.393097848225826*^9, 3.3930978696866846`*^9}, {
   3.3930980013760448`*^9, 3.393098022786832*^9}, {3.393102802129188*^9, 
   3.3931028087987795`*^9}, 3.393108959903633*^9, {3.3931420234241447`*^9, 
   3.393142045335653*^9}, {3.39314445552133*^9, 3.393144527334592*^9}, {
   3.3931446605761843`*^9, 3.3931446928325667`*^9}, {3.393144963762144*^9, 
   3.3931449711728*^9}, {3.393146604977621*^9, 3.3931466567720976`*^9}, {
   3.393146998393325*^9, 3.393147041725634*^9}, {3.3931470994586487`*^9, 
   3.393147153626539*^9}, {3.393147445696515*^9, 3.393147454569274*^9}, {
   3.393147928660984*^9, 3.393148034082573*^9}, {3.394869496046957*^9, 
   3.394869563463897*^9}, {3.394871975852742*^9, 3.394872119679555*^9}, {
   3.394872266841163*^9, 3.394872272389141*^9}, {3.394872336941963*^9, 
   3.394872367636099*^9}, 3.395086720059619*^9, {3.395094599529741*^9, 
   3.395094610325264*^9}, 3.39513500313216*^9, {3.395135088765294*^9, 
   3.395135110055909*^9}, 3.543489263744525*^9, 3.543489305077145*^9, 
   3.543489363918006*^9},ExpressionUUID->"14cb1745-1244-4f40-85f6-\
02243ff918a3"],

Cell[TextData[{
 "The evaluation of a rule for HNDP relies upon the prototypes derived from \
the HND families used to evaluate it. The closer these prototypes follow the \
criteria below, the better the rule:\n1) Every prototype should be a good \
representative of the family it refers to. This means that if some HND family \
has N instances, the prototype should be based on, ideally, N spectral fixed \
points, achieved by every instance. This  is why, when a prototype is drawn \
from an HND family, its value is multiplied by the number of instances in the \
family. \n2) Every prototype should be representative only of a single \
family. This means that they should be very distinct from each other.\n3) The \
number of prototypes should be the closer the possible to the number of HND \
families used in the evaluation of the rule. This is why \
Total[Mean[Flatten[#]]& /@ allprototypes] is divided by 10, so that rules \
with less prototypes are penalised. \n",
 StyleBox["Implementation notes",
  FontWeight->"Bold"],
 ":\n1) The Total[Mean[]] function ensures that rules with better prototypes \
also tend to yield larger value.\n2) The Variance function measures \
dispersion of the prototypes. It is multiplied by a factor that is much \
larger than the variance values (between 0 and 1). The Mean function may not \
be required, but it is a way to decrease that factor, so as to balance it to \
the variance values.\n3) When a rule has 0 or only 1 or 2 prototypes, it is \
evaluated to zero. This is due to the fact that, in these three cases, \
Variance is undefined. \n4) Total[Mean[Flatten[#]]& /@ allprototypes] takes \
the average inside each individual prototype, then sums them all.\n",
 StyleBox["Examples of usage:",
  FontWeight->"Bold"],
 "\nEvalRuleInHNDP[{CellularAutomaton, {33357284, 2, {1, 1}}, HNDfamilies, \
200}, {",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], TraditionalForm]],ExpressionUUID->
  "c838a11a-8e52-4227-8d04-6579ae8cd558"],
 "}]\nEvalRuleInHNDP[{CellularAutomaton, {33357284, 2, {1, 1}}, HNDfamilies, \
200}]\nEvalRuleInHNDP[{CrossedECA, {32, 108}, HNDfamilies, 100}]"
}], "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cc771163-bab8-465c-8206-1d37fc5f0907"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvalRuleInHNDP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fCA_Symbol", ",", "args__"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"delta_Real", ":"}], "1.", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]]}], "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rnum", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"hndfamilies", "=", 
        RowBox[{
         RowBox[{"{", "args", "}"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"aux", "=", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "args", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", "allprototypes"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"allprototypes", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"GetPrototype", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"fCA", ",", "rnum", ",", "#", ",", 
                RowBox[{"Sequence", "@@", "aux"}]}], "}"}], ",", "delta"}], 
             "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "&"}], " ", "/@", " ", "hndfamilies"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", "\[NotEqual]", 
           RowBox[{"{", "}"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "allprototypes", "]"}], "\[LessEqual]", "2"}],
         ",", "0.", ",", 
        RowBox[{
         RowBox[{"Variance", "[", 
          RowBox[{"FunctionOverPairs", "[", 
           RowBox[{"SpectralDist", ",", "allprototypes"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}], " ", "/@", 
            " ", "allprototypes"}], "]"}], "/", "10."}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[396]:=",ExpressionUUID->"bb8ed3dc-250f-494e-bcad-6a6889f3bd09"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["22. Input-output", "Section",
 CellChangeTimes->{
  3.558189224781785*^9, {3.722676391079574*^9, 3.722676391675618*^9}, 
   3.785341354139783*^9},ExpressionUUID->"56036a7b-dcd0-4bf1-a721-\
04aa2a484aa3"],

Cell[TextData[{
 "AppendListToFile creates or open the file ",
 StyleBox["filename",
  FontSlant->"Italic"],
 ", appends every element of ",
 StyleBox["dataList",
  FontSlant->"Italic"],
 " in it, and closes it. The version AppendToFile save the entire ",
 StyleBox["data",
  FontSlant->"Italic"],
 " and finishes the process."
}], "Text",
 CellChangeTimes->{{3.586965368485423*^9, 3.58696543365628*^9}, {
   3.5869654776865053`*^9, 3.586965488870166*^9}, {3.586966675339653*^9, 
   3.586966735878953*^9}, {3.779962920038255*^9, 3.7799629619341*^9}, {
   3.928130906318521*^9, 3.928130908703648*^9}, 3.9281311572218246`*^9, {
   3.928131536700667*^9, 3.928131547823848*^9}, {3.931508432901307*^9, 
   3.9315085137311983`*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"821150e2-dfde-4783-9d29-18e1e2251ba9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AppendListToFile", "[", 
    RowBox[{"filename_String", ",", "dataList_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OpenAppend", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Write", "[", 
        RowBox[{"filename", ",", "#"}], "]"}], "&"}], "/@", "dataList"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.586965252755038*^9, 3.586965272963744*^9}, {
  3.931508572855403*^9, 3.9315085740785513`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"c51682e3-eed9-48a1-8579-347ba8e5e49c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AppendToFile", "[", 
    RowBox[{"filename_String", ",", "data_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OpenAppend", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Write", "[", 
      RowBox[{"filename", ",", "data"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.586965252755038*^9, 3.586965272963744*^9}, {
  3.779962892850564*^9, 3.7799629068533487`*^9}, {3.928131411798483*^9, 
  3.928131436324551*^9}, {3.931508558926559*^9, 3.931508560173819*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"7e367708-abfe-42ea-ab74-ba64575c2292"],

Cell[TextData[{
 "Creates and open ",
 StyleBox["filename",
  FontSlant->"Italic"],
 ", writes every element of ",
 StyleBox["dataList",
  FontSlant->"Italic"],
 " in it, and closes it. The version SaveToNewFile saves the entire ",
 StyleBox["data",
  FontSlant->"Italic"],
 " and finishes the process."
}], "Text",
 CellChangeTimes->{{3.586965368485423*^9, 3.58696543365628*^9}, {
   3.779962969291739*^9, 3.779962985607513*^9}, 3.92813088685793*^9, {
   3.9281315414235916`*^9, 3.928131551817212*^9}},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"011e7b80-cb1f-4d58-b575-75343fdc7682"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SaveListToNewFile", "[", 
    RowBox[{"filename_String", ",", "dataList_List"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OpenWrite", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Write", "[", 
        RowBox[{"filename", ",", "#"}], "]"}], "&"}], "/@", "dataList"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.586510732819252*^9, 3.586510736332219*^9}, {
   3.586510884702663*^9, 3.586511046531114*^9}, {3.586511170737602*^9, 
   3.586511172169*^9}, 3.586511238276989*^9, {3.586965235077339*^9, 
   3.586965235627331*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"4a70fac9-fa5b-4b2f-afbd-215d20b0e1a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SaveToNewFile", "[", 
    RowBox[{"filename_String", ",", "data_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OpenWrite", "[", "filename", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Write", "[", 
      RowBox[{"filename", ",", "data"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "filename", "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.586510732819252*^9, 3.586510736332219*^9}, {
   3.586510884702663*^9, 3.586511046531114*^9}, {3.586511170737602*^9, 
   3.586511172169*^9}, 3.586511238276989*^9, {3.586965235077339*^9, 
   3.586965235627331*^9}, {3.779962804728935*^9, 3.779962810868984*^9}, {
   3.928131419830908*^9, 3.928131446181223*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"41ff1bfd-9a39-4847-86da-c76eaf829a9a"],

Cell[TextData[{
 "Takes the representation of a rule and works out its corresponding rule \
number, in Wolfram\.b4s lexicographic order (from neighbourhood 11...1 to \
00...0). It is assumed that the given rule representation is in the opposite \
sequence of Wolfram\.b4s lexicographic order, given to the function as a \
string (possibly with blank characters in it), followed by the base the input \
is in, given either as a string or an integer. Usually, this function has \
been used for ",
 StyleBox["k",
  FontSlant->"Italic"],
 "=2 rules, in hexa (",
 StyleBox["base",
  FontSlant->"Italic"],
 "=16) or binary (",
 StyleBox["base",
  FontSlant->"Italic"],
 "=2) representations. \n",
 StyleBox["Examples of usage",
  FontWeight->"Bold"],
 " (with JP1 in hexa and in binary):\n\
ToRnumInWolframLexOrder[\"1451305C0050CE5F1711FF5F0F53CF5F\", 16]\n\
ToRnumInWolframLexOrder[\"1451 305C 0050 CE5F 1711 FF5F 0F53 CF5F\", \"16\"]\n\
ToRnumInWolframLexOrder[\"\
000101000101000100110000010111000000000001010000110011100101111100010111000100\
01111111110101111100001111010100111100111101011111\", 2]\n\
ToRnumInWolframLexOrder[\"\
000101000101000100110000010111000000000001010000110011100101111100010111000100\
01111111110101111100001111010100111100111101011111\", \"2\"]"
}], "Text",
 CellChangeTimes->{3.780047045026177*^9, 3.931508696292148*^9},
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"f264be26-553e-414c-9d7f-46f2f792b494"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ToRnumInWolframLexOrder", "[", 
    RowBox[{"digitsequence_String", ",", "inputbase_", ",", 
     RowBox[{"k_Integer", ":", "2"}], ",", 
     RowBox[{"r_", ":", "3"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringQ", "[", "inputbase", "]"}], ",", "inputbase", ",", 
            RowBox[{"ToString", "[", "inputbase", "]"}]}], "]"}], "<>", 
          "\"\<^^\>\"", "<>", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"digitsequence", ",", 
            RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}]}], "]"}], 
        ",", "k", ",", 
        SuperscriptBox["k", 
         RowBox[{"\[LeftCeiling]", 
          RowBox[{
           RowBox[{"2", "r"}], " ", "+", " ", "1"}], "\[RightCeiling]"}]]}], 
       "]"}], "]"}], ",", "k"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.746440584740823*^9},
 CellLabel->
  "In[400]:=",ExpressionUUID->"499d11d5-0485-43a3-8a4c-f9fe7827b130"]
}, Closed]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{1188, 600.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"b185518d-7cf6-4b41-b223-98abaafaf0ac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 608, 15, 63, "Title",ExpressionUUID->"c536cd72-7361-4f96-ab99-6bd7a4234ac9"],
Cell[1191, 39, 10585, 149, 52, "Subsection",ExpressionUUID->"cb0834c7-e0dd-4042-9b11-26613477b19f"],
Cell[CellGroupData[{
Cell[11801, 192, 373, 6, 44, "Section",ExpressionUUID->"84eac040-a18e-4237-8685-b45b9658428b"],
Cell[12177, 200, 4298, 98, 281, "Text",ExpressionUUID->"9d062478-ff31-4183-87ba-d6a55f86aea1"]
}, Closed]],
Cell[CellGroupData[{
Cell[16512, 303, 274, 4, 44, "Section",ExpressionUUID->"df2f9e2c-2733-480e-9f28-4fa98a195413"],
Cell[CellGroupData[{
Cell[16811, 311, 152, 2, 34, "Subsection",ExpressionUUID->"e1106a5c-c7e1-4fd6-b677-c36a8ce943a7"],
Cell[16966, 315, 1659, 28, 29, "Text",ExpressionUUID->"232d79f0-2ee5-46cb-9491-cf271c97ce0a"],
Cell[18628, 345, 1430, 26, 41, "Input",ExpressionUUID->"234bfee9-f881-42d9-857b-e1b3f253405f"],
Cell[20061, 373, 785, 15, 47, "Text",ExpressionUUID->"da105ade-0ba7-4e8d-888e-ffc3118c44cd"],
Cell[20849, 390, 651, 18, 41, "Input",ExpressionUUID->"cd128e1f-b344-48fc-a9ac-7fb1ab97951f"],
Cell[21503, 410, 1400, 43, 137, "Text",ExpressionUUID->"1a020eba-eace-41db-bf8b-1e2ad6e95612"],
Cell[22906, 455, 4214, 81, 163, "Input",ExpressionUUID->"d3bfe59b-70e0-43af-838c-79ee0345f8a4"],
Cell[27123, 538, 400, 8, 47, "Text",ExpressionUUID->"ee9e4349-af71-4e49-a5b3-a10c3f25b37a"],
Cell[27526, 548, 581, 15, 61, "Input",ExpressionUUID->"a1b093d0-0c5e-4894-b10a-44eed0c6fcc8"],
Cell[28110, 565, 599, 16, 47, "Text",ExpressionUUID->"a1740432-f525-4651-b052-d51b64c2f318"],
Cell[28712, 583, 616, 16, 61, "Input",ExpressionUUID->"79043ad2-e018-4a65-8435-b18a3c530f3e"],
Cell[29331, 601, 494, 15, 47, "Text",ExpressionUUID->"869a21e4-ea51-4b24-a07c-1f61b8df887a"],
Cell[29828, 618, 525, 12, 61, "Input",ExpressionUUID->"029c78fa-58ab-49e8-8f05-b71c2aec5e2e"],
Cell[30356, 632, 428, 9, 65, "Text",ExpressionUUID->"93083774-cac9-4292-a366-0c647ab79db8"],
Cell[30787, 643, 519, 13, 41, "Input",ExpressionUUID->"6f5c3d6e-3307-4aff-a982-4a5348c6cdec"],
Cell[31309, 658, 305, 8, 50, "Text",ExpressionUUID->"fe64a11b-44c8-487b-9edf-74f75ebb1494"],
Cell[31617, 668, 537, 15, 41, "Input",ExpressionUUID->"e0e9489e-43bd-4731-b432-fc6739be7829"],
Cell[32157, 685, 718, 19, 65, "Text",ExpressionUUID->"01ce68f9-5b04-4cd9-9bf9-c74db6672466"],
Cell[32878, 706, 1174, 33, 41, "Input",ExpressionUUID->"30c6f260-b54e-4e63-8b13-93904088e088"],
Cell[34055, 741, 582, 18, 65, "Text",ExpressionUUID->"85b6fed7-6fac-46b1-ae19-b715b1f2ba50"],
Cell[34640, 761, 413, 11, 41, "Input",ExpressionUUID->"3a1c46be-73dd-4c5f-8cd7-41bab131b135"],
Cell[35056, 774, 1396, 41, 141, "Text",ExpressionUUID->"8fe5e533-6d70-4d14-a79b-771a850b27af"],
Cell[36455, 817, 806, 23, 61, "Input",ExpressionUUID->"1df56b1f-58be-4f89-90e1-63d096c49a2a"],
Cell[37264, 842, 590, 15, 101, "Text",ExpressionUUID->"ba541a73-562e-4dee-8e63-d2eeafe93a21"],
Cell[37857, 859, 423, 12, 41, "Input",ExpressionUUID->"3e28dfd1-668b-4c4b-b7fa-909a38218347"],
Cell[38283, 873, 1348, 36, 191, "Text",ExpressionUUID->"eac4322b-2b02-4a00-bfdc-761580bb183e"],
Cell[39634, 911, 3070, 67, 163, "Input",ExpressionUUID->"e5624315-1a49-4a5c-b79e-ff0912ad4817"]
}, Closed]],
Cell[CellGroupData[{
Cell[42741, 983, 103, 0, 26, "Subsection",ExpressionUUID->"352a9343-bcd2-44b3-b83d-45626755d6c3"],
Cell[42847, 985, 263, 7, 30, "Text",ExpressionUUID->"02c1b355-c64e-40a8-a825-5e38c81ec1ae"],
Cell[43113, 994, 699, 19, 42, "Input",ExpressionUUID->"39aa01c0-e0dc-4e88-ad70-0aeb593737e0"],
Cell[43815, 1015, 260, 7, 30, "Text",ExpressionUUID->"79b4cc9e-c0e4-490b-b807-be035877ddd1"],
Cell[44078, 1024, 412, 11, 42, "Input",ExpressionUUID->"223e35ec-d35b-47f8-8d5c-a5fecbcef14f"]
}, Closed]],
Cell[CellGroupData[{
Cell[44527, 1040, 120, 0, 26, "Subsection",ExpressionUUID->"d7fb97f4-b9b1-4caf-8fdc-731153df64ed"],
Cell[44650, 1042, 508, 15, 30, "Text",ExpressionUUID->"e2d65d1d-753d-4937-880d-f18aab12cc01"],
Cell[45161, 1059, 714, 19, 42, "Input",ExpressionUUID->"1d9944c1-b918-43ce-a197-7f91bfc27479"],
Cell[45878, 1080, 244, 7, 30, "Text",ExpressionUUID->"7c51f094-4867-4f8a-9ab5-66ab1e76637a"],
Cell[46125, 1089, 538, 13, 42, "Input",ExpressionUUID->"b577d678-37a4-4d85-a3a1-d7b8c4ab842e"],
Cell[46666, 1104, 517, 15, 49, "Text",ExpressionUUID->"69d0acd2-b998-40d1-8882-b04f50d2624c"],
Cell[47186, 1121, 1543, 42, 90, "Input",ExpressionUUID->"bd4ac60b-4ef4-472e-9b03-d4fd3412e853"],
Cell[48732, 1165, 515, 14, 49, "Text",ExpressionUUID->"ee73cfdf-10ed-460c-8e86-0029f99312ce"],
Cell[49250, 1181, 862, 24, 64, "Input",ExpressionUUID->"9326bf48-48c2-4ced-b44e-41e273107e23"],
Cell[50115, 1207, 232, 7, 30, "Text",ExpressionUUID->"77179f5f-509b-452e-9155-21bcbcd443ab"],
Cell[50350, 1216, 642, 18, 64, "Input",ExpressionUUID->"cbf874e8-d0e6-4105-86e2-aa1ce21dcfbb"],
Cell[50995, 1236, 231, 7, 30, "Text",ExpressionUUID->"243d7c86-872b-48d3-906c-dbf172b51da8"],
Cell[51229, 1245, 642, 18, 64, "Input",ExpressionUUID->"be194a3b-a765-4657-ab8b-42078629b855"]
}, Closed]],
Cell[CellGroupData[{
Cell[51908, 1268, 174, 2, 26, "Subsection",ExpressionUUID->"ab3ec5a7-d59c-4b5e-8f01-78570f094351"],
Cell[52085, 1272, 592, 16, 68, "Text",ExpressionUUID->"ac8f0f44-d4cc-46a3-877a-aed8e0b0b424"],
Cell[52680, 1290, 681, 19, 64, "Input",ExpressionUUID->"808b6fa4-e895-42fe-affc-ea3e28f102e8"],
Cell[53364, 1311, 984, 28, 87, "Text",ExpressionUUID->"224e87db-97b6-4c8f-a7e8-5fd9ea351a34"],
Cell[54351, 1341, 871, 25, 64, "Input",ExpressionUUID->"2f1e4bfa-2613-4b49-8681-7e520fb089a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[55259, 1371, 81, 0, 26, "Subsection",ExpressionUUID->"cde636a9-5370-4136-b201-3ca991937491"],
Cell[55343, 1373, 831, 19, 49, "Text",ExpressionUUID->"e93ca9a2-3998-42a9-a372-ca896f76b351"],
Cell[56177, 1394, 1193, 26, 64, "Input",ExpressionUUID->"6eb7a252-568d-43a3-9b42-f5a20f443978"],
Cell[57373, 1422, 338, 9, 49, "Text",ExpressionUUID->"6f496a3d-3ed0-4629-86ee-2028c666b75d"],
Cell[57714, 1433, 375, 9, 42, "Input",ExpressionUUID->"dd5c996e-2d5f-4894-b4d8-861db064d5b6"],
Cell[58092, 1444, 293, 11, 49, "Text",ExpressionUUID->"f2ea6610-7976-432f-9b39-7b2b0e19ce62"],
Cell[58388, 1457, 432, 11, 42, "Input",ExpressionUUID->"dc75d870-c102-49d1-9bef-761b95cbd602"],
Cell[58823, 1470, 303, 8, 49, "Text",ExpressionUUID->"4166d80e-6114-4bc7-80e1-1cc0dc8fa9e1"],
Cell[59129, 1480, 724, 20, 42, "Input",ExpressionUUID->"f9f85439-b440-4f24-b4e6-2f936f5c6409"],
Cell[59856, 1502, 574, 20, 49, "Text",ExpressionUUID->"f2401287-1bff-44fb-b397-148f100a4536"],
Cell[60433, 1524, 1043, 29, 64, "Input",ExpressionUUID->"98c0eced-49ff-422f-aa42-2e16ec96aec7"],
Cell[61479, 1555, 331, 8, 49, "Text",ExpressionUUID->"2db59eb6-74f9-4a43-9c08-1f9b49fe3efe"],
Cell[61813, 1565, 397, 10, 42, "Input",ExpressionUUID->"42c9d966-cf9b-47e5-8e84-7cd3ef706517"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62259, 1581, 176, 3, 44, "Section",ExpressionUUID->"90f45815-d636-401b-bbed-39778cecebdd"],
Cell[CellGroupData[{
Cell[62460, 1588, 1242, 18, 34, "Subsection",ExpressionUUID->"2d7975e6-e62d-46b1-b590-5380c1f5cb99"],
Cell[63705, 1608, 2002, 45, 211, "Text",ExpressionUUID->"5ffd2b11-423a-4955-9b1c-a64bfcddfac1"],
Cell[65710, 1655, 3471, 96, 128, "Input",ExpressionUUID->"550cd6cc-4bea-499a-8f61-46733c4717de"],
Cell[69184, 1753, 913, 18, 101, "Text",ExpressionUUID->"2b1923ef-985e-4153-9b73-41fc0f3c3eb4"],
Cell[70100, 1773, 1119, 27, 102, "Input",ExpressionUUID->"db4fdfff-a30b-45f8-af5b-ad48e40d4ed2"],
Cell[71222, 1802, 843, 18, 101, "Text",ExpressionUUID->"8b0ab320-5af1-43fb-af84-e8a561b929c4"],
Cell[72068, 1822, 468, 10, 41, "Input",ExpressionUUID->"18d4fc61-50d1-4fdd-8f75-e4c368e6a41d"],
Cell[72539, 1834, 759, 18, 83, "Text",ExpressionUUID->"925b0a71-a84d-4d5e-859c-74ec4032b62e"],
Cell[73301, 1854, 699, 15, 61, "Input",ExpressionUUID->"0bf41f9a-89cc-4061-a850-c36f0d09b1f7"],
Cell[74003, 1871, 205, 6, 47, "Text",ExpressionUUID->"9406bb71-0957-4b62-83b2-a25e9cc5ddf2"],
Cell[74211, 1879, 547, 13, 61, "Input",ExpressionUUID->"2cc641c9-a3bd-43bb-9ded-24dacae85f69"],
Cell[74761, 1894, 613, 14, 101, "Text",ExpressionUUID->"f180d854-3693-4f00-9647-92898766f805"],
Cell[75377, 1910, 1023, 26, 82, "Input",ExpressionUUID->"fb76343a-acdd-4596-939b-e66c3305d05b"],
Cell[76403, 1938, 1237, 25, 47, "Text",ExpressionUUID->"a3051c61-1974-4c8d-a76f-4d7e01e42927"],
Cell[77643, 1965, 937, 25, 41, "Input",ExpressionUUID->"27181949-e0fe-43ab-89ff-88848376b197"],
Cell[78583, 1992, 1857, 41, 173, "Text",ExpressionUUID->"90713c8d-f96a-4cf2-93bb-de149b12f24a"],
Cell[80443, 2035, 3937, 97, 102, "Input",ExpressionUUID->"2451b690-505e-4c02-8116-5512c794083e"],
Cell[84383, 2134, 2190, 47, 122, "Text",ExpressionUUID->"00cdf60d-6226-4b22-aeea-335acd2be31e"],
Cell[86576, 2183, 1988, 47, 127, "Input",ExpressionUUID->"c4bb0151-f7f0-4593-a932-664bbe960b9a"],
Cell[88567, 2232, 2731, 48, 209, "Text",ExpressionUUID->"6f4180b4-f324-4447-ada5-713d7eae76aa"],
Cell[91301, 2282, 5692, 121, 123, "Input",ExpressionUUID->"72fff3d2-c001-4126-9b2d-247ca7948dc2"],
Cell[96996, 2405, 258, 7, 47, "Text",ExpressionUUID->"23c60baf-9149-4323-a6ae-f0a2d906d15f"],
Cell[97257, 2414, 457, 12, 41, "Input",ExpressionUUID->"14eb75e1-4fc4-48d2-ab0b-d63699779a0d"],
Cell[97717, 2428, 1023, 24, 101, "Text",ExpressionUUID->"4dd9a42e-c71d-4ee3-b084-fcccb616a083"],
Cell[98743, 2454, 2866, 63, 247, "Input",ExpressionUUID->"9ac4080e-65cf-4e99-bcbb-cb68f94b6cd8"],
Cell[101612, 2519, 456, 16, 47, "Text",ExpressionUUID->"90653f1d-dfd3-42c7-a4bd-9b187ae6b054"],
Cell[102071, 2537, 1413, 36, 82, "Input",ExpressionUUID->"54cfad9f-3c02-422a-8aed-406295056712"],
Cell[103487, 2575, 484, 13, 65, "Text",ExpressionUUID->"a634f650-e208-4a0e-bc07-087ea7a6c2d1"],
Cell[103974, 2590, 944, 24, 61, "Input",ExpressionUUID->"33b754bb-7d4d-474c-a406-05e2403c95e5"],
Cell[104921, 2616, 619, 12, 119, "Text",ExpressionUUID->"a80ce846-ca1a-4d20-8725-1b9fbf462026"],
Cell[105543, 2630, 1148, 32, 82, "Input",ExpressionUUID->"993d70f8-871c-4b3a-90bd-fdf3368c4497"]
}, Closed]],
Cell[CellGroupData[{
Cell[106728, 2667, 1245, 18, 26, "Subsection",ExpressionUUID->"838f7d5d-5ed5-44a9-8696-9bc810d7232a"],
Cell[107976, 2687, 616, 14, 87, "Text",ExpressionUUID->"48779cda-88c7-4a7b-a767-13c40500c11e"],
Cell[108595, 2703, 881, 23, 45, "Input",ExpressionUUID->"f0f72a31-ff65-4ba8-8ad1-4a93a511f7a9"],
Cell[109479, 2728, 795, 22, 106, "Text",ExpressionUUID->"292ab257-22ac-4b59-a5e1-15eeca074d6e"],
Cell[110277, 2752, 2886, 58, 315, "Text",ExpressionUUID->"fe3d1cee-b69f-4987-acac-1dc2a20eacb7"],
Cell[113166, 2812, 3966, 97, 312, "Input",ExpressionUUID->"ad8b9768-8d89-4c1e-ae75-0baa58847b6a"],
Cell[117135, 2911, 1393, 27, 201, "Text",ExpressionUUID->"433a87d6-8c6d-4472-8b78-310aebedbe89"],
Cell[118531, 2940, 2104, 56, 190, "Input",ExpressionUUID->"74bdb6ce-86ba-4557-a45e-a60ced441898"],
Cell[120638, 2998, 452, 10, 49, "Text",ExpressionUUID->"a7c7d032-e513-4877-9258-e4ca34f4868f"],
Cell[121093, 3010, 1758, 48, 127, "Input",ExpressionUUID->"882dd356-a16c-4fa8-816b-160c69918dfe"],
Cell[122854, 3060, 260, 7, 30, "Text",ExpressionUUID->"fc006ba7-9b97-4cfc-84c2-3963ade6a88c"],
Cell[123117, 3069, 518, 14, 42, "Input",ExpressionUUID->"f8bd7226-a56e-4aef-bbd7-a2a4ba411fa1"],
Cell[123638, 3085, 322, 7, 30, "Text",ExpressionUUID->"079e565b-a4d3-45e0-875b-3261744575c6"],
Cell[123963, 3094, 802, 21, 45, "Input",ExpressionUUID->"7046886d-5cff-4c6e-b30e-a14e8d02d2f1"],
Cell[124768, 3117, 659, 14, 68, "Text",ExpressionUUID->"c843853d-103a-49c3-aa72-5a07e5e48fc7"],
Cell[125430, 3133, 711, 20, 64, "Input",ExpressionUUID->"64e40aa4-7576-420a-a916-c42631f4e647"],
Cell[126144, 3155, 561, 18, 49, "Text",ExpressionUUID->"2c8ae193-ca93-461f-a487-90ebdd57fef5"],
Cell[126708, 3175, 894, 24, 64, "Input",ExpressionUUID->"c37fd88c-d039-4e14-b12a-b0c6bff5949c"],
Cell[127605, 3201, 1709, 34, 239, "Text",ExpressionUUID->"6509e549-7b8b-4128-87c4-072d2fcd4ee6"],
Cell[129317, 3237, 1959, 51, 127, "Input",ExpressionUUID->"96136d6d-ae4c-4caa-ba77-f5417d64007d"],
Cell[131279, 3290, 1326, 37, 144, "Text",ExpressionUUID->"f3ba3a43-4980-4e30-9c12-4fb2960e4df9"],
Cell[132608, 3329, 5764, 145, 379, "Input",ExpressionUUID->"879fd30b-d07f-4c67-83aa-997c0f88be43"],
Cell[138375, 3476, 1360, 45, 144, "Text",ExpressionUUID->"979eeb93-82bc-421f-a796-8f77fec74a8a"],
Cell[139738, 3523, 1515, 40, 85, "Input",ExpressionUUID->"13c58838-e1c3-464e-8626-b49d1bd932ec"],
Cell[141256, 3565, 1648, 43, 85, "Input",ExpressionUUID->"1f155bee-e98c-4066-8442-818b08c1944f"],
Cell[142907, 3610, 658, 19, 30, "Text",ExpressionUUID->"b8c32f1d-7365-4dbf-a61f-99b5986d757a"],
Cell[143568, 3631, 879, 22, 64, "Input",ExpressionUUID->"0e050572-ce84-4937-bee8-6b6443e83319"]
}, Closed]],
Cell[CellGroupData[{
Cell[144484, 3658, 1287, 18, 26, "Subsection",ExpressionUUID->"e76c19da-05be-4474-ab49-fbce500d9781"],
Cell[145774, 3678, 2484, 48, 201, "Text",ExpressionUUID->"a97e8b50-adaa-4e24-88f7-a08a57b82725"],
Cell[148261, 3728, 7600, 172, 169, "Input",ExpressionUUID->"50ced673-5a19-40ee-b407-1927bf80546a"],
Cell[155864, 3902, 1705, 39, 182, "Text",ExpressionUUID->"3bcdd020-9438-4d50-bd2b-81d34dfea323"],
Cell[157572, 3943, 1905, 51, 106, "Input",ExpressionUUID->"c36a1c4b-c146-4529-8a82-c31c0eac0874"],
Cell[159480, 3996, 1926, 36, 182, "Text",ExpressionUUID->"bcf86bfe-4bc6-43e3-826d-30b0d6a8acfa"],
Cell[161409, 4034, 1740, 42, 127, "Input",ExpressionUUID->"4ab09a59-68dd-48fc-a801-31bba1112be8"],
Cell[163152, 4078, 1038, 26, 87, "Text",ExpressionUUID->"6d1974b8-76bb-4fdc-b2ae-ab8f8ac09556"],
Cell[164193, 4106, 1286, 31, 64, "Input",ExpressionUUID->"e9401942-7bc4-4bdc-b084-99830068162f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[165528, 4143, 194, 3, 44, "Section",ExpressionUUID->"18b7e748-2068-4a51-a529-4f9d613bda6b"],
Cell[CellGroupData[{
Cell[165747, 4150, 1354, 20, 35, "Subsection",ExpressionUUID->"abf665e5-7711-48ed-8fe8-eef310116dd6"],
Cell[167104, 4172, 948, 21, 144, "Text",ExpressionUUID->"f5f67aa8-4e66-4555-8039-ddf17da99baf"],
Cell[168055, 4195, 4311, 113, 274, "Input",ExpressionUUID->"188132d0-4904-4969-8d69-c2b1d45f3a31"],
Cell[172369, 4310, 793, 21, 87, "Text",ExpressionUUID->"06016aea-fcfe-476e-be61-5c0780d53ea1"],
Cell[173165, 4333, 1839, 45, 127, "Input",ExpressionUUID->"dff77615-eed4-429f-9cc1-d868fe9e42dd"],
Cell[175007, 4380, 313, 8, 30, "Text",ExpressionUUID->"51fab749-8b5c-46f6-8eec-8aa2ff477abe"],
Cell[175323, 4390, 601, 16, 43, "Input",ExpressionUUID->"ba65a775-01e7-45a9-a423-1e52b5d3faea"]
}, Closed]],
Cell[CellGroupData[{
Cell[175961, 4411, 1290, 18, 27, "Subsection",ExpressionUUID->"f136d44e-4309-49c2-8c6f-9b73c1d87037"],
Cell[177254, 4431, 989, 26, 125, "Text",ExpressionUUID->"6a501ab5-d4a1-4744-80fd-199029dd451e"],
Cell[178246, 4459, 4233, 106, 342, "Input",ExpressionUUID->"157c99ca-be87-4327-960f-7cbdaf09e06c"],
Cell[182482, 4567, 5576, 130, 348, "Input",ExpressionUUID->"a0f8aaf5-4765-418f-a06d-357698a6557c"],
Cell[188061, 4699, 3595, 88, 262, "Input",ExpressionUUID->"ff709f38-de05-4a23-a515-3583ee3107f2"],
Cell[191659, 4789, 389, 13, 30, "Text",ExpressionUUID->"c506e7b8-4f5e-41f6-ae84-37820df74ade"],
Cell[192051, 4804, 1713, 42, 127, "Input",ExpressionUUID->"fa2b26f1-9668-4afc-b881-41258426d251"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[193813, 4852, 250, 4, 44, "Section",ExpressionUUID->"8684c922-8935-4f0f-8793-ad8bd10172bd"],
Cell[CellGroupData[{
Cell[194088, 4860, 1438, 22, 35, "Subsection",ExpressionUUID->"d3149dad-721a-4795-b249-06dda5b63410"],
Cell[195529, 4884, 4788, 114, 441, "Input",ExpressionUUID->"15e4d261-41e2-4008-8f8a-cc866c1dc437"],
Cell[200320, 5000, 1175, 36, 114, "Text",ExpressionUUID->"227bd09c-866e-44df-aab6-4282a9347817"],
Cell[201498, 5038, 1125, 29, 112, "Input",ExpressionUUID->"12254b11-e53a-4e5e-b043-473f16d95b3d"],
Cell[202626, 5069, 543, 19, 49, "Text",ExpressionUUID->"63ab6942-2947-48d9-90e3-de37f779e355"],
Cell[203172, 5090, 1077, 27, 133, "Input",ExpressionUUID->"dfcb0250-035a-4a08-9b8b-bb9c1c25434d"],
Cell[204252, 5119, 796, 25, 49, "Text",ExpressionUUID->"6f4dd111-1c12-406a-a3b5-44fcddb0aeee"],
Cell[205051, 5146, 1008, 25, 133, "Input",ExpressionUUID->"3f88260d-c776-41f4-b134-6994eff39dad"],
Cell[206062, 5173, 552, 22, 49, "Text",ExpressionUUID->"f82f9908-eab1-4570-ae8c-ae4966302956"],
Cell[206617, 5197, 1242, 32, 133, "Input",ExpressionUUID->"1c4d573f-1d0d-405c-aae3-1feeafd1395a"],
Cell[207862, 5231, 520, 20, 30, "Text",ExpressionUUID->"89d0a853-7de2-432a-b664-fb1f2a607d6b"],
Cell[208385, 5253, 996, 25, 133, "Input",ExpressionUUID->"06e1c1b6-3add-4de9-a54c-f0f3094c5d27"],
Cell[209384, 5280, 519, 20, 30, "Text",ExpressionUUID->"ce3eaf0d-ea6e-4565-b0dd-c4efe49d9d9c"],
Cell[209906, 5302, 993, 25, 133, "Input",ExpressionUUID->"af07d5f4-fd7e-4d4c-abab-ebfd89fda6eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[210936, 5332, 1328, 18, 27, "Subsection",ExpressionUUID->"cdda206b-ea8f-42a2-868b-b042d587c721"],
Cell[212267, 5352, 559, 17, 49, "Text",ExpressionUUID->"578fc814-6e79-47c6-974b-33c85f00872c"],
Cell[212829, 5371, 902, 23, 64, "Input",ExpressionUUID->"16b9c87a-7e39-44f1-bb21-16a230b3808e"],
Cell[213734, 5396, 546, 13, 49, "Text",ExpressionUUID->"768d7f1c-3f36-4f33-bcc6-17aadc8d6c60"],
Cell[214283, 5411, 835, 23, 64, "Input",ExpressionUUID->"200684f6-7940-4243-875f-93204490364b"],
Cell[215121, 5436, 256, 8, 30, "Text",ExpressionUUID->"475784e5-59c8-49c7-933e-afb9754ccc2f"],
Cell[215380, 5446, 401, 10, 42, "Input",ExpressionUUID->"7342769b-060f-4419-b594-50ae06ddda2b"],
Cell[215784, 5458, 825, 31, 49, "Text",ExpressionUUID->"9c3999cd-2dcb-475b-a2a4-1c5e6e613231"],
Cell[216612, 5491, 1573, 43, 85, "Input",ExpressionUUID->"dd803175-3d30-4c4a-830c-2c9852c997a4"],
Cell[218188, 5536, 603, 12, 49, "Text",ExpressionUUID->"aca312ef-4994-479f-90e8-af8c306f2af3"],
Cell[218794, 5550, 1531, 40, 112, "Input",ExpressionUUID->"5c9c9ee6-2029-416e-b9ee-a7da9893bd67"],
Cell[220328, 5592, 510, 17, 49, "Text",ExpressionUUID->"f948c6ac-aa18-44d7-b5fe-07f4e5b7be53"],
Cell[220841, 5611, 1523, 39, 133, "Input",ExpressionUUID->"5f4d2ba9-0de5-42f4-8722-c52a4540dcd2"],
Cell[222367, 5652, 270, 10, 30, "Text",ExpressionUUID->"3c109b74-49b7-4e6c-9dd2-4dd3b3b2a8f9"],
Cell[222640, 5664, 806, 23, 64, "Input",ExpressionUUID->"ed842efb-d416-4baf-b87b-f20fffb9f9a2"],
Cell[223449, 5689, 239, 5, 30, "Text",ExpressionUUID->"0ccbdc9e-009b-4c1d-84c4-409d6bf23ba5"],
Cell[223691, 5696, 1022, 20, 253, "Input",ExpressionUUID->"764717a1-66d7-4678-bd77-26c316b3a9b2"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[224762, 5722, 160, 3, 44, "Section",ExpressionUUID->"bcd6d42a-237a-47e2-9918-033e1d253c15"],
Cell[CellGroupData[{
Cell[224947, 5729, 81, 0, 35, "Subsection",ExpressionUUID->"90f1ddbb-fcc5-4bd0-a8f5-8c929b0eea6b"],
Cell[225031, 5731, 964, 29, 75, "Text",ExpressionUUID->"6d6c7250-8192-41e1-9ad7-373d3efaac45"],
Cell[225998, 5762, 1439, 39, 106, "Input",ExpressionUUID->"88360c6b-9848-4a15-aa69-f3f88fe2b9b2"],
Cell[227440, 5803, 625, 18, 46, "Input",ExpressionUUID->"edfc00fb-46f0-4a7d-9851-5b1e48cf7a2b"],
Cell[228068, 5823, 1217, 32, 172, "Input",ExpressionUUID->"f55b9fe0-1934-4ad1-a6f4-5b789f8573e1"],
Cell[229288, 5857, 552, 14, 64, "Input",ExpressionUUID->"7ee18467-79dc-48c4-b4d7-443cf647a220"]
}, Closed]],
Cell[CellGroupData[{
Cell[229877, 5876, 83, 0, 27, "Subsection",ExpressionUUID->"6d7efcb7-0496-43c8-9b76-b69c7285604b"],
Cell[229963, 5878, 405, 10, 30, "Text",ExpressionUUID->"6038c5a7-c871-4b06-97c3-7d96edf2d893"],
Cell[230371, 5890, 626, 17, 64, "Input",ExpressionUUID->"e07709a5-28ea-49ee-92ec-98593372aea6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[231046, 5913, 181, 3, 44, "Section",ExpressionUUID->"a4f80aa5-0254-4abe-b7e0-c47650d0ac9c"],
Cell[CellGroupData[{
Cell[231252, 5920, 1450, 22, 35, "Subsection",ExpressionUUID->"e60a07d4-15b9-46c1-ae11-be9bbce78550"],
Cell[232705, 5944, 1559, 35, 167, "Text",ExpressionUUID->"87cfde4a-727b-4a51-a4ab-77796b04112e"],
Cell[234267, 5981, 3513, 90, 282, "Input",ExpressionUUID->"72b6f979-8017-4e1b-9ea7-7f348e4d86bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[237817, 6076, 1458, 24, 27, "Subsection",ExpressionUUID->"daf1a707-1f65-4365-87e3-1fa5016ce7be"],
Cell[239278, 6102, 390, 14, 30, "Text",ExpressionUUID->"27e235da-2e5e-4b45-adb2-5e4843ad684f"],
Cell[239671, 6118, 1019, 30, 72, "Input",ExpressionUUID->"46981422-8f3c-4203-abe9-ab22d193867e"],
Cell[240693, 6150, 795, 24, 53, "Text",ExpressionUUID->"5b4d5b1a-f8fd-4ae7-8874-7967d2e4b708"],
Cell[241491, 6176, 1161, 33, 72, "Input",ExpressionUUID->"fb77821e-c6bc-492f-be11-2ab55e8129f3"],
Cell[242655, 6211, 350, 13, 30, "Text",ExpressionUUID->"09844b64-9a9e-4ee0-92f3-7d2d32aaf8a2"],
Cell[243008, 6226, 989, 29, 72, "Input",ExpressionUUID->"1dcdba02-57a4-44a8-a710-24167bf209f3"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[244046, 6261, 219, 4, 44, "Section",ExpressionUUID->"3dd9a5f2-5152-4e2e-a547-95448542cee1"],
Cell[CellGroupData[{
Cell[244290, 6269, 1302, 18, 35, "Subsection",ExpressionUUID->"b102e0c2-45fb-4fdb-a886-7fcaa73992c5"],
Cell[245595, 6289, 557, 11, 125, "Text",ExpressionUUID->"2c8d6e8e-f6b5-40bf-8c7b-e0560cdf940e"],
Cell[246155, 6302, 1537, 42, 106, "Input",ExpressionUUID->"5519dc51-e231-4cc3-a88e-48e864f731b8"],
Cell[247695, 6346, 920, 19, 87, "Text",ExpressionUUID->"69f80aaf-ff6f-4375-a120-6fdb46efd3c7"],
Cell[248618, 6367, 1344, 32, 106, "Input",ExpressionUUID->"c3dfcdb2-4f87-40f9-ab99-b358204f1649"],
Cell[249965, 6401, 2055, 53, 243, "Text",ExpressionUUID->"42b36332-ed71-449c-a333-7d315c0ef410"],
Cell[252023, 6456, 3171, 87, 232, "Input",ExpressionUUID->"a7633917-c0bf-4868-9271-fb753d776c14"]
}, Closed]],
Cell[CellGroupData[{
Cell[255231, 6548, 172, 3, 27, "Subsection",ExpressionUUID->"b5590afc-8f2b-4e2d-af86-0e802a57887e"],
Cell[255406, 6553, 2557, 51, 220, "Text",ExpressionUUID->"cd5ff28b-820f-4693-9d46-3f4ac1560095"],
Cell[257966, 6606, 7331, 162, 379, "Input",ExpressionUUID->"7a628b26-b07b-4282-b4fe-f128b9e50a00"]
}, Closed]],
Cell[CellGroupData[{
Cell[265334, 6773, 259, 6, 27, "Subsection",ExpressionUUID->"842d4e80-d216-49a8-a802-c871c48e8a11"],
Cell[265596, 6781, 2670, 50, 429, "Text",ExpressionUUID->"9919dd5d-86f6-45db-b965-8da307cb15a0"],
Cell[268269, 6833, 4129, 91, 463, "Input",ExpressionUUID->"23c92a4f-0908-4999-a135-a079bcd279f1"],
Cell[272401, 6926, 9992, 264, 589, "Input",ExpressionUUID->"b3316311-cac6-4256-b025-4fba4fd4f01f"],
Cell[282396, 7192, 268, 10, 30, "Text",ExpressionUUID->"c370104e-a25f-4fdc-9458-3eab98266668"],
Cell[282667, 7204, 2204, 58, 127, "Input",ExpressionUUID->"c6e94e3d-9a60-432d-975c-6459116a5f60"],
Cell[284874, 7264, 442, 17, 30, "Text",ExpressionUUID->"14c85fd4-5fa0-4ac9-ba46-bdd8494ded21"],
Cell[285319, 7283, 604, 16, 42, "Input",ExpressionUUID->"b9a51f7a-5cad-441f-8175-aa0f4282d584"],
Cell[285926, 7301, 235, 4, 30, "Text",ExpressionUUID->"34156aef-e93d-4dcc-acd8-eca52d8461d6"],
Cell[286164, 7307, 1973, 54, 169, "Input",ExpressionUUID->"692d4be6-ac07-4554-a4c8-42c649e24a5b"],
Cell[288140, 7363, 236, 4, 30, "Text",ExpressionUUID->"a9c78c19-88e2-4470-afe2-d87ca151e1e6"],
Cell[288379, 7369, 672, 16, 64, "Input",ExpressionUUID->"db100add-7501-45f5-9cd6-8b7fe78fef7d"]
}, Closed]],
Cell[CellGroupData[{
Cell[289088, 7390, 146, 2, 27, "Subsection",ExpressionUUID->"edb15983-743e-45f7-8f80-2627ef226c91"],
Cell[289237, 7394, 1524, 54, 106, "Text",ExpressionUUID->"9342e0d8-e009-4802-8e2e-a8306bd46995"],
Cell[290764, 7450, 14317, 298, 736, "Input",ExpressionUUID->"8085e345-c0f5-4828-8c07-8621d639dc5d"],
Cell[305084, 7750, 928, 26, 87, "Text",ExpressionUUID->"7cb38c96-e623-4c9c-b3e9-b8339495fda9"],
Cell[306015, 7778, 5331, 133, 253, "Input",ExpressionUUID->"0abddb95-3e06-48a3-ae3f-80534a09d4b4"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[311395, 7917, 218, 4, 44, "Section",ExpressionUUID->"d6c2c59c-4ace-4bb6-9fa9-2a01382641e0"],
Cell[CellGroupData[{
Cell[311638, 7925, 1340, 19, 35, "Subsection",ExpressionUUID->"333e1192-5881-403f-a798-bca0f4732007"],
Cell[312981, 7946, 1557, 42, 87, "Text",ExpressionUUID->"f6eac16a-4796-4d23-92f9-9e313cc5df50"],
Cell[314541, 7990, 1937, 51, 110, "Input",ExpressionUUID->"72a7d08e-7e3a-4aaf-8ae7-fe69ab765feb"],
Cell[316481, 8043, 1278, 36, 68, "Text",ExpressionUUID->"d605a45e-6647-4deb-b509-bff15834bced"],
Cell[317762, 8081, 2289, 58, 106, "Input",ExpressionUUID->"00a951c6-7f6d-442c-9c81-4c1972dac50a"],
Cell[320054, 8141, 519, 18, 49, "Text",ExpressionUUID->"1425f514-fc72-41bf-93a2-e94798aede52"],
Cell[320576, 8161, 1933, 50, 85, "Input",ExpressionUUID->"889f4486-95a7-491d-8e2f-e8e21079b349"]
}, Closed]],
Cell[CellGroupData[{
Cell[322546, 8216, 1312, 18, 27, "Subsection",ExpressionUUID->"ee451afd-dab3-40e8-b55e-fc5e6ec29f84"],
Cell[323861, 8236, 375, 12, 30, "Text",ExpressionUUID->"cc0e55f8-fda2-4d84-b8c7-6175d4f9c064"],
Cell[324239, 8250, 491, 14, 64, "Input",ExpressionUUID->"ca48e49e-e57d-42ea-b495-e12af66ae256"],
Cell[324733, 8266, 3168, 85, 234, "Text",ExpressionUUID->"2af6e669-9c99-40c6-8422-5ebced09171d"],
Cell[327904, 8353, 8076, 204, 547, "Input",ExpressionUUID->"7eac1cf7-b8f8-4237-a9fb-5870b27d5e1f"],
Cell[335983, 8559, 9232, 277, 485, "Text",ExpressionUUID->"e9b1fbc3-f881-49ad-a428-e07bdee6f09d"],
Cell[345218, 8838, 2843, 76, 129, "Input",ExpressionUUID->"e93246cc-328e-4bf9-ae24-2f5bd7b29fdc"],
Cell[348064, 8916, 376, 11, 32, "Text",ExpressionUUID->"fbd4bdad-43ee-41c6-a257-721c33e2b304"],
Cell[348443, 8929, 2706, 71, 150, "Input",ExpressionUUID->"83330bf9-e610-4280-b99a-41f008d9fbb6"],
Cell[351152, 9002, 176, 4, 30, "Text",ExpressionUUID->"c6438dd1-c704-4b12-b8e1-110fcf42d3b7"],
Cell[351331, 9008, 2336, 63, 108, "Input",ExpressionUUID->"47787d14-4b98-4465-a502-a80c452cf4af"],
Cell[353670, 9073, 829, 17, 144, "Text",ExpressionUUID->"09850257-f8ad-4997-b3cd-d8d54e0d4334"],
Cell[354502, 9092, 2368, 66, 108, "Input",ExpressionUUID->"4f234466-9371-4f92-91b4-42b591625f07"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[356919, 9164, 604, 9, 44, "Section",ExpressionUUID->"cc808ad9-86b8-4456-9d80-b24ec2383c5d"],
Cell[CellGroupData[{
Cell[357548, 9177, 1365, 19, 35, "Subsection",ExpressionUUID->"101db439-d9de-4b8c-b361-e8a606cbd98c"],
Cell[358916, 9198, 1482, 27, 68, "Text",ExpressionUUID->"0fe3d0b1-ffc7-4106-93ff-4b78cfdacd9d"],
Cell[360401, 9227, 4808, 106, 200, "Input",ExpressionUUID->"86e4d5e5-ad5c-4126-8355-15f0598488a6"],
Cell[365212, 9335, 1758, 33, 125, "Text",ExpressionUUID->"186da29b-a5d0-4d2d-8326-ac0eb2559813"],
Cell[366973, 9370, 1823, 45, 106, "Input",ExpressionUUID->"6ab503c8-6b0d-4c6e-bd18-c74203087ed2"]
}, Closed]],
Cell[CellGroupData[{
Cell[368833, 9420, 1329, 19, 27, "Subsection",ExpressionUUID->"ad315ced-492d-4991-8ce5-3106c6cb6893"],
Cell[370165, 9441, 3390, 62, 296, "Text",ExpressionUUID->"66053d94-a73f-45df-a224-ddab94dc5229"],
Cell[373558, 9505, 10276, 217, 450, "Input",ExpressionUUID->"75eea20f-c17f-4b05-9de6-05e70bcd18b2"],
Cell[383837, 9724, 2989, 48, 106, "Text",ExpressionUUID->"191c997f-66b5-4150-a36a-ebdc7d1383f9"],
Cell[386829, 9774, 2338, 59, 112, "Input",ExpressionUUID->"39ff727f-e5b7-4c4f-9e21-81233574efd0"],
Cell[389170, 9835, 1983, 31, 106, "Text",ExpressionUUID->"07ffc22d-ce39-4794-b0b9-cad32414648b"],
Cell[391156, 9868, 696, 18, 64, "Input",ExpressionUUID->"930f2c1a-c4bf-4a68-b7c5-7d10a49a3b38"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[391901, 9892, 291, 5, 44, "Section",ExpressionUUID->"ae5c279b-3f3e-4890-982c-71374a80202d"],
Cell[CellGroupData[{
Cell[392217, 9901, 1415, 20, 34, "Subsection",ExpressionUUID->"f6bd5bce-ece3-4c78-a823-9fe8db0dbe0d"],
Cell[393635, 9923, 2817, 72, 227, "Text",ExpressionUUID->"129119a0-e75a-4d84-988c-1870ce00857c"],
Cell[396455, 9997, 2438, 61, 86, "Input",ExpressionUUID->"6158f11e-6502-4c38-8f50-ccb06262bd63"],
Cell[398896, 10060, 6504, 174, 306, "Input",ExpressionUUID->"783b9ee7-e525-42aa-9f0c-94c8b0a9d550"],
Cell[405403, 10236, 1846, 50, 82, "Input",ExpressionUUID->"e004f508-ee0a-4767-a259-a58a03957a3b"],
Cell[407252, 10288, 1052, 27, 83, "Text",ExpressionUUID->"96b26117-ed64-40d3-8d74-da4bdbaac227"],
Cell[408307, 10317, 1445, 37, 61, "Input",ExpressionUUID->"a65d61bd-2c94-49e1-9643-e002f6be4252"],
Cell[409755, 10356, 1692, 32, 155, "Text",ExpressionUUID->"6826cfb2-42bf-445d-b859-d54c98ff1c16"],
Cell[411450, 10390, 1037, 27, 61, "Input",ExpressionUUID->"b49443b5-3a1c-47b6-8bca-aecfcc61b32e"]
}, Closed]],
Cell[CellGroupData[{
Cell[412524, 10422, 1582, 26, 26, "Subsection",ExpressionUUID->"7f06bb0d-bfc3-42de-a48f-e77db0ca5b98"],
Cell[414109, 10450, 6745, 123, 562, "Text",ExpressionUUID->"28ed8a87-e471-4cbd-b35b-70057dc638ac"],
Cell[420857, 10575, 30444, 672, 1051, "Input",ExpressionUUID->"f74508d4-2377-4327-bd15-faecf1698a1a"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[451350, 11253, 585, 10, 42, "Section",ExpressionUUID->"9c47fcce-3fd7-4b05-8689-c8b25934f518"],
Cell[CellGroupData[{
Cell[451960, 11267, 973, 14, 35, "Subsection",ExpressionUUID->"9fea9932-45ab-45d5-83f6-3c179bbc2cb6"],
Cell[452936, 11283, 1535, 29, 87, "Text",ExpressionUUID->"5f57b024-2f9b-4627-945b-047352ce3e5b"],
Cell[454474, 11314, 3012, 64, 106, "Input",ExpressionUUID->"27ca9a40-3a9c-4e56-b703-9fc35193bf35"],
Cell[457489, 11380, 1340, 22, 87, "Text",ExpressionUUID->"e6438cf5-eae3-4a02-960f-6baa8a3e7a9f"],
Cell[458832, 11404, 3119, 65, 148, "Input",ExpressionUUID->"c6bedc92-0713-40f5-aa58-ba90fff3d788"]
}, Closed]],
Cell[CellGroupData[{
Cell[461988, 11474, 1016, 14, 27, "Subsection",ExpressionUUID->"04f5ba6f-e52e-4324-9864-4d0e79a4c876"],
Cell[463007, 11490, 4728, 87, 429, "Text",ExpressionUUID->"a16779d7-3c14-4ffe-90e9-4054f770381a"],
Cell[467738, 11579, 6671, 139, 337, "Input",ExpressionUUID->"ae26f878-9394-42f4-9e33-91d1a9a7e7de"]
}, Closed]],
Cell[CellGroupData[{
Cell[474446, 11723, 1090, 16, 27, "Subsection",ExpressionUUID->"c1ab780f-9fee-4d59-8121-5d1dc562850f"],
Cell[475539, 11741, 3396, 76, 334, "Text",ExpressionUUID->"f184175a-4ed2-4075-96ac-f1f7a21500ff"],
Cell[478938, 11819, 6497, 128, 211, "Input",ExpressionUUID->"913f4cec-9177-425a-8da9-ca4d4c767db2"],
Cell[485438, 11949, 4363, 98, 316, "Input",ExpressionUUID->"049719c7-f767-46d8-b485-fe6721a5fb1c"]
}, Closed]],
Cell[CellGroupData[{
Cell[489838, 12052, 635, 9, 27, "Subsection",ExpressionUUID->"58330267-8054-40db-b9b9-8993f8095a54"],
Cell[490476, 12063, 8045, 177, 546, "Text",ExpressionUUID->"60f957e9-7815-4db9-8fab-aeec71a4552e"],
Cell[498524, 12242, 5165, 115, 265, "Input",ExpressionUUID->"e27c77d6-b324-48c5-a653-c05a70f22a86"],
Cell[503692, 12359, 4382, 95, 158, "Input",ExpressionUUID->"9e666cc8-a19c-45ad-8a26-cabf32e85286"],
Cell[508077, 12456, 3078, 46, 87, "Text",ExpressionUUID->"6ceb0e70-7ab9-4ed3-9db2-95c17a790b28"],
Cell[511158, 12504, 932, 24, 64, "Input",ExpressionUUID->"d07d1c20-703d-43ee-910e-f89e2ed7edf7"],
Cell[512093, 12530, 4597, 81, 202, "Text",ExpressionUUID->"c7090577-a8ab-4a1f-beb4-94ba38e76d9d"],
Cell[516693, 12613, 6645, 135, 274, "Input",ExpressionUUID->"9a2f2002-2c18-4bac-a87b-e75b0338f3eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[523375, 12753, 939, 16, 27, "Subsection",ExpressionUUID->"723d12f9-172f-47cd-8a54-f3c7618c4543"],
Cell[524317, 12771, 3739, 58, 220, "Text",ExpressionUUID->"05604fbf-276e-4c9c-b829-aa8ba2993701"],
Cell[528059, 12831, 1526, 36, 85, "Input",ExpressionUUID->"4155c7a5-fd28-423d-b9bf-319488f97ceb"],
Cell[529588, 12869, 4539, 98, 172, "Input",ExpressionUUID->"964a2e05-9837-4ab1-8e7a-8026a17d3bf5"],
Cell[534130, 12969, 6601, 147, 284, "Input",ExpressionUUID->"7cbd7263-9a32-457a-8291-5ced94525631"]
}, Closed]],
Cell[CellGroupData[{
Cell[540768, 13121, 831, 13, 27, "Subsection",ExpressionUUID->"26359de8-5f89-4b56-b62e-69f28f804e39"],
Cell[541602, 13136, 6041, 143, 169, "Text",ExpressionUUID->"efa3a42a-aa71-4a46-b8b6-c3d9bbd8c194"],
Cell[547646, 13281, 9957, 224, 498, "Input",ExpressionUUID->"1c460f0d-e391-413f-a40f-4a5e2462c5f9"],
Cell[557606, 13507, 26153, 666, 998, "Text",ExpressionUUID->"cb3a58d2-bba3-4847-b245-5c1f069ca043"]
}, Closed]],
Cell[CellGroupData[{
Cell[583796, 14178, 398, 6, 27, "Subsection",ExpressionUUID->"99fa64dc-975c-4d55-b34e-b1a4f97294d0"],
Cell[584197, 14186, 5443, 101, 227, "Text",ExpressionUUID->"10ba96d5-c0cc-4158-8b06-00cb4b0db71e"],
Cell[589643, 14289, 4619, 99, 169, "Input",ExpressionUUID->"f6d3462a-e489-443e-b1d8-17e8be806382"],
Cell[594265, 14390, 6016, 122, 299, "Text",ExpressionUUID->"e27f4317-1860-4b01-beb1-83cf7bbaa26f"],
Cell[600284, 14514, 4268, 83, 274, "Input",ExpressionUUID->"01485804-632e-4fdc-8913-78adfb6f047b"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[604601, 14603, 313, 5, 42, "Section",ExpressionUUID->"592c764a-6b6c-4ce1-81cd-4198d8e62510"],
Cell[604917, 14610, 2459, 65, 173, "Text",ExpressionUUID->"d96cc0e6-93a1-4d80-8b00-983d239053a5"],
Cell[607379, 14677, 2654, 69, 85, "Input",ExpressionUUID->"fab5a271-23ce-4255-92cb-97ea0634e31e"],
Cell[610036, 14748, 702, 18, 64, "Input",ExpressionUUID->"684f0835-abf5-4714-898d-79d703268f94"],
Cell[610741, 14768, 1825, 30, 258, "Text",ExpressionUUID->"080cc158-00cd-4a67-93f8-e3ff2dce62be"],
Cell[612569, 14800, 1956, 44, 64, "Input",ExpressionUUID->"b2c35f53-2909-4d77-8f87-db379d79bd4e"]
}, Closed]],
Cell[CellGroupData[{
Cell[614562, 14849, 508, 8, 42, "Section",ExpressionUUID->"7436b688-1b66-4393-baf9-70ceb65f0205"],
Cell[CellGroupData[{
Cell[615095, 14861, 1715, 25, 35, "Subsection",ExpressionUUID->"a356d31e-cacd-44f4-8e40-5b2726a56cbf"],
Cell[616813, 14888, 4321, 90, 371, "Text",ExpressionUUID->"9c533ad8-e08a-4ffd-9bda-716aade7071d"],
Cell[621137, 14980, 5504, 140, 442, "Input",ExpressionUUID->"5af10534-d35f-452a-8e9a-a66ebe4b1649"]
}, Closed]],
Cell[CellGroupData[{
Cell[626678, 15125, 1513, 23, 27, "Subsection",ExpressionUUID->"532262b4-038f-4a8e-8f2c-37b904b88b20"],
Cell[628194, 15150, 2518, 59, 106, "Text",ExpressionUUID->"16e77a05-dab9-45e7-b4f9-8ecdd08f2014"],
Cell[630715, 15211, 1484, 36, 127, "Input",ExpressionUUID->"e2cd137e-d56d-4c69-9860-083c4885053e"],
Cell[632202, 15249, 6117, 128, 253, "Input",ExpressionUUID->"83d1546d-98d8-4f58-aa94-1eb5137bb4c5"],
Cell[638322, 15379, 5071, 108, 169, "Input",ExpressionUUID->"c32c40b5-c8f9-4e4a-af88-59631e027b1c"],
Cell[643396, 15489, 4943, 106, 169, "Input",ExpressionUUID->"86ddad53-9487-4a58-9d22-e4d95ba43965"],
Cell[648342, 15597, 2097, 50, 144, "Text",ExpressionUUID->"7645ff47-8f3e-43c2-ac72-cc55d867df0a"],
Cell[650442, 15649, 2929, 77, 169, "Input",ExpressionUUID->"b672890d-47da-4f74-8862-0b328ecaba6b"],
Cell[653374, 15728, 1069, 18, 49, "Text",ExpressionUUID->"e8439100-eb9b-47d0-9a12-4a332861cad8"],
Cell[654446, 15748, 1779, 47, 148, "Input",ExpressionUUID->"52f2ea67-73d8-4c91-bfcf-4336c9415a12"],
Cell[656228, 15797, 1089, 27, 49, "Text",ExpressionUUID->"0b86c047-8c82-4889-a2c9-efa3bf3ff45b"],
Cell[657320, 15826, 3698, 69, 148, "Input",ExpressionUUID->"273eed22-66c2-41c1-b207-b978d0240903"]
}, Closed]],
Cell[CellGroupData[{
Cell[661055, 15900, 1711, 26, 27, "Subsection",ExpressionUUID->"f08512fb-f358-4e4a-82ef-82fbc9b8b398"],
Cell[662769, 15928, 1751, 35, 67, "Text",ExpressionUUID->"d766f4be-a0c3-4a4b-b69f-eca7896b7fe7"],
Cell[664523, 15965, 4122, 80, 106, "Input",ExpressionUUID->"e427c5a6-a2c2-41d8-ab40-ac38b0af5efb"],
Cell[668648, 16047, 1911, 39, 105, "Text",ExpressionUUID->"e93f8f93-c031-4a29-aa91-e2ca996a942c"],
Cell[670562, 16088, 3917, 73, 85, "Input",ExpressionUUID->"c254774e-d4ef-4655-8117-dda944059d40"]
}, Closed]],
Cell[CellGroupData[{
Cell[674516, 16166, 1666, 25, 27, "Subsection",ExpressionUUID->"2722951d-f9da-433c-8f3b-57a3a0b02561"],
Cell[676185, 16193, 2511, 47, 137, "Text",ExpressionUUID->"a585620f-f59c-4602-a46e-76c027cb5f7c"],
Cell[678699, 16242, 2457, 51, 85, "Input",ExpressionUUID->"94559a88-6f0a-4783-98de-37b989ba1861"]
}, Closed]],
Cell[CellGroupData[{
Cell[681193, 16298, 1295, 18, 27, "Subsection",ExpressionUUID->"8ad9c733-a9b6-4f6b-b545-5874a577e9a1"],
Cell[682491, 16318, 2859, 76, 182, "Text",ExpressionUUID->"a4369a9b-ce1b-4d26-9d0e-52bb5ae5d1ce"],
Cell[685353, 16396, 3079, 69, 131, "Input",ExpressionUUID->"90feb38b-3f50-4567-ac8a-93bf6a8a1a6b"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[688481, 16471, 224, 4, 42, "Section",ExpressionUUID->"c9da0c33-d1da-42dc-b0d4-acd35fe5780e"],
Cell[CellGroupData[{
Cell[688730, 16479, 1312, 18, 34, "Subsection",ExpressionUUID->"7ae6a1fc-d887-4c62-ad26-bfa359b867de"],
Cell[690045, 16499, 649, 17, 68, "Text",ExpressionUUID->"c3565a67-d358-4824-9755-d061d3c63d68"],
Cell[690697, 16518, 1631, 42, 64, "Input",ExpressionUUID->"93aa723a-d9ca-4912-b129-2be6d1f1ba34"]
}, Closed]],
Cell[CellGroupData[{
Cell[692365, 16565, 1306, 18, 26, "Subsection",ExpressionUUID->"9d8caf59-8c4b-4c1b-a0b9-a75688cedcb9"],
Cell[693674, 16585, 2324, 52, 289, "Text",ExpressionUUID->"0cb6fc3a-86e0-4dc8-a8dd-1aa67a659000"],
Cell[696001, 16639, 5447, 139, 275, "Input",ExpressionUUID->"96c3d26e-1db5-4392-b08d-fa73dddcf505"]
}, Closed]],
Cell[CellGroupData[{
Cell[701485, 16783, 1312, 18, 26, "Subsection",ExpressionUUID->"8c8d3ddb-76f0-41a8-920d-486206d542c1"],
Cell[702800, 16803, 1153, 25, 144, "Text",ExpressionUUID->"f08073de-cfc7-4b3b-bd31-1904d863f6ee"],
Cell[703956, 16830, 5386, 140, 238, "Input",ExpressionUUID->"e7fc7a83-0231-4b94-86cd-647d75a215c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[709379, 16975, 1287, 18, 26, "Subsection",ExpressionUUID->"eb79732a-870f-444f-aa12-60883a337f27"],
Cell[710669, 16995, 239, 7, 30, "Text",ExpressionUUID->"5c44e272-2a60-48a6-9067-27d8c65e44a6"],
Cell[710911, 17004, 2183, 53, 148, "Input",ExpressionUUID->"ae0e5cc9-d581-4c95-acee-34239959a0b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[713131, 17062, 246, 4, 26, "Subsection",ExpressionUUID->"548f8050-1cae-40f5-bdd0-97291f391a58"],
Cell[713380, 17068, 1335, 38, 106, "Text",ExpressionUUID->"993a4c5f-d607-48e4-b9e1-3cd2b4f62ea8"],
Cell[714718, 17108, 3425, 88, 194, "Input",ExpressionUUID->"9553fe62-2417-4402-ac30-4e7e5aff4b61"],
Cell[718146, 17198, 500, 14, 42, "Input",ExpressionUUID->"cc4f2372-a6a5-43de-a86c-71d4625e2fb9"],
Cell[718649, 17214, 3694, 92, 217, "Input",ExpressionUUID->"0c35690b-a1a0-48b7-aa78-7fb71821bbd4"]
}, Closed]],
Cell[CellGroupData[{
Cell[722380, 17311, 211, 4, 26, "Subsection",ExpressionUUID->"d1233252-97ae-4dd1-9012-c61cfc979281"],
Cell[722594, 17317, 342, 7, 30, "Text",ExpressionUUID->"dbc7792b-94ef-4c6b-858a-f2a9ad394af4"],
Cell[722939, 17326, 1605, 37, 64, "Input",ExpressionUUID->"51fafe64-9642-4870-b371-d4debaf6acf3"]
}, Closed]],
Cell[CellGroupData[{
Cell[724581, 17368, 183, 3, 26, "Subsection",ExpressionUUID->"64977f9c-a5ac-4f39-943f-2332c4ae08bc"],
Cell[724767, 17373, 610, 10, 49, "Text",ExpressionUUID->"d00c7bda-bc2c-4e64-8e9a-dcf72cc072a3"],
Cell[725380, 17385, 1715, 41, 64, "Input",ExpressionUUID->"801d334c-d882-4e9a-973e-e2782453785d"],
Cell[727098, 17428, 1473, 24, 49, "Text",ExpressionUUID->"11df8232-c7a9-4108-a12f-0e3cd2e25cbb"],
Cell[728574, 17454, 615, 15, 42, "Input",ExpressionUUID->"6c10aa18-a696-415b-9588-28b9e149c1e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[729226, 17474, 230, 4, 26, "Subsection",ExpressionUUID->"bc47c255-67b0-4e45-b024-f6d48cc53a48"],
Cell[729459, 17480, 1760, 49, 30, "Text",ExpressionUUID->"19583c65-1968-4059-9baa-c21757fc9336"],
Cell[731222, 17531, 1451, 40, 106, "Input",ExpressionUUID->"9e98cc4c-39f9-4bba-9198-15bf59d76705"]
}, Closed]],
Cell[CellGroupData[{
Cell[732710, 17576, 336, 5, 26, "Subsection",ExpressionUUID->"433ba1b8-8f30-4976-aeb0-05ee1f09bed5"],
Cell[733049, 17583, 2588, 68, 125, "Text",ExpressionUUID->"63a299f1-87ee-4d8a-9661-c708d7bba95b"],
Cell[735640, 17653, 1074, 32, 64, "Input",ExpressionUUID->"2e2556b1-87c9-4555-91cf-7d5a5bea8fd6"]
}, Closed]],
Cell[CellGroupData[{
Cell[736751, 17690, 353, 5, 26, "Subsection",ExpressionUUID->"fae2ac66-d444-4f7e-972c-13f8a435a422"],
Cell[737107, 17697, 3420, 73, 182, "Text",ExpressionUUID->"b61fa0b4-a2b3-4944-aef8-31132f4e034b"],
Cell[740530, 17772, 14022, 336, 631, "Input",ExpressionUUID->"74ec85e5-8383-4794-8804-13c55a7cc453"],
Cell[754555, 18110, 1870, 34, 163, "Text",ExpressionUUID->"d5051a35-43ac-4c58-9199-1af7aa3ac5a6"],
Cell[756428, 18146, 2699, 68, 148, "Input",ExpressionUUID->"f74cbcc0-6713-4f54-a62b-5bce6425a809"]
}, Closed]],
Cell[CellGroupData[{
Cell[759164, 18219, 349, 5, 26, "Subsection",ExpressionUUID->"dd9568ad-cf1c-436b-a223-3b5c9412cd1d"],
Cell[759516, 18226, 2740, 75, 182, "Text",ExpressionUUID->"1ee5b3ff-4002-4195-9a99-911753d0b4fd"],
Cell[762259, 18303, 4644, 118, 232, "Input",ExpressionUUID->"920f46e6-d95e-4935-a17e-5b2b2e75470c"]
}, Closed]],
Cell[CellGroupData[{
Cell[766940, 18426, 445, 11, 26, "Subsection",ExpressionUUID->"be4e75c6-1c9d-498a-a778-f6cd8539ca42"],
Cell[767388, 18439, 1781, 38, 163, "Text",ExpressionUUID->"7cfc76d7-aa5d-45f0-973c-9695f7b2a855"],
Cell[769172, 18479, 3138, 78, 190, "Input",ExpressionUUID->"28dd21ee-dd5e-4fe6-8174-9f6e1ed0f610"],
Cell[772313, 18559, 4629, 105, 190, "Input",ExpressionUUID->"6f97ad71-a46d-4219-a5e2-55b32edbafc7"]
}, Closed]],
Cell[CellGroupData[{
Cell[776979, 18669, 1411, 20, 26, "Subsection",ExpressionUUID->"3fad775d-fa38-4b15-9e81-736f50076517"],
Cell[778393, 18691, 4324, 112, 191, "Text",ExpressionUUID->"ead05ae7-45da-4ee0-8bca-f2a8ff8cabea"],
Cell[782720, 18805, 4086, 111, 209, "Input",ExpressionUUID->"9ef3691c-2f3d-4cb8-8973-c38522586078"],
Cell[786809, 18918, 5357, 126, 286, "Input",ExpressionUUID->"0479d5eb-d055-4cdb-9a16-0311bba3f530"],
Cell[792169, 19046, 5025, 128, 270, "Input",ExpressionUUID->"600c6d02-3e32-4448-b25e-cf99d7e2a5d1"],
Cell[797197, 19176, 3709, 69, 194, "Text",ExpressionUUID->"4f5cf51f-8751-491f-97a9-33d12d8b1816"],
Cell[800909, 19247, 9773, 243, 418, "Input",ExpressionUUID->"dadfa0f4-8a04-4f0e-acd5-3c4df4dda40e"],
Cell[810685, 19492, 1680, 27, 47, "Text",ExpressionUUID->"b9579181-59e4-47f9-b68b-0959ed36dca1"],
Cell[812368, 19521, 4921, 125, 245, "Input",ExpressionUUID->"5cb32c3d-9551-46bf-b83a-1c50327872cf"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[817338, 19652, 196, 4, 42, "Section",ExpressionUUID->"81e0fcaf-0231-4318-a81b-24411109a008"],
Cell[CellGroupData[{
Cell[817559, 19660, 1313, 19, 35, "Subsection",ExpressionUUID->"339e45cd-8b9a-4b4b-a58b-fc3b84280f52"],
Cell[818875, 19681, 606, 16, 68, "Text",ExpressionUUID->"f9d6503a-1375-476b-a58e-6af60ae587e0"],
Cell[819484, 19699, 1306, 35, 85, "Input",ExpressionUUID->"d6120fc4-545c-4e99-982b-5feb3a2426e4"]
}, Closed]],
Cell[CellGroupData[{
Cell[820827, 19739, 1351, 19, 27, "Subsection",ExpressionUUID->"dca4a81e-f9eb-43bb-b1a0-16b3f4e24ab7"],
Cell[822181, 19760, 313, 7, 30, "Text",ExpressionUUID->"7017ab62-d3bf-4129-8dd8-7003e2462eb2"],
Cell[822497, 19769, 1358, 37, 85, "Input",ExpressionUUID->"6ec05569-fc21-41b4-a74b-2033ea73be2d"]
}, Closed]],
Cell[CellGroupData[{
Cell[823892, 19811, 1376, 19, 27, "Subsection",ExpressionUUID->"b69f36d3-5536-4358-86b3-b7a3b2c42320"],
Cell[825271, 19832, 2857, 57, 201, "Text",ExpressionUUID->"8b545b26-d580-411b-9716-ea80f5d1e84a"],
Cell[828131, 19891, 2380, 67, 190, "Input",ExpressionUUID->"49dd5967-4039-4945-b1cf-b741c7adbaf5"],
Cell[830514, 19960, 2014, 52, 148, "Input",ExpressionUUID->"09a163e3-8006-4622-a437-513c4fa8d18c"],
Cell[832531, 20014, 1379, 40, 108, "Text",ExpressionUUID->"63c6f099-db25-4bac-994b-8cc9c53b5943"],
Cell[833913, 20056, 2928, 72, 148, "Input",ExpressionUUID->"29f078e8-55be-4041-9cb5-51d516589d07"],
Cell[836844, 20130, 590, 12, 106, "Text",ExpressionUUID->"2d721d4f-446d-4e21-8a2c-e91bc8417562"],
Cell[837437, 20144, 1225, 36, 64, "Input",ExpressionUUID->"b95d1872-14b3-408f-84ce-b5e8e022f2dc"]
}, Closed]],
Cell[CellGroupData[{
Cell[838699, 20185, 1629, 25, 27, "Subsection",ExpressionUUID->"c2f528c1-cd1d-42e7-92c0-441363cb7db8"],
Cell[840331, 20212, 802, 15, 87, "Text",ExpressionUUID->"d6908995-d54b-497e-b02d-82c7d90e4002"],
Cell[841136, 20229, 2433, 63, 169, "Input",ExpressionUUID->"dd0b8032-39da-449f-a9e7-4564a22070ea"],
Cell[843572, 20294, 1520, 27, 125, "Text",ExpressionUUID->"15639848-6f8f-43ea-86c7-98ed9e313e9e"],
Cell[845095, 20323, 7064, 169, 484, "Input",ExpressionUUID->"1d014c72-c119-41c7-9e25-73a3f18ed826"],
Cell[852162, 20494, 1930, 43, 125, "Text",ExpressionUUID->"90714386-c16a-4d49-ba09-76a7e3fbf109"],
Cell[854095, 20539, 1190, 33, 42, "Input",ExpressionUUID->"2013823c-8e33-4d62-aa09-308517a6caf9"],
Cell[855288, 20574, 1036, 23, 68, "Text",ExpressionUUID->"c4a68aa8-9f57-4f86-838b-d6d5b545eeba"],
Cell[856327, 20599, 743, 20, 42, "Input",ExpressionUUID->"429df386-fb51-4765-837b-c3af0d80fbb8"]
}, Closed]],
Cell[CellGroupData[{
Cell[857107, 20624, 1754, 26, 27, "Subsection",ExpressionUUID->"8cdbfbbb-475d-40ab-ab5e-86851deabb65"],
Cell[858864, 20652, 1000, 18, 87, "Text",ExpressionUUID->"2166b941-772f-4c1d-9534-afa12bbc4545"],
Cell[859867, 20672, 2076, 53, 148, "Input",ExpressionUUID->"271b7ecc-c0d5-4e87-b505-7a75c0d7d6b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[861980, 20730, 1660, 24, 27, "Subsection",ExpressionUUID->"2d19c15d-4b15-43d7-aabf-ccddc45df391"],
Cell[863643, 20756, 4622, 114, 391, "Text",ExpressionUUID->"6329d3ad-317b-4946-a89d-2ea1cba1c77d"],
Cell[868268, 20872, 5164, 128, 274, "Input",ExpressionUUID->"6710acd0-8f7b-400b-8327-a78eb5b3ab44"],
Cell[873435, 21002, 2048, 48, 129, "Input",ExpressionUUID->"05ae2894-00bb-4ae3-a4fa-eec6be7db37e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[875532, 21056, 454, 9, 42, "Section",ExpressionUUID->"0d01f61e-5bcc-4a6e-9ea6-bcc2baea3e19"],
Cell[CellGroupData[{
Cell[876011, 21069, 790, 13, 35, "Subsection",ExpressionUUID->"6a060a52-fa70-49e2-85a4-ac441d6ba341"],
Cell[CellGroupData[{
Cell[876826, 21086, 161, 3, 25, "Subsubsection",ExpressionUUID->"bf3f90e0-272f-4640-948f-3368fec1a995"],
Cell[876990, 21091, 2843, 69, 201, "Text",ExpressionUUID->"cd1830d3-dc78-4b35-b110-b3b3e50c3693"],
Cell[879836, 21162, 1117, 32, 46, "Input",ExpressionUUID->"e3de5fc2-61e2-46f5-af10-155ab75eaed1"]
}, Closed]],
Cell[CellGroupData[{
Cell[880990, 21199, 218, 4, 19, "Subsubsection",ExpressionUUID->"35126af4-284c-4849-84ac-594c53c8f3f5"],
Cell[881211, 21205, 7494, 207, 246, "Text",ExpressionUUID->"5d0f7fe0-9773-4ab3-aef6-674276c3b7a9"],
Cell[888708, 21414, 2120, 57, 109, "Input",ExpressionUUID->"f32d9eb6-e6c2-41a4-a00b-d032da74b987"]
}, Closed]],
Cell[CellGroupData[{
Cell[890865, 21476, 536, 11, 19, "Subsubsection",ExpressionUUID->"05aacd99-0485-4a61-9d22-3a6ed2171a23"],
Cell[891404, 21489, 5693, 142, 223, "Text",ExpressionUUID->"6e964f16-a2da-4a2d-bf47-698f2172d3d8"],
Cell[897100, 21633, 383, 9, 42, "Input",ExpressionUUID->"d98d9c3e-fea3-4876-9077-52d9562c51c3"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[897532, 21648, 1532, 22, 35, "Subsection",ExpressionUUID->"8216f6e9-4909-4cd0-ba1f-dbcd30a702c5"],
Cell[899067, 21672, 1955, 48, 186, "Text",ExpressionUUID->"d1a679ff-288b-4350-afb2-615232767528"],
Cell[901025, 21722, 1793, 49, 127, "Input",ExpressionUUID->"d002efbe-2ad3-494c-8e4b-42653b9d8c8e"]
}, Closed]],
Cell[CellGroupData[{
Cell[902855, 21776, 739, 12, 27, "Subsection",ExpressionUUID->"8e8ef6ef-2113-4e18-bc89-de1012619627"],
Cell[903597, 21790, 48419, 994, 506, "Text",ExpressionUUID->"d6213a91-80a7-43dd-ac07-db6bc49058a8"],
Cell[952019, 22786, 4422, 76, 106, "Input",ExpressionUUID->"fc716f09-a14d-4d03-9553-656fe3fee5d3"],
Cell[956444, 22864, 18776, 454, 1156, "Input",ExpressionUUID->"f7b4fd04-c9fc-425b-8b2f-223510d68909"]
}, Closed]],
Cell[CellGroupData[{
Cell[975257, 23323, 949, 15, 27, "Subsection",ExpressionUUID->"0ce6f10f-ec27-4e8b-8ca4-48f3f5bd37ce"],
Cell[976209, 23340, 10259, 214, 167, "Text",ExpressionUUID->"3fafbb08-b1af-4b3b-9d6e-d7e25c98383f"],
Cell[986471, 23556, 2552, 61, 211, "Input",ExpressionUUID->"13324f0d-c121-44dd-9db7-dd3291ed0ca0"],
Cell[989026, 23619, 2367, 75, 144, "Text",ExpressionUUID->"0155a962-fc7e-47a4-b4d8-b27cb05502d5"],
Cell[991396, 23696, 1182, 28, 64, "Input",ExpressionUUID->"b128fdc6-bd21-4852-83fa-a2d69e8ea628"],
Cell[992581, 23726, 1534, 37, 72, "Text",ExpressionUUID->"28dea554-32e0-4814-a70b-b574c832f9b0"],
Cell[994118, 23765, 1602, 40, 127, "Input",ExpressionUUID->"29559342-77c9-4296-800a-4e92ff33a6ab"],
Cell[995723, 23807, 1284, 28, 68, "Text",ExpressionUUID->"8f4becc5-7e82-45f0-b725-1fee3f2325f3"],
Cell[997010, 23837, 1131, 29, 64, "Input",ExpressionUUID->"3b734718-6fe5-405a-b96f-8874917c1ddd"]
}, Closed]],
Cell[CellGroupData[{
Cell[998178, 23871, 797, 13, 27, "Subsection",ExpressionUUID->"709b9046-91aa-441e-9770-1dcf7db44751"],
Cell[998978, 23886, 10895, 230, 314, "Text",ExpressionUUID->"ec21ab95-bdcb-4618-a572-e597d66126bb"],
Cell[1009876, 24118, 3969, 91, 148, "Input",ExpressionUUID->"c6a89a16-9232-4393-a483-80daf04e0649"],
Cell[1013848, 24211, 20089, 396, 467, "Text",ExpressionUUID->"91150ba9-3d1c-4378-aee3-7e7140a3d52a"],
Cell[1033940, 24609, 3749, 103, 232, "Input",ExpressionUUID->"b13f1bae-f15e-420f-9175-cfadd6f8a254"]
}, Closed]],
Cell[CellGroupData[{
Cell[1037726, 24717, 773, 12, 27, "Subsection",ExpressionUUID->"96dac0d5-e9a7-4e49-a25a-43b07253a9b3"],
Cell[1038502, 24731, 11446, 231, 379, "Text",ExpressionUUID->"be091cb6-9ada-42a0-b5e8-6107e72b5736"],
Cell[1049951, 24964, 3902, 89, 232, "Input",ExpressionUUID->"7e3cc3ee-cc7d-44c3-aaf8-2f5c5e1ed403"]
}, Closed]],
Cell[CellGroupData[{
Cell[1053890, 25058, 796, 13, 27, "Subsection",ExpressionUUID->"aba3a76f-9246-4c5b-9064-d6aebacae46c"],
Cell[1054689, 25073, 83437, 1600, 1004, "Text",ExpressionUUID->"6527e169-61d2-4067-a0a0-edd083b8ec68"],
Cell[1138129, 26675, 7029, 177, 463, "Input",ExpressionUUID->"8495ec63-240d-427c-b68c-1365b01fc1bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[1145195, 26857, 1037, 17, 43, "Subsection",ExpressionUUID->"6cb053e4-46a5-453c-86fd-10eaba1bec0c"],
Cell[1146235, 26876, 1839, 38, 144, "Text",ExpressionUUID->"5aac6b25-d193-4e0c-8d0e-099f7697b48e"],
Cell[1148077, 26916, 625, 16, 64, "Input",ExpressionUUID->"50c910e8-79d5-42ee-bcfd-062f5da98905"],
Cell[1148705, 26934, 727, 18, 64, "Input",ExpressionUUID->"c9dd0faa-1a1b-4324-8e17-3326c33b2bbd"],
Cell[1149435, 26954, 1191, 32, 64, "Input",ExpressionUUID->"d9c51927-9524-4783-ae48-16ae5a416888"]
}, Closed]],
Cell[CellGroupData[{
Cell[1150663, 26991, 895, 14, 27, "Subsection",ExpressionUUID->"2a7240a1-2a93-42c9-b3e3-20f572c9872d"],
Cell[1151561, 27007, 1429, 29, 49, "Text",ExpressionUUID->"74c7592a-f83b-4b6e-8ff3-c5a283b05614"],
Cell[1152993, 27038, 5221, 131, 463, "Input",ExpressionUUID->"663862e2-b4b7-45b4-a272-5d8678765216"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1158263, 27175, 484, 9, 42, "Section",ExpressionUUID->"226cd4e4-b245-4ba3-af15-860a27666c15"],
Cell[CellGroupData[{
Cell[1158772, 27188, 1607, 24, 34, "Subsection",ExpressionUUID->"e81a9b9b-855d-41d8-b725-20f71dcdddf6"],
Cell[1160382, 27214, 2498, 69, 229, "Text",ExpressionUUID->"0489b3d4-e732-434c-8e74-193bfbcd03f3"],
Cell[1162883, 27285, 16182, 406, 1128, "Input",ExpressionUUID->"a97e8742-cce6-42b6-bd71-377ccedd0b1f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1179102, 27696, 1763, 25, 26, "Subsection",ExpressionUUID->"50cb924e-8504-4c82-acc3-4295514e8339"],
Cell[1180868, 27723, 1396, 30, 101, "Text",ExpressionUUID->"a6350b04-53e8-4a49-93d6-09b10b3e9af3"],
Cell[1182267, 27755, 12467, 335, 716, "Input",ExpressionUUID->"ad105543-3942-492f-8cf4-40192c2bd937"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1194783, 28096, 271, 4, 42, "Section",ExpressionUUID->"b8605c40-c333-446b-8ede-38164eb6601f"],
Cell[CellGroupData[{
Cell[1195079, 28104, 266, 4, 34, "Subsection",ExpressionUUID->"fb483c8a-0cdd-4e6b-892b-7a6163b2b64e"],
Cell[1195348, 28110, 5711, 145, 302, "Text",ExpressionUUID->"2e00ac56-746b-4098-814f-bebb5c0f245a"],
Cell[1201062, 28257, 3163, 79, 169, "Input",ExpressionUUID->"caf40da6-1513-4cf7-b802-f5b1babd590e"],
Cell[1204228, 28338, 7279, 187, 421, "Input",ExpressionUUID->"f04151c4-550f-4b24-83ae-8bc912581a7d"],
Cell[1211510, 28527, 2525, 61, 127, "Input",ExpressionUUID->"9d98227b-76e0-4c62-9081-3297c2ef980d"],
Cell[1214038, 28590, 1994, 52, 211, "Input",ExpressionUUID->"e21b9500-85e8-479e-b959-cd26380483f5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1216069, 28647, 306, 5, 26, "Subsection",ExpressionUUID->"90d4bddf-ecb1-4778-b1b5-233602ed6f33"],
Cell[1216378, 28654, 3991, 109, 106, "Text",ExpressionUUID->"0fe82598-c6d0-4b60-a277-371cabf0f8fa"],
Cell[1220372, 28765, 3710, 92, 190, "Input",ExpressionUUID->"93d9221f-2d61-4eab-b7d0-8e11fa122e3c"],
Cell[1224085, 28859, 5159, 121, 169, "Input",ExpressionUUID->"093b298b-9f25-4cf1-bc91-ceb4ebb142c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1229281, 28985, 474, 7, 26, "Subsection",ExpressionUUID->"66f5b1a7-4ac4-4757-9e74-d74c80f95ffe"],
Cell[1229758, 28994, 1593, 46, 30, "Text",ExpressionUUID->"4f4d4c2b-2819-4c63-a9d3-9ab46458f776"],
Cell[1231354, 29042, 2211, 58, 169, "Input",ExpressionUUID->"b954b1f1-29e0-4aad-88e4-3bfc333277ba"]
}, Closed]],
Cell[CellGroupData[{
Cell[1233602, 29105, 244, 8, 26, "Subsection",ExpressionUUID->"c301e76b-9d1a-40ee-9b7b-5884dea40273"],
Cell[1233849, 29115, 460, 10, 68, "Text",ExpressionUUID->"848cc5ff-9466-4eb8-b34c-15ee7a60924c"],
Cell[1234312, 29127, 1104, 30, 64, "Input",ExpressionUUID->"6fe6808e-3e8c-4c43-bb7b-2d12ecaf854f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1235453, 29162, 215, 4, 26, "Subsection",ExpressionUUID->"c1fd9657-f3e5-48f2-9f1e-e4122556e5fd"],
Cell[1235671, 29168, 1283, 24, 49, "Text",ExpressionUUID->"15d41464-61c4-4846-bc21-eec38a056861"],
Cell[1236957, 29194, 731, 18, 64, "Input",ExpressionUUID->"295aed9a-d5bb-4817-8a9b-44a812a200ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[1237725, 29217, 311, 5, 26, "Subsection",ExpressionUUID->"a6fc7344-3714-4458-95a1-4181181ca320"],
Cell[1238039, 29224, 1544, 27, 49, "Text",ExpressionUUID->"244da615-6a90-4c01-a3dd-3fc1ddb4f16e"],
Cell[1239586, 29253, 3713, 98, 196, "Input",ExpressionUUID->"5e8206c0-9f5c-4257-8313-20c0d2e7655f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1243336, 29356, 89, 0, 26, "Subsection",ExpressionUUID->"3bcb8f8b-e02e-4553-a90c-0460138f70b0"],
Cell[1243428, 29358, 1120, 25, 106, "Text",ExpressionUUID->"81c0b7d0-e9fa-4f8c-a250-be3c1508c832"],
Cell[1244551, 29385, 912, 26, 45, "Input",ExpressionUUID->"09fc59ee-9c19-4ee1-a240-dcd80e98ac1c"],
Cell[1245466, 29413, 850, 24, 45, "Input",ExpressionUUID->"14aebb1f-1bc8-45c1-9989-c2521e1997e7"],
Cell[1246319, 29439, 584, 14, 42, "Input",ExpressionUUID->"5c885408-77e4-4853-83e1-ca2f4262badf"],
Cell[1246906, 29455, 129, 2, 30, "Text",ExpressionUUID->"6571961e-d4a4-4219-b785-b9e5de82d538"],
Cell[1247038, 29459, 1400, 42, 66, "Input",ExpressionUUID->"2becaff6-5678-4075-9919-bb4559d8ef76"]
}, Closed]],
Cell[CellGroupData[{
Cell[1248475, 29506, 97, 0, 26, "Subsection",ExpressionUUID->"284339bc-1344-4cab-9d99-e3aa8aff4bd0"],
Cell[1248575, 29508, 1065, 23, 163, "Text",ExpressionUUID->"b1d3aed3-cf48-4809-9d36-05cc4685ebfb"],
Cell[1249643, 29533, 2882, 86, 85, "Input",ExpressionUUID->"070ff9bc-93ec-4fe6-9d74-cdd587e16cd4"],
Cell[1252528, 29621, 417, 11, 42, "Input",ExpressionUUID->"dce0b75d-59ad-4f0e-b333-1b7435d256bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[1252982, 29637, 323, 6, 26, "Subsection",ExpressionUUID->"1e96eff1-75b9-4f5e-86f2-d93ede9d35f5"],
Cell[1253308, 29645, 3091, 73, 220, "Text",ExpressionUUID->"a204a7f7-7987-4bb7-a5a0-e9073c5a56ac"],
Cell[1256402, 29720, 4428, 97, 207, "Input",ExpressionUUID->"b3d66eb3-c9d9-410e-83db-d74438e086ee"],
Cell[1260833, 29819, 4588, 101, 179, "Input",ExpressionUUID->"7263a54b-2bf8-48b9-9c1b-b2d7cb64f73e"],
Cell[1265424, 29922, 1830, 33, 182, "Text",ExpressionUUID->"9614afa6-674a-4850-bb73-928d8fb6823c"],
Cell[1267257, 29957, 11744, 256, 554, "Input",ExpressionUUID->"8f23bc96-46cb-4d34-9cfe-c53fa30db720"]
}, Closed]],
Cell[CellGroupData[{
Cell[1279038, 30218, 258, 6, 26, "Subsection",ExpressionUUID->"94492374-fe61-4fbb-986f-4a8c491bda89"],
Cell[1279299, 30226, 654, 23, 87, "Text",ExpressionUUID->"cee68add-214d-414a-a954-a597abc0da08"],
Cell[1279956, 30251, 1832, 46, 112, "Input",ExpressionUUID->"b95a9e1a-1d2a-4576-9f98-ab6c2b022825"],
Cell[1281791, 30299, 2583, 66, 216, "Text",ExpressionUUID->"2f64882e-d36b-4d3d-a937-6551d2fde9eb"],
Cell[1284377, 30367, 2414, 60, 205, "Input",ExpressionUUID->"a8f14579-31d3-4076-b3e9-0cab21b9619e"],
Cell[1286794, 30429, 1086, 35, 125, "Text",ExpressionUUID->"c909b311-b3a0-4d10-9900-c39aa36e6ec9"],
Cell[1287883, 30466, 1574, 43, 85, "Input",ExpressionUUID->"300aacb4-7192-4436-8473-1369d0b1bf02"],
Cell[1289460, 30511, 2210, 48, 258, "Text",ExpressionUUID->"27f5ac63-7153-4377-8be7-e33e7e71bb9a"],
Cell[1291673, 30561, 4647, 114, 244, "Input",ExpressionUUID->"27da23dc-d7aa-4d29-95d9-4c322da43a05"],
Cell[1296323, 30677, 289, 8, 49, "Text",ExpressionUUID->"7527c3be-c1b8-4064-907b-5454bd595a88"],
Cell[1296615, 30687, 4332, 103, 295, "Input",ExpressionUUID->"8a85ca80-056b-4e69-828f-64f0aeee60c4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1300984, 30795, 400, 6, 26, "Subsection",ExpressionUUID->"d9648a9c-87a8-4be5-b581-c9cdcd3837ea"],
Cell[1301387, 30803, 1050, 16, 30, "Text",ExpressionUUID->"18ebe1c4-a5da-41f2-a1f0-dc6c380e06e9"],
Cell[1302440, 30821, 1436, 36, 64, "Input",ExpressionUUID->"eb3a0d41-5d29-451f-bba0-2721654ecc70"]
}, Closed]],
Cell[CellGroupData[{
Cell[1303913, 30862, 402, 6, 26, "Subsection",ExpressionUUID->"31bbbb38-3eec-4a78-ab3f-b7d17aa96a2e"],
Cell[1304318, 30870, 1315, 27, 68, "Text",ExpressionUUID->"ff28c7ed-120a-46c2-87ca-5e36c0859e6e"],
Cell[1305636, 30899, 3164, 64, 64, "Input",ExpressionUUID->"3702389f-f3fc-4e29-9494-c88938043169"]
}, Closed]],
Cell[CellGroupData[{
Cell[1308837, 30968, 159, 3, 26, "Subsection",ExpressionUUID->"2e86c404-f3cb-42c1-9ecf-27b3dcbf6520"],
Cell[1308999, 30973, 1756, 55, 30, "Text",ExpressionUUID->"011f6207-befc-412b-8ae3-b3e85fd246ce"],
Cell[1310758, 31030, 1075, 28, 42, "Input",ExpressionUUID->"b635cb3d-a42e-4fa7-864b-5faaf0240819"]
}, Closed]],
Cell[CellGroupData[{
Cell[1311870, 31063, 280, 5, 26, "Subsection",ExpressionUUID->"3e18b540-e190-40e5-82a1-26563247963c"],
Cell[1312153, 31070, 2585, 66, 49, "Text",ExpressionUUID->"51caebd7-7682-4f0d-ba91-b8d3126f3f31"],
Cell[1314741, 31138, 1387, 36, 64, "Input",ExpressionUUID->"d4d07f07-6919-4b2a-9345-26adade7f817"]
}, Closed]],
Cell[CellGroupData[{
Cell[1316165, 31179, 214, 4, 26, "Subsection",ExpressionUUID->"9a4e605e-7c88-46c0-9368-6fec6c42c724"],
Cell[1316382, 31185, 4508, 126, 144, "Text",ExpressionUUID->"4904f319-bc83-4f07-a6ff-dfddb677df4e"],
Cell[1320893, 31313, 5426, 135, 295, "Input",ExpressionUUID->"19801db8-a28c-415a-82f9-4bc88c8309b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[1326356, 31453, 260, 4, 26, "Subsection",ExpressionUUID->"7cf1ede9-3dc5-4358-b983-b4ad2e1f5a08"],
Cell[1326619, 31459, 5112, 136, 300, "Text",ExpressionUUID->"8b5541c1-e4c0-4e8e-b173-0b50121d6ee8"],
Cell[1331734, 31597, 3656, 92, 211, "Input",ExpressionUUID->"f8332cfb-118a-41ae-a5cc-7d4e6e48d7b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1335427, 31694, 166, 3, 26, "Subsection",ExpressionUUID->"131d1cd6-af2f-4ebb-a3d4-cbf4ec306007"],
Cell[CellGroupData[{
Cell[1335618, 31701, 279, 6, 26, "Subsubsection",ExpressionUUID->"50725f5b-641a-4501-a4cd-b123a64b56f8"],
Cell[1335900, 31709, 1466, 28, 163, "Text",ExpressionUUID->"40e75df3-89dd-4faf-950a-2157aa4c62ff"],
Cell[1337369, 31739, 2475, 67, 106, "Input",ExpressionUUID->"f65b19e5-0430-4fd0-afcd-33103b222c6f"],
Cell[1339847, 31808, 3406, 87, 190, "Input",ExpressionUUID->"ac5581b2-f44a-458a-995a-2f6114bf4c82"]
}, Closed]],
Cell[CellGroupData[{
Cell[1343290, 31900, 141, 2, 20, "Subsubsection",ExpressionUUID->"753a3a23-6b0a-49fa-a62d-b6399762d884"],
Cell[1343434, 31904, 166, 2, 30, "Text",ExpressionUUID->"b3ac961b-9ad1-4992-a066-12c4266cb9d2"],
Cell[1343603, 31908, 509, 14, 42, "Input",ExpressionUUID->"29116f37-8737-4b23-b34a-26ae398d86a5"],
Cell[1344115, 31924, 516, 15, 61, "Input",ExpressionUUID->"07775c3e-b087-488d-8917-2d9e4561cc6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1344668, 31944, 136, 2, 20, "Subsubsection",ExpressionUUID->"ba948599-1067-4e5f-b86a-210cb167cde4"],
Cell[1344807, 31948, 1940, 35, 353, "Text",ExpressionUUID->"661e9c04-7881-4dde-ae87-b6756ee63140"],
Cell[1346750, 31985, 954, 30, 64, "Input",ExpressionUUID->"600e3cb1-74ea-4756-87c8-77564a7fae87"],
Cell[1347707, 32017, 1216, 37, 64, "Input",ExpressionUUID->"e5315ff5-4421-4b5f-8b8e-a33250e0ec47"],
Cell[1348926, 32056, 1315, 38, 64, "Input",ExpressionUUID->"69bb7eb0-2c77-49e8-8f23-e5b55ea885b0"],
Cell[1350244, 32096, 3103, 87, 156, "Input",ExpressionUUID->"d7cdf3be-382e-49d3-8dab-3d2a1d9f8064"],
Cell[1353350, 32185, 2802, 76, 216, "Input",ExpressionUUID->"4b1f0148-650f-4bc4-821b-a0bc0d2b2566"],
Cell[1356155, 32263, 2890, 79, 216, "Input",ExpressionUUID->"a10d7ce8-533e-423b-9a53-793f7d436de4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1359082, 32347, 146, 2, 20, "Subsubsection",ExpressionUUID->"18ad5643-fe09-4e74-8e33-5d16a28c5b83"],
Cell[1359231, 32351, 367, 9, 30, "Text",ExpressionUUID->"8854ffe0-7be9-451a-a01e-e7c9af4fe031"],
Cell[1359601, 32362, 765, 21, 94, "Input",ExpressionUUID->"b1d3a375-bc8f-4bfc-ab65-1fd930b91e2d"],
Cell[1360369, 32385, 634, 19, 64, "Input",ExpressionUUID->"3ce82d53-b3ae-4d92-a566-fd02feabb4b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1361040, 32409, 158, 2, 20, "Subsubsection",ExpressionUUID->"fa968454-bf7c-49dc-a14d-9c0ab1c51930"],
Cell[1361201, 32413, 2858, 79, 85, "Input",ExpressionUUID->"6e2e96b7-bb17-4d72-b38b-1dd6dfde8498"],
Cell[1364062, 32494, 883, 27, 66, "Input",ExpressionUUID->"75d33f37-cb49-42b9-b6d4-78162e5991b9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1364982, 32526, 152, 2, 20, "Subsubsection",ExpressionUUID->"f2bc2212-75cb-4f3f-a8ea-228952a48d01"],
Cell[1365137, 32530, 2190, 54, 171, "Input",ExpressionUUID->"69db24a2-9e9b-4610-825f-36f437f1f52f"],
Cell[1367330, 32586, 4473, 110, 219, "Input",ExpressionUUID->"bd261c61-b019-44e1-98da-fd118165357f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1371840, 32701, 155, 2, 20, "Subsubsection",ExpressionUUID->"52c35891-908b-4dd1-aa7d-d6b723a81b96"],
Cell[1371998, 32705, 367, 9, 30, "Text",ExpressionUUID->"04db76ed-76a7-44d3-a561-753a76be5550"],
Cell[1372368, 32716, 4007, 101, 174, "Input",ExpressionUUID->"2d2db05e-a30f-4fc6-a495-1463ed5f056d"],
Cell[1376378, 32819, 650, 19, 64, "Input",ExpressionUUID->"32d4663f-9535-4f4c-8c99-b7788ad00017"]
}, Closed]],
Cell[CellGroupData[{
Cell[1377065, 32843, 152, 2, 20, "Subsubsection",ExpressionUUID->"0a0cfb4c-582c-40ae-aa02-c058a7b984ca"],
Cell[1377220, 32847, 1404, 39, 147, "Input",ExpressionUUID->"a3e4bd2a-0c69-4903-ac34-91b60a79207b"],
Cell[1378627, 32888, 522, 16, 63, "Input",ExpressionUUID->"8cc9caa3-32e3-4089-b2d3-65046d074f55"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1379198, 32910, 204, 3, 34, "Subsection",ExpressionUUID->"7593d931-65a4-47ad-b765-3ed23e3317b9"],
Cell[CellGroupData[{
Cell[1379427, 32917, 534, 13, 26, "Subsubsection",ExpressionUUID->"f371d1b9-3fe3-4937-8e74-3610400d3f42"],
Cell[1379964, 32932, 2070, 43, 220, "Text",ExpressionUUID->"7bda0016-0326-446d-9622-d740eb8ebb90"],
Cell[1382037, 32977, 4167, 99, 295, "Input",ExpressionUUID->"88f09886-6c53-47d7-a85d-3237e030e2f7"],
Cell[1386207, 33078, 1081, 21, 182, "Text",ExpressionUUID->"3f6c0202-1750-4395-a375-4b34d22f27c8"],
Cell[1387291, 33101, 11435, 250, 379, "Input",ExpressionUUID->"749fa2e7-5a3a-4e63-9e6e-cb8cc89fb40f"],
Cell[1398729, 33353, 905, 19, 49, "Text",ExpressionUUID->"e4f86f26-de0c-4ac5-b33d-1dfb267eec68"],
Cell[1399637, 33374, 1531, 34, 85, "Input",ExpressionUUID->"1ed1e9a6-0ede-46e6-8ac6-ab068570b466"],
Cell[1401171, 33410, 1016, 20, 49, "Text",ExpressionUUID->"4e58a997-e675-4472-99a3-daaedfb5b230"],
Cell[1402190, 33432, 3549, 87, 295, "Input",ExpressionUUID->"f8c0db5c-ea3e-4292-badf-d3e6e0b39ec7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1405776, 33524, 458, 8, 21, "Subsubsection",ExpressionUUID->"922691b5-e96b-4876-aaf0-b19e680bd460"],
Cell[1406237, 33534, 6193, 152, 273, "Text",ExpressionUUID->"221bd82e-1e7b-4d09-b599-22cd6ecf00c3"],
Cell[1412433, 33688, 5565, 144, 295, "Input",ExpressionUUID->"aa0cec6f-8079-48e1-87c4-ccf1ba65aace"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418047, 33838, 468, 8, 35, "Subsection",ExpressionUUID->"58eb140e-1063-4a60-b0ae-929ca410df70"],
Cell[1418518, 33848, 4024, 110, 207, "Text",ExpressionUUID->"40b433cc-ac03-4d7f-88a0-fa6b4d9ce5c7"],
Cell[1422545, 33960, 862, 20, 106, "Input",ExpressionUUID->"5dd17e8f-bef9-434c-aa6e-42e11999768c"],
Cell[1423410, 33982, 972, 27, 64, "Input",ExpressionUUID->"88fd0f67-3f94-4ebe-956d-4041aae07772"],
Cell[1424385, 34011, 864, 25, 64, "Input",ExpressionUUID->"15754cf2-e756-459d-913a-c8fb6115cb95"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1425298, 34042, 242, 5, 42, "Section",ExpressionUUID->"054d4c40-956f-482a-a8d1-01fa193d8d12"],
Cell[CellGroupData[{
Cell[1425565, 34051, 107, 0, 35, "Subsection",ExpressionUUID->"0e6a3d59-428b-4b79-a2b5-b0508ec2101e"],
Cell[1425675, 34053, 2385, 69, 189, "Text",ExpressionUUID->"7a6f3084-96f1-4dee-b109-96f18c0c31cd"],
Cell[1428063, 34124, 3613, 96, 175, "Input",ExpressionUUID->"2752b94d-70c4-474b-8962-0bc3ff2b2cb2"],
Cell[1431679, 34222, 1285, 45, 125, "Text",ExpressionUUID->"3c8b4129-2df7-43d0-b214-8851d99295d8"],
Cell[1432967, 34269, 1698, 46, 106, "Input",ExpressionUUID->"7b4c8110-806a-463c-a223-1739e80c2e13"]
}, Closed]],
Cell[CellGroupData[{
Cell[1434702, 34320, 191, 3, 27, "Subsection",ExpressionUUID->"3045f9d2-5fb5-4c58-9ee8-196ee8426f2c"],
Cell[1434896, 34325, 262, 6, 30, "Text",ExpressionUUID->"c8c93458-4e69-49e1-9405-ce1cf84820e8"],
Cell[1435161, 34333, 491, 14, 64, "Input",ExpressionUUID->"66d52623-183e-4607-bf81-103d3e58562c"]
}, Closed]],
Cell[CellGroupData[{
Cell[1435689, 34352, 113, 0, 27, "Subsection",ExpressionUUID->"fa6365a1-2ca1-40f6-aee3-a6cb7ecea87f"],
Cell[1435805, 34354, 514, 19, 30, "Text",ExpressionUUID->"76e33e22-d816-440b-be7d-d77c1c1620f9"],
Cell[1436322, 34375, 5878, 133, 274, "Input",ExpressionUUID->"f6863726-c1a1-4b8b-b6d9-7cb04e240dd0"]
}, Closed]],
Cell[CellGroupData[{
Cell[1442237, 34513, 125, 0, 27, "Subsection",ExpressionUUID->"28f983bd-0810-4722-bf1c-e936478e7cbb"],
Cell[1442365, 34515, 3786, 92, 372, "Text",ExpressionUUID->"43d4f2d0-14d0-49d0-a662-5a114e71eba9"],
Cell[1446154, 34609, 4618, 116, 211, "Input",ExpressionUUID->"34421639-855d-4cf9-805b-bc4dcbcfae4c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1450821, 34731, 226, 3, 42, "Section",ExpressionUUID->"22fb3ec3-6816-4c95-bbf4-1d1d50be9882"],
Cell[CellGroupData[{
Cell[1451072, 34738, 1291, 18, 35, "Subsection",ExpressionUUID->"cbf1d016-e9c6-45f4-b66c-f72825d81dff"],
Cell[1452366, 34758, 6442, 163, 558, "Text",ExpressionUUID->"808ad1e1-3b8f-4c2a-bb52-cfafdddb27d4"],
Cell[1458811, 34923, 5256, 125, 316, "Input",ExpressionUUID->"709994a5-c0aa-49fb-99c7-936b37e2722f"],
Cell[1464070, 35050, 469, 8, 49, "Text",ExpressionUUID->"1b6715a7-7e4d-455d-8b1d-dc490efbd465"],
Cell[1464542, 35060, 552, 15, 42, "Input",ExpressionUUID->"0bd94125-9b31-4d1d-9ff6-cdc931b85f01"],
Cell[1465097, 35077, 1329, 34, 125, "Text",ExpressionUUID->"705caf1c-3a36-4bc6-86f5-f755f4fd4c7d"],
Cell[1466429, 35113, 1534, 42, 85, "Input",ExpressionUUID->"32a8b600-9058-4b4a-9f56-53ef24a4761f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1468000, 35160, 1377, 22, 27, "Subsection",ExpressionUUID->"52c3bf48-99a4-4daf-aaad-ab67ad3badc7"],
Cell[1469380, 35184, 2268, 48, 225, "Text",ExpressionUUID->"06ed10b5-80b8-4404-993d-d1f37e4fbe2e"],
Cell[1471651, 35234, 6633, 164, 442, "Input",ExpressionUUID->"d478a4e2-a0f4-4401-9fcb-a3ff568ab9d0"],
Cell[1478287, 35400, 1165, 22, 106, "Text",ExpressionUUID->"32cb0f3a-d793-40b5-860f-db1858c69e55"],
Cell[1479455, 35424, 1652, 49, 85, "Input",ExpressionUUID->"c55ff303-109c-4361-b219-1be14f9d7abc"]
}, Closed]],
Cell[CellGroupData[{
Cell[1481144, 35478, 1364, 22, 27, "Subsection",ExpressionUUID->"7514c03c-39e8-4076-bf48-d4ab65833f4c"],
Cell[1482511, 35502, 921, 21, 87, "Text",ExpressionUUID->"39baa570-2d08-4063-9ed8-b9f7161ae621"],
Cell[1483435, 35525, 6261, 154, 442, "Input",ExpressionUUID->"94f05cbe-ce0b-4d5f-ac4e-15c84e5b5846"]
}, Closed]],
Cell[CellGroupData[{
Cell[1489733, 35684, 1387, 22, 27, "Subsection",ExpressionUUID->"14cb1745-1244-4f40-85f6-02243ff918a3"],
Cell[1491123, 35708, 2278, 39, 319, "Text",ExpressionUUID->"cc771163-bab8-465c-8206-1d37fc5f0907"],
Cell[1493404, 35749, 2421, 67, 108, "Input",ExpressionUUID->"bb8ed3dc-250f-494e-bcad-6a6889f3bd09"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1495874, 35822, 209, 4, 42, "Section",ExpressionUUID->"56036a7b-dcd0-4bf1-a721-04aa2a484aa3"],
Cell[1496086, 35828, 815, 19, 30, "Text",ExpressionUUID->"821150e2-dfde-4783-9d29-18e1e2251ba9"],
Cell[1496904, 35849, 719, 18, 106, "Input",ExpressionUUID->"c51682e3-eed9-48a1-8579-347ba8e5e49c"],
Cell[1497626, 35869, 739, 16, 106, "Input",ExpressionUUID->"7e367708-abfe-42ea-ab74-ba64575c2292"],
Cell[1498368, 35887, 592, 16, 30, "Text",ExpressionUUID->"011e7b80-cb1f-4d58-b575-75343fdc7682"],
Cell[1498963, 35905, 837, 20, 106, "Input",ExpressionUUID->"4a70fac9-fa5b-4b2f-afbd-215d20b0e1a6"],
Cell[1499803, 35927, 858, 18, 106, "Input",ExpressionUUID->"41ff1bfd-9a39-4847-86da-c76eaf829a9a"],
Cell[1500664, 35947, 1436, 31, 163, "Text",ExpressionUUID->"f264be26-553e-414c-9d7f-46f2f792b494"],
Cell[1502103, 35980, 1200, 30, 66, "Input",ExpressionUUID->"499d11d5-0485-43a3-8a4c-f9fe7827b130"]
}, Closed]]
}, Open  ]]
}
]
*)

